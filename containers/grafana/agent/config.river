otelcol.receiver.otlp "otel_receiver" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }

  output {
    traces  = [otelcol.processor.batch.otel_batch.input]
  }
}

otelcol.processor.batch "otel_batch" {
  output {
    traces  = [otelcol.processor.tail_sampling.default.input]
  }
}

otelcol.exporter.otlp "otel_exporter" {
  client {
    endpoint = env("GRAFANA_CLOUD_TEMPO_URL")
    auth     = otelcol.auth.basic.creds.handler
  }
}

otelcol.processor.tail_sampling "default" {
  decision_wait               = "10s"
  num_traces                  = 100
  expected_new_traces_per_sec = 10

  output {
    traces = [otelcol.exporter.otlp.otel_exporter.input]
  }

  policy {
    name = "keep-errors"
    type = "status_code"

    status_code {
      status_codes = ["ERROR", "UNSET"]
    }
  }

  policy {
    name = "probabilistic"
    type = "probabilistic"

    probabilistic {
      sampling_percentage = 0.001
    }
  }  

  policy {
    name = "filter-noisy-http"
    type = "string_attribute"

    string_attribute {
      key                    = "http.url"
      values                 = ["/health", "/metrics"]
      enabled_regex_matching = true
      invert_match           = true
    }
  }  

}

otelcol.auth.basic "creds" {
  username = env("GRAFANA_CLOUD_API_USER")
  password = env("GRAFANA_CLOUD_API_KEY")
}

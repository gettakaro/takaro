version: '3.1'

services:
  postgresql:
    image: postgres:15
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  redis:
    extends:
      file: docker-compose.yml
      service: redis
  kratos:
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql_kratos:5432/${POSTGRES_DB}
    extends:
      file: docker-compose.yml
      service: kratos
  kratos-migrate:
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql_kratos:5432/${POSTGRES_DB}
    extends:
      file: docker-compose.yml
      service: kratos-migrate
  postgresql_kratos:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  hydra:
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql_hydra:5432/${POSTGRES_DB}
    extends:
      file: docker-compose.yml
      service: hydra

  hydra-e2e:
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql_hydra:5432/${POSTGRES_DB}
    extends:
      file: docker-compose.yml
      service: hydra-e2e

  hydra-migrate:
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql_hydra:5432/${POSTGRES_DB}

    extends:
      file: docker-compose.yml
      service: hydra-migrate
  postgresql_hydra:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  takaro:
    container_name: takaro
    build:
      context: .
      dockerfile: containers/takaro/dev.Dockerfile
    command: ['sh']
    environment:
      NODE_OPTIONS: '--loader ts-node/esm'
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: 'postgresql'
      POSTGRES_ENCRYPTION_KEY: ${POSTGRES_ENCRYPTION_KEY}
      REDIS_HOST: 'redis'
      ADMIN_CLIENT_ID: ${ADMIN_CLIENT_ID}
      ADMIN_CLIENT_SECRET: ${ADMIN_CLIENT_SECRET}
      TAKARO_OAUTH_HOST: http://hydra:4444
      TAKARO_HOST: http://takaro_api:3000
      KRATOS_ADMIN_URL: http://kratos:4434
      TEST_HTTP_TARGET: http://takaro_api:3000
      FUNCTIONS_EXECUTION_MODE: 'local'
      MOCK_GAMESERVER_HOST: 'http://takaro_mock_gameserver:3002'

  takaro_api:
    image: ghcr.io/gettakaro/takaro-app-api:${DOCKER_TAG}
    container_name: takaro_api
    volumes:
      - ./reports:/app/reports
    environment:
      LOGGING_LEVEL: debug
      #LOGGING_MINIMAL: "true"
      REDIS_HOST: 'redis'
      JWT_SECRET: '${JWT_SECRET}'
      FUNCTIONS_EXECUTION_MODE: 'local'
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: 'postgresql'
      POSTGRES_ENCRYPTION_KEY: ${POSTGRES_ENCRYPTION_KEY}
      ADMIN_CLIENT_ID: ${ADMIN_CLIENT_ID}
      ADMIN_CLIENT_SECRET: ${ADMIN_CLIENT_SECRET}
      TAKARO_OAUTH_HOST: http://hydra:4444
      TAKARO_HOST: http://takaro_api:3000
      MOCK_GAMESERVER_HOST: http://takaro_mock_gameserver:3002
      CORS_ALLOWED_ORIGINS: http://127.0.0.1:13000,http://127.0.0.1:13001
    ports:
      # api
      - 13000:3000
      - 12001:12001

  takaro_web_main:
    image: ghcr.io/gettakaro/takaro-web-main:${DOCKER_TAG}
    container_name: takaro_web_main
    environment:
      VITE_API: http://127.0.0.1:13000
      VITE_ORY_URL: http://127.0.0.1:4433
    ports:
      - 13001:80
  takaro_mock_gameserver:
    image: ghcr.io/gettakaro/takaro-app-mock-gameserver:${DOCKER_TAG}
    container_name: takaro_mock_gameserver
    environment:
      LOGGING_LEVEL: debug
      REDIS_HOST: 'redis'
    ports:
      - 3002:3002
  takaro_connector:
    image: ghcr.io/gettakaro/takaro-app-connector:${DOCKER_TAG}
    container_name: takaro_connector
    environment:
      LOGGING_LEVEL: debug
      REDIS_HOST: 'redis'
      ADMIN_CLIENT_ID: ${ADMIN_CLIENT_ID}
      ADMIN_CLIENT_SECRET: ${ADMIN_CLIENT_SECRET}
      TAKARO_OAUTH_HOST: http://hydra:4444
      TAKARO_HOST: http://takaro_api:3000
    ports:
      - 3003:3003
  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      # SMTP
      # Doesnt need to be exposed outside the container network
      # But keeping comment for 'documentation purposes'
      #  - 14000:1025
      # Web
      - 8025:8025
    logging:
      driver: none

{"file://node_modules/@takaro/helpers/package.json":"{\"name\":\"@takaro/helpers\",\"types\":\"dist/main.d.ts\"}","file://node_modules/@takaro/helpers/dist/config.d.ts":"interface IHelpersConfig extends IBaseConfig {\n    apiClient: {\n        token: string;\n        url: string;\n    };\n    data: string;\n}\ndeclare const config: Config<IHelpersConfig>;\n{};\n","file://node_modules/@takaro/helpers/dist/getData.d.ts":"declare function getData(): Promise<any>;\n","file://node_modules/@takaro/helpers/dist/getTakaro.d.ts":"declare function getTakaro(data: Record<string, string>): Promise<Client>;\n","file://node_modules/@takaro/helpers/dist/main.d.ts":"{ getTakaro } from './getTakaro.js';\n{ getData } from './getData.js';\n","file://node_modules/@takaro/apiclient/package.json":"{\"name\":\"@takaro/apiclient\",\"types\":\"dist/main.d.ts\"}","file://node_modules/@takaro/apiclient/dist/generated/api.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/**\n *\n * @export\n * @interface APIOutput\n */\ninterface APIOutput {\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof APIOutput\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface BaseEvent\n */\ninterface BaseEvent {\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof BaseEvent\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof BaseEvent\n     */\n    type: BaseEventTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof BaseEvent\n     */\n    msg: string;\n}\ndeclare const BaseEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n};\ntype BaseEventTypeEnum = typeof BaseEventTypeEnum[keyof typeof BaseEventTypeEnum];\n/**\n *\n * @export\n * @interface CommandArgumentCreateDTO\n */\ninterface CommandArgumentCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    type: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    helpText?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    defaultValue?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof CommandArgumentCreateDTO\n     */\n    position?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    commandId: string;\n}\n/**\n *\n * @export\n * @interface CommandArgumentDTOAPI\n */\ninterface CommandArgumentDTOAPI {\n    /**\n     *\n     * @type {CommandArgumentOutputDTO}\n     * @memberof CommandArgumentDTOAPI\n     */\n    data: CommandArgumentOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CommandArgumentDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CommandArgumentOutputDTO\n */\ninterface CommandArgumentOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    type: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    helpText: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    defaultValue?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof CommandArgumentOutputDTO\n     */\n    position: number;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CommandArgumentOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CommandArgumentOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface CommandArgumentUpdateDTO\n */\ninterface CommandArgumentUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentUpdateDTO\n     */\n    type?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentUpdateDTO\n     */\n    helpText?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentUpdateDTO\n     */\n    defaultValue?: string;\n}\n/**\n *\n * @export\n * @interface CommandCreateDTO\n */\ninterface CommandCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    trigger: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    helpText?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    function?: string;\n    /**\n     *\n     * @type {Array<CommandArgumentCreateDTO>}\n     * @memberof CommandCreateDTO\n     */\n    arguments?: Array<CommandArgumentCreateDTO>;\n}\n/**\n *\n * @export\n * @interface CommandExecuteDTOAPI\n */\ninterface CommandExecuteDTOAPI {\n    /**\n     *\n     * @type {CommandOutput}\n     * @memberof CommandExecuteDTOAPI\n     */\n    data: CommandOutput;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CommandExecuteDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CommandExecuteInputDTO\n */\ninterface CommandExecuteInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandExecuteInputDTO\n     */\n    command: string;\n}\n/**\n *\n * @export\n * @interface CommandOutput\n */\ninterface CommandOutput {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutput\n     */\n    rawResult: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof CommandOutput\n     */\n    success: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutput\n     */\n    errorMessage?: string;\n}\n/**\n *\n * @export\n * @interface CommandOutputArrayDTOAPI\n */\ninterface CommandOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<CommandOutputDTO>}\n     * @memberof CommandOutputArrayDTOAPI\n     */\n    data: Array<CommandOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CommandOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CommandOutputDTO\n */\ninterface CommandOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    trigger: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    helpText: string;\n    /**\n     *\n     * @type {FunctionOutputDTO}\n     * @memberof CommandOutputDTO\n     */\n    function: FunctionOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    functionId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {Array<CommandArgumentOutputDTO>}\n     * @memberof CommandOutputDTO\n     */\n    arguments: Array<CommandArgumentOutputDTO>;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CommandOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CommandOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface CommandOutputDTOAPI\n */\ninterface CommandOutputDTOAPI {\n    /**\n     *\n     * @type {CommandOutputDTO}\n     * @memberof CommandOutputDTOAPI\n     */\n    data: CommandOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CommandOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CommandSearchInputAllowedFilters\n */\ninterface CommandSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandSearchInputAllowedFilters\n     */\n    id?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandSearchInputAllowedFilters\n     */\n    moduleId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandSearchInputAllowedFilters\n     */\n    name?: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof CommandSearchInputAllowedFilters\n     */\n    enabled?: boolean;\n}\n/**\n *\n * @export\n * @interface CommandSearchInputDTO\n */\ninterface CommandSearchInputDTO {\n    /**\n     *\n     * @type {CommandSearchInputAllowedFilters}\n     * @memberof CommandSearchInputDTO\n     */\n    filters?: CommandSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof CommandSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof CommandSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof CommandSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandSearchInputDTO\n     */\n    sortDirection?: CommandSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CommandSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const CommandSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype CommandSearchInputDTOSortDirectionEnum = typeof CommandSearchInputDTOSortDirectionEnum[keyof typeof CommandSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface CommandUpdateDTO\n */\ninterface CommandUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandUpdateDTO\n     */\n    trigger?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandUpdateDTO\n     */\n    helpText?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandUpdateDTO\n     */\n    function?: string;\n    /**\n     *\n     * @type {Array<CommandArgumentCreateDTO>}\n     * @memberof CommandUpdateDTO\n     */\n    arguments?: Array<CommandArgumentCreateDTO>;\n}\n/**\n *\n * @export\n * @interface CronJobCreateDTO\n */\ninterface CronJobCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobCreateDTO\n     */\n    temporalValue: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobCreateDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobCreateDTO\n     */\n    function?: string;\n}\n/**\n *\n * @export\n * @interface CronJobOutputArrayDTOAPI\n */\ninterface CronJobOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<CronJobOutputDTO>}\n     * @memberof CronJobOutputArrayDTOAPI\n     */\n    data: Array<CronJobOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CronJobOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CronJobOutputDTO\n */\ninterface CronJobOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobOutputDTO\n     */\n    temporalValue: string;\n    /**\n     *\n     * @type {FunctionOutputDTO}\n     * @memberof CronJobOutputDTO\n     */\n    function: FunctionOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobOutputDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CronJobOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CronJobOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface CronJobOutputDTOAPI\n */\ninterface CronJobOutputDTOAPI {\n    /**\n     *\n     * @type {CronJobOutputDTO}\n     * @memberof CronJobOutputDTOAPI\n     */\n    data: CronJobOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CronJobOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CronJobSearchInputAllowedFilters\n */\ninterface CronJobSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobSearchInputAllowedFilters\n     */\n    id?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobSearchInputAllowedFilters\n     */\n    moduleId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobSearchInputAllowedFilters\n     */\n    name?: string;\n}\n/**\n *\n * @export\n * @interface CronJobSearchInputDTO\n */\ninterface CronJobSearchInputDTO {\n    /**\n     *\n     * @type {CronJobSearchInputAllowedFilters}\n     * @memberof CronJobSearchInputDTO\n     */\n    filters?: CronJobSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof CronJobSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof CronJobSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof CronJobSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobSearchInputDTO\n     */\n    sortDirection?: CronJobSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CronJobSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const CronJobSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype CronJobSearchInputDTOSortDirectionEnum = typeof CronJobSearchInputDTOSortDirectionEnum[keyof typeof CronJobSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface CronJobUpdateDTO\n */\ninterface CronJobUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobUpdateDTO\n     */\n    temporalValue?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobUpdateDTO\n     */\n    function?: string;\n}\n/**\n *\n * @export\n * @interface DomainCreateInputDTO\n */\ninterface DomainCreateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof DomainCreateInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainCreateInputDTO\n     */\n    id?: string;\n}\n/**\n *\n * @export\n * @interface DomainCreateOutputDTO\n */\ninterface DomainCreateOutputDTO {\n    /**\n     *\n     * @type {DomainOutputDTO}\n     * @memberof DomainCreateOutputDTO\n     */\n    createdDomain: DomainOutputDTO;\n    /**\n     *\n     * @type {UserOutputDTO}\n     * @memberof DomainCreateOutputDTO\n     */\n    rootUser: UserOutputDTO;\n    /**\n     *\n     * @type {RoleOutputDTO}\n     * @memberof DomainCreateOutputDTO\n     */\n    rootRole: RoleOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainCreateOutputDTO\n     */\n    password: string;\n}\n/**\n *\n * @export\n * @interface DomainCreateOutputDTOAPI\n */\ninterface DomainCreateOutputDTOAPI {\n    /**\n     *\n     * @type {DomainCreateOutputDTO}\n     * @memberof DomainCreateOutputDTOAPI\n     */\n    data: DomainCreateOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof DomainCreateOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface DomainOutputArrayDTOAPI\n */\ninterface DomainOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<DomainOutputDTO>}\n     * @memberof DomainOutputArrayDTOAPI\n     */\n    data: Array<DomainOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof DomainOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface DomainOutputDTO\n */\ninterface DomainOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof DomainOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof DomainOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof DomainOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface DomainOutputDTOAPI\n */\ninterface DomainOutputDTOAPI {\n    /**\n     *\n     * @type {DomainOutputDTO}\n     * @memberof DomainOutputDTOAPI\n     */\n    data: DomainOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof DomainOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface DomainSearchInputAllowedFilters\n */\ninterface DomainSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof DomainSearchInputAllowedFilters\n     */\n    name?: string;\n}\n/**\n *\n * @export\n * @interface DomainSearchInputDTO\n */\ninterface DomainSearchInputDTO {\n    /**\n     *\n     * @type {DomainSearchInputAllowedFilters}\n     * @memberof DomainSearchInputDTO\n     */\n    filters?: DomainSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof DomainSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof DomainSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof DomainSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainSearchInputDTO\n     */\n    sortDirection?: DomainSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof DomainSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const DomainSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype DomainSearchInputDTOSortDirectionEnum = typeof DomainSearchInputDTOSortDirectionEnum[keyof typeof DomainSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface DomainUpdateInputDTO\n */\ninterface DomainUpdateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof DomainUpdateInputDTO\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface ErrorOutput\n */\ninterface ErrorOutput {\n    /**\n     *\n     * @type {string}\n     * @memberof ErrorOutput\n     */\n    code: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ErrorOutput\n     */\n    message: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ErrorOutput\n     */\n    details: string;\n}\n/**\n *\n * @export\n * @interface EventChatMessage\n */\ninterface EventChatMessage {\n    /**\n     *\n     * @type {IGamePlayer}\n     * @memberof EventChatMessage\n     */\n    player: IGamePlayer;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventChatMessage\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof EventChatMessage\n     */\n    type: EventChatMessageTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventChatMessage\n     */\n    msg: string;\n}\ndeclare const EventChatMessageTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n};\ntype EventChatMessageTypeEnum = typeof EventChatMessageTypeEnum[keyof typeof EventChatMessageTypeEnum];\n/**\n *\n * @export\n * @interface EventPlayerConnected\n */\ninterface EventPlayerConnected {\n    /**\n     *\n     * @type {IGamePlayer}\n     * @memberof EventPlayerConnected\n     */\n    player: IGamePlayer;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventPlayerConnected\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerConnected\n     */\n    type: EventPlayerConnectedTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerConnected\n     */\n    msg: string;\n}\ndeclare const EventPlayerConnectedTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n};\ntype EventPlayerConnectedTypeEnum = typeof EventPlayerConnectedTypeEnum[keyof typeof EventPlayerConnectedTypeEnum];\n/**\n *\n * @export\n * @interface EventPlayerDisconnected\n */\ninterface EventPlayerDisconnected {\n    /**\n     *\n     * @type {IGamePlayer}\n     * @memberof EventPlayerDisconnected\n     */\n    player: IGamePlayer;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventPlayerDisconnected\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerDisconnected\n     */\n    type: EventPlayerDisconnectedTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerDisconnected\n     */\n    msg: string;\n}\ndeclare const EventPlayerDisconnectedTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n};\ntype EventPlayerDisconnectedTypeEnum = typeof EventPlayerDisconnectedTypeEnum[keyof typeof EventPlayerDisconnectedTypeEnum];\n/**\n *\n * @export\n * @interface FunctionCreateDTO\n */\ninterface FunctionCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionCreateDTO\n     */\n    code: string;\n}\n/**\n *\n * @export\n * @interface FunctionOutputArrayDTOAPI\n */\ninterface FunctionOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<FunctionOutputDTO>}\n     * @memberof FunctionOutputArrayDTOAPI\n     */\n    data: Array<FunctionOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof FunctionOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface FunctionOutputDTO\n */\ninterface FunctionOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionOutputDTO\n     */\n    code: string;\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof FunctionOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof FunctionOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface FunctionOutputDTOAPI\n */\ninterface FunctionOutputDTOAPI {\n    /**\n     *\n     * @type {FunctionOutputDTO}\n     * @memberof FunctionOutputDTOAPI\n     */\n    data: FunctionOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof FunctionOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface FunctionSearchInputAllowedFilters\n */\ninterface FunctionSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionSearchInputAllowedFilters\n     */\n    id: string;\n}\n/**\n *\n * @export\n * @interface FunctionSearchInputDTO\n */\ninterface FunctionSearchInputDTO {\n    /**\n     *\n     * @type {FunctionSearchInputAllowedFilters}\n     * @memberof FunctionSearchInputDTO\n     */\n    filters?: FunctionSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof FunctionSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof FunctionSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof FunctionSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionSearchInputDTO\n     */\n    sortDirection?: FunctionSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof FunctionSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const FunctionSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype FunctionSearchInputDTOSortDirectionEnum = typeof FunctionSearchInputDTOSortDirectionEnum[keyof typeof FunctionSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface FunctionUpdateDTO\n */\ninterface FunctionUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionUpdateDTO\n     */\n    code: string;\n}\n/**\n *\n * @export\n * @interface GameServerCreateDTO\n */\ninterface GameServerCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerCreateDTO\n     */\n    connectionInfo: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerCreateDTO\n     */\n    type: GameServerCreateDTOTypeEnum;\n}\ndeclare const GameServerCreateDTOTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerCreateDTOTypeEnum = typeof GameServerCreateDTOTypeEnum[keyof typeof GameServerCreateDTOTypeEnum];\n/**\n *\n * @export\n * @interface GameServerOutputArrayDTOAPI\n */\ninterface GameServerOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<GameServerOutputDTO>}\n     * @memberof GameServerOutputArrayDTOAPI\n     */\n    data: Array<GameServerOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof GameServerOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface GameServerOutputDTO\n */\ninterface GameServerOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {object}\n     * @memberof GameServerOutputDTO\n     */\n    connectionInfo: object;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerOutputDTO\n     */\n    type: GameServerOutputDTOTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof GameServerOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof GameServerOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\ndeclare const GameServerOutputDTOTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerOutputDTOTypeEnum = typeof GameServerOutputDTOTypeEnum[keyof typeof GameServerOutputDTOTypeEnum];\n/**\n *\n * @export\n * @interface GameServerOutputDTOAPI\n */\ninterface GameServerOutputDTOAPI {\n    /**\n     *\n     * @type {GameServerOutputDTO}\n     * @memberof GameServerOutputDTOAPI\n     */\n    data: GameServerOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof GameServerOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface GameServerSearchInputAllowedFilters\n */\ninterface GameServerSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerSearchInputAllowedFilters\n     */\n    name?: string;\n}\n/**\n *\n * @export\n * @interface GameServerSearchInputDTO\n */\ninterface GameServerSearchInputDTO {\n    /**\n     *\n     * @type {GameServerSearchInputAllowedFilters}\n     * @memberof GameServerSearchInputDTO\n     */\n    filters?: GameServerSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof GameServerSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof GameServerSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof GameServerSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerSearchInputDTO\n     */\n    sortDirection?: GameServerSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GameServerSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const GameServerSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype GameServerSearchInputDTOSortDirectionEnum = typeof GameServerSearchInputDTOSortDirectionEnum[keyof typeof GameServerSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface GameServerTestReachabilityDTOAPI\n */\ninterface GameServerTestReachabilityDTOAPI {\n    /**\n     *\n     * @type {TestReachabilityOutput}\n     * @memberof GameServerTestReachabilityDTOAPI\n     */\n    data: TestReachabilityOutput;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof GameServerTestReachabilityDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface GameServerTestReachabilityInputDTO\n */\ninterface GameServerTestReachabilityInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerTestReachabilityInputDTO\n     */\n    connectionInfo: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerTestReachabilityInputDTO\n     */\n    type: GameServerTestReachabilityInputDTOTypeEnum;\n}\ndeclare const GameServerTestReachabilityInputDTOTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerTestReachabilityInputDTOTypeEnum = typeof GameServerTestReachabilityInputDTOTypeEnum[keyof typeof GameServerTestReachabilityInputDTOTypeEnum];\n/**\n *\n * @export\n * @interface GameServerUpdateDTO\n */\ninterface GameServerUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerUpdateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerUpdateDTO\n     */\n    connectionInfo: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerUpdateDTO\n     */\n    type: GameServerUpdateDTOTypeEnum;\n}\ndeclare const GameServerUpdateDTOTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerUpdateDTOTypeEnum = typeof GameServerUpdateDTOTypeEnum[keyof typeof GameServerUpdateDTOTypeEnum];\n/**\n *\n * @export\n * @interface GetSettingsInput\n */\ninterface GetSettingsInput {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GetSettingsInput\n     */\n    keys?: Array<GetSettingsInputKeysEnum>;\n    /**\n     *\n     * @type {string}\n     * @memberof GetSettingsInput\n     */\n    gameServerId?: string;\n}\ndeclare const GetSettingsInputKeysEnum: {\n    readonly CommandPrefix: \"commandPrefix\";\n    readonly ServerChatName: \"serverChatName\";\n};\ntype GetSettingsInputKeysEnum = typeof GetSettingsInputKeysEnum[keyof typeof GetSettingsInputKeysEnum];\n/**\n *\n * @export\n * @interface GetSettingsOneInput\n */\ninterface GetSettingsOneInput {\n    /**\n     *\n     * @type {string}\n     * @memberof GetSettingsOneInput\n     */\n    gameServerId?: string;\n}\n/**\n *\n * @export\n * @interface GetUserDTO\n */\ninterface GetUserDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GetUserDTO\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface HealthOutputDTO\n */\ninterface HealthOutputDTO {\n    /**\n     *\n     * @type {boolean}\n     * @memberof HealthOutputDTO\n     */\n    healthy: boolean;\n}\n/**\n *\n * @export\n * @interface HookCreateDTO\n */\ninterface HookCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    regex: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    eventType: HookCreateDTOEventTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    function?: string;\n}\ndeclare const HookCreateDTOEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n};\ntype HookCreateDTOEventTypeEnum = typeof HookCreateDTOEventTypeEnum[keyof typeof HookCreateDTOEventTypeEnum];\n/**\n *\n * @export\n * @interface HookOutputArrayDTOAPI\n */\ninterface HookOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<HookOutputDTO>}\n     * @memberof HookOutputArrayDTOAPI\n     */\n    data: Array<HookOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof HookOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface HookOutputDTO\n */\ninterface HookOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    regex: string;\n    /**\n     *\n     * @type {FunctionOutputDTO}\n     * @memberof HookOutputDTO\n     */\n    function: FunctionOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    eventType: HookOutputDTOEventTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof HookOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof HookOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\ndeclare const HookOutputDTOEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n};\ntype HookOutputDTOEventTypeEnum = typeof HookOutputDTOEventTypeEnum[keyof typeof HookOutputDTOEventTypeEnum];\n/**\n *\n * @export\n * @interface HookOutputDTOAPI\n */\ninterface HookOutputDTOAPI {\n    /**\n     *\n     * @type {HookOutputDTO}\n     * @memberof HookOutputDTOAPI\n     */\n    data: HookOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof HookOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface HookSearchInputAllowedFilters\n */\ninterface HookSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputAllowedFilters\n     */\n    id?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputAllowedFilters\n     */\n    moduleId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputAllowedFilters\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputAllowedFilters\n     */\n    eventType?: HookSearchInputAllowedFiltersEventTypeEnum;\n}\ndeclare const HookSearchInputAllowedFiltersEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n};\ntype HookSearchInputAllowedFiltersEventTypeEnum = typeof HookSearchInputAllowedFiltersEventTypeEnum[keyof typeof HookSearchInputAllowedFiltersEventTypeEnum];\n/**\n *\n * @export\n * @interface HookSearchInputDTO\n */\ninterface HookSearchInputDTO {\n    /**\n     *\n     * @type {HookSearchInputAllowedFilters}\n     * @memberof HookSearchInputDTO\n     */\n    filters?: HookSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof HookSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof HookSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof HookSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputDTO\n     */\n    sortDirection?: HookSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof HookSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const HookSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype HookSearchInputDTOSortDirectionEnum = typeof HookSearchInputDTOSortDirectionEnum[keyof typeof HookSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface HookUpdateDTO\n */\ninterface HookUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof HookUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookUpdateDTO\n     */\n    regex?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookUpdateDTO\n     */\n    function?: string;\n}\n/**\n *\n * @export\n * @interface IGamePlayer\n */\ninterface IGamePlayer {\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    gameId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    steamId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    epicOnlineServicesId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    xboxLiveId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    platformId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    device?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    ip?: string;\n}\n/**\n *\n * @export\n * @interface IMessageOptsDTO\n */\ninterface IMessageOptsDTO {\n    /**\n     *\n     * @type {IPlayerReferenceDTO}\n     * @memberof IMessageOptsDTO\n     */\n    recipient: IPlayerReferenceDTO;\n}\n/**\n *\n * @export\n * @interface IPlayerReferenceDTO\n */\ninterface IPlayerReferenceDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof IPlayerReferenceDTO\n     */\n    gameId: string;\n}\n/**\n *\n * @export\n * @interface ITakaroQuery\n */\ninterface ITakaroQuery {\n    /**\n     *\n     * @type {any}\n     * @memberof ITakaroQuery\n     */\n    filters?: any;\n    /**\n     *\n     * @type {any}\n     * @memberof ITakaroQuery\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof ITakaroQuery\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof ITakaroQuery\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof ITakaroQuery\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ITakaroQuery\n     */\n    sortDirection?: ITakaroQuerySortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ITakaroQuery\n     */\n    extend?: Array<string>;\n}\ndeclare const ITakaroQuerySortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype ITakaroQuerySortDirectionEnum = typeof ITakaroQuerySortDirectionEnum[keyof typeof ITakaroQuerySortDirectionEnum];\n/**\n *\n * @export\n * @interface IdUuidDTO\n */\ninterface IdUuidDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof IdUuidDTO\n     */\n    id: string;\n}\n/**\n *\n * @export\n * @interface IdUuidDTOAPI\n */\ninterface IdUuidDTOAPI {\n    /**\n     *\n     * @type {IdUuidDTO}\n     * @memberof IdUuidDTOAPI\n     */\n    data: IdUuidDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof IdUuidDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface LoginDTO\n */\ninterface LoginDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof LoginDTO\n     */\n    username: string;\n    /**\n     *\n     * @type {string}\n     * @memberof LoginDTO\n     */\n    password: string;\n}\n/**\n *\n * @export\n * @interface LoginOutputDTO\n */\ninterface LoginOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof LoginOutputDTO\n     */\n    token: string;\n}\n/**\n *\n * @export\n * @interface LoginOutputDTOAPI\n */\ninterface LoginOutputDTOAPI {\n    /**\n     *\n     * @type {LoginOutputDTO}\n     * @memberof LoginOutputDTOAPI\n     */\n    data: LoginOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof LoginOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface MessageSendInputDTO\n */\ninterface MessageSendInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof MessageSendInputDTO\n     */\n    message: string;\n    /**\n     *\n     * @type {IMessageOptsDTO}\n     * @memberof MessageSendInputDTO\n     */\n    opts?: IMessageOptsDTO;\n}\n/**\n *\n * @export\n * @interface MetadataOutput\n */\ninterface MetadataOutput {\n    /**\n     *\n     * @type {MetadataOutputServerTime}\n     * @memberof MetadataOutput\n     */\n    serverTime: MetadataOutputServerTime;\n    /**\n     *\n     * @type {ErrorOutput}\n     * @memberof MetadataOutput\n     */\n    error: ErrorOutput;\n    /**\n     *\n     * @type {number}\n     * @memberof MetadataOutput\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof MetadataOutput\n     */\n    limit?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof MetadataOutput\n     */\n    total?: number;\n}\n/**\n * @type MetadataOutputServerTime\n * @export\n */\ntype MetadataOutputServerTime = string;\n/**\n *\n * @export\n * @interface MockConnectionInfo\n */\ninterface MockConnectionInfo {\n    /**\n     *\n     * @type {number}\n     * @memberof MockConnectionInfo\n     */\n    eventInterval: number;\n}\n/**\n *\n * @export\n * @interface ModuleCreateDTO\n */\ninterface ModuleCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateDTO\n     */\n    configSchema?: string;\n}\n/**\n *\n * @export\n * @interface ModuleCreateInternalDTO\n */\ninterface ModuleCreateInternalDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateInternalDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateInternalDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateInternalDTO\n     */\n    configSchema?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateInternalDTO\n     */\n    builtin?: string;\n}\n/**\n *\n * @export\n * @interface ModuleInstallDTO\n */\ninterface ModuleInstallDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallDTO\n     */\n    userConfig: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallDTO\n     */\n    systemConfig: string;\n}\n/**\n *\n * @export\n * @interface ModuleInstallationOutputArrayDTOAPI\n */\ninterface ModuleInstallationOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<ModuleInstallationOutputDTO>}\n     * @memberof ModuleInstallationOutputArrayDTOAPI\n     */\n    data: Array<ModuleInstallationOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ModuleInstallationOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ModuleInstallationOutputDTO\n */\ninterface ModuleInstallationOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    gameserverId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {object}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    userConfig: object;\n    /**\n     *\n     * @type {ModuleInstallationOutputDTOSystemConfig}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    systemConfig: ModuleInstallationOutputDTOSystemConfig;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface ModuleInstallationOutputDTOAPI\n */\ninterface ModuleInstallationOutputDTOAPI {\n    /**\n     *\n     * @type {ModuleInstallationOutputDTO}\n     * @memberof ModuleInstallationOutputDTOAPI\n     */\n    data: ModuleInstallationOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ModuleInstallationOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ModuleInstallationOutputDTOSystemConfig\n */\ninterface ModuleInstallationOutputDTOSystemConfig {\n    /**\n     *\n     * @type {object}\n     * @memberof ModuleInstallationOutputDTOSystemConfig\n     */\n    cronJobs?: object;\n}\n/**\n *\n * @export\n * @interface ModuleOutputArrayDTOAPI\n */\ninterface ModuleOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<ModuleOutputDTO>}\n     * @memberof ModuleOutputArrayDTOAPI\n     */\n    data: Array<ModuleOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ModuleOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ModuleOutputDTO\n */\ninterface ModuleOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    description: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    configSchema: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    systemConfigSchema: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    builtin?: string;\n    /**\n     *\n     * @type {Array<CronJobOutputDTO>}\n     * @memberof ModuleOutputDTO\n     */\n    cronJobs: Array<CronJobOutputDTO>;\n    /**\n     *\n     * @type {Array<HookOutputDTO>}\n     * @memberof ModuleOutputDTO\n     */\n    hooks: Array<HookOutputDTO>;\n    /**\n     *\n     * @type {Array<CommandOutputDTO>}\n     * @memberof ModuleOutputDTO\n     */\n    commands: Array<CommandOutputDTO>;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ModuleOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ModuleOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface ModuleOutputDTOAPI\n */\ninterface ModuleOutputDTOAPI {\n    /**\n     *\n     * @type {ModuleOutputDTO}\n     * @memberof ModuleOutputDTOAPI\n     */\n    data: ModuleOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ModuleOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ModuleSearchInputAllowedFilters\n */\ninterface ModuleSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleSearchInputAllowedFilters\n     */\n    id?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleSearchInputAllowedFilters\n     */\n    name?: string;\n}\n/**\n *\n * @export\n * @interface ModuleSearchInputDTO\n */\ninterface ModuleSearchInputDTO {\n    /**\n     *\n     * @type {ModuleSearchInputAllowedFilters}\n     * @memberof ModuleSearchInputDTO\n     */\n    filters?: ModuleSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof ModuleSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof ModuleSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof ModuleSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleSearchInputDTO\n     */\n    sortDirection?: ModuleSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ModuleSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const ModuleSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype ModuleSearchInputDTOSortDirectionEnum = typeof ModuleSearchInputDTOSortDirectionEnum[keyof typeof ModuleSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface ModuleUpdateDTO\n */\ninterface ModuleUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleUpdateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleUpdateDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleUpdateDTO\n     */\n    configSchema?: string;\n}\n/**\n *\n * @export\n * @interface NOTDOMAINSCOPEDTakaroModelDTO\n */\ninterface NOTDOMAINSCOPEDTakaroModelDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof NOTDOMAINSCOPEDTakaroModelDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof NOTDOMAINSCOPEDTakaroModelDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof NOTDOMAINSCOPEDTakaroModelDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n * @type NOTDOMAINSCOPEDTakaroModelDTOCreatedAt\n * @export\n */\ntype NOTDOMAINSCOPEDTakaroModelDTOCreatedAt = string;\n/**\n *\n * @export\n * @interface ParamId\n */\ninterface ParamId {\n    /**\n     *\n     * @type {string}\n     * @memberof ParamId\n     */\n    id: string;\n}\n/**\n *\n * @export\n * @interface ParamIdAndModuleId\n */\ninterface ParamIdAndModuleId {\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndModuleId\n     */\n    gameserverId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndModuleId\n     */\n    moduleId: string;\n}\n/**\n *\n * @export\n * @interface ParamIdAndRoleId\n */\ninterface ParamIdAndRoleId {\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndRoleId\n     */\n    roleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndRoleId\n     */\n    id: string;\n}\n/**\n *\n * @export\n * @interface ParamKey\n */\ninterface ParamKey {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ParamKey\n     */\n    key: Array<ParamKeyKeyEnum>;\n}\ndeclare const ParamKeyKeyEnum: {\n    readonly CommandPrefix: \"commandPrefix\";\n    readonly ServerChatName: \"serverChatName\";\n};\ntype ParamKeyKeyEnum = typeof ParamKeyKeyEnum[keyof typeof ParamKeyKeyEnum];\n/**\n *\n * @export\n * @interface PermissionOutputDTO\n */\ninterface PermissionOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionOutputDTO\n     */\n    permission: PermissionOutputDTOPermissionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PermissionOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PermissionOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\ndeclare const PermissionOutputDTOPermissionEnum: {\n    readonly Root: \"ROOT\";\n    readonly ManageUsers: \"MANAGE_USERS\";\n    readonly ReadUsers: \"READ_USERS\";\n    readonly ManageRoles: \"MANAGE_ROLES\";\n    readonly ReadRoles: \"READ_ROLES\";\n    readonly ManageGameservers: \"MANAGE_GAMESERVERS\";\n    readonly ReadGameservers: \"READ_GAMESERVERS\";\n    readonly ReadFunctions: \"READ_FUNCTIONS\";\n    readonly ManageFunctions: \"MANAGE_FUNCTIONS\";\n    readonly ReadCronjobs: \"READ_CRONJOBS\";\n    readonly ManageCronjobs: \"MANAGE_CRONJOBS\";\n    readonly ReadHooks: \"READ_HOOKS\";\n    readonly ManageHooks: \"MANAGE_HOOKS\";\n    readonly ReadCommands: \"READ_COMMANDS\";\n    readonly ManageCommands: \"MANAGE_COMMANDS\";\n    readonly ReadModules: \"READ_MODULES\";\n    readonly ManageModules: \"MANAGE_MODULES\";\n    readonly ReadPlayers: \"READ_PLAYERS\";\n    readonly ManagePlayers: \"MANAGE_PLAYERS\";\n    readonly ManageSettings: \"MANAGE_SETTINGS\";\n    readonly ReadSettings: \"READ_SETTINGS\";\n    readonly ReadVariables: \"READ_VARIABLES\";\n    readonly ManageVariables: \"MANAGE_VARIABLES\";\n};\ntype PermissionOutputDTOPermissionEnum = typeof PermissionOutputDTOPermissionEnum[keyof typeof PermissionOutputDTOPermissionEnum];\n/**\n *\n * @export\n * @interface PlayerCreateDTO\n */\ninterface PlayerCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerCreateDTO\n     */\n    steamId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerCreateDTO\n     */\n    xboxLiveId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerCreateDTO\n     */\n    epicOnlineServicesId?: string;\n}\n/**\n *\n * @export\n * @interface PlayerOutputArrayDTOAPI\n */\ninterface PlayerOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<PlayerOutputDTO>}\n     * @memberof PlayerOutputArrayDTOAPI\n     */\n    data: Array<PlayerOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof PlayerOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface PlayerOutputDTO\n */\ninterface PlayerOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    steamId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    xboxLiveId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    epicOnlineServicesId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface PlayerOutputDTOAPI\n */\ninterface PlayerOutputDTOAPI {\n    /**\n     *\n     * @type {PlayerOutputDTO}\n     * @memberof PlayerOutputDTOAPI\n     */\n    data: PlayerOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof PlayerOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface PlayerSearchInputAllowedFilters\n */\ninterface PlayerSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    id?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    steamId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    epicOnlineServicesId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    xboxLiveId?: string;\n}\n/**\n *\n * @export\n * @interface PlayerSearchInputDTO\n */\ninterface PlayerSearchInputDTO {\n    /**\n     *\n     * @type {PlayerSearchInputAllowedFilters}\n     * @memberof PlayerSearchInputDTO\n     */\n    filters?: PlayerSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof PlayerSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputDTO\n     */\n    sortDirection?: PlayerSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const PlayerSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype PlayerSearchInputDTOSortDirectionEnum = typeof PlayerSearchInputDTOSortDirectionEnum[keyof typeof PlayerSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface PlayerUpdateDTO\n */\ninterface PlayerUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerUpdateDTO\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface RoleCreateInputDTO\n */\ninterface RoleCreateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof RoleCreateInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof RoleCreateInputDTO\n     */\n    permissions: Array<RoleCreateInputDTOPermissionsEnum>;\n}\ndeclare const RoleCreateInputDTOPermissionsEnum: {\n    readonly Root: \"ROOT\";\n    readonly ManageUsers: \"MANAGE_USERS\";\n    readonly ReadUsers: \"READ_USERS\";\n    readonly ManageRoles: \"MANAGE_ROLES\";\n    readonly ReadRoles: \"READ_ROLES\";\n    readonly ManageGameservers: \"MANAGE_GAMESERVERS\";\n    readonly ReadGameservers: \"READ_GAMESERVERS\";\n    readonly ReadFunctions: \"READ_FUNCTIONS\";\n    readonly ManageFunctions: \"MANAGE_FUNCTIONS\";\n    readonly ReadCronjobs: \"READ_CRONJOBS\";\n    readonly ManageCronjobs: \"MANAGE_CRONJOBS\";\n    readonly ReadHooks: \"READ_HOOKS\";\n    readonly ManageHooks: \"MANAGE_HOOKS\";\n    readonly ReadCommands: \"READ_COMMANDS\";\n    readonly ManageCommands: \"MANAGE_COMMANDS\";\n    readonly ReadModules: \"READ_MODULES\";\n    readonly ManageModules: \"MANAGE_MODULES\";\n    readonly ReadPlayers: \"READ_PLAYERS\";\n    readonly ManagePlayers: \"MANAGE_PLAYERS\";\n    readonly ManageSettings: \"MANAGE_SETTINGS\";\n    readonly ReadSettings: \"READ_SETTINGS\";\n    readonly ReadVariables: \"READ_VARIABLES\";\n    readonly ManageVariables: \"MANAGE_VARIABLES\";\n};\ntype RoleCreateInputDTOPermissionsEnum = typeof RoleCreateInputDTOPermissionsEnum[keyof typeof RoleCreateInputDTOPermissionsEnum];\n/**\n *\n * @export\n * @interface RoleOutputArrayDTOAPI\n */\ninterface RoleOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<RoleOutputDTO>}\n     * @memberof RoleOutputArrayDTOAPI\n     */\n    data: Array<RoleOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof RoleOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface RoleOutputDTO\n */\ninterface RoleOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof RoleOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {Array<any>}\n     * @memberof RoleOutputDTO\n     */\n    permissions: Array<any>;\n    /**\n     *\n     * @type {string}\n     * @memberof RoleOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof RoleOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof RoleOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface RoleOutputDTOAPI\n */\ninterface RoleOutputDTOAPI {\n    /**\n     *\n     * @type {RoleOutputDTO}\n     * @memberof RoleOutputDTOAPI\n     */\n    data: RoleOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof RoleOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface RoleSearchInputAllowedFilters\n */\ninterface RoleSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof RoleSearchInputAllowedFilters\n     */\n    name?: string;\n}\n/**\n *\n * @export\n * @interface RoleSearchInputDTO\n */\ninterface RoleSearchInputDTO {\n    /**\n     *\n     * @type {RoleSearchInputAllowedFilters}\n     * @memberof RoleSearchInputDTO\n     */\n    filters?: RoleSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof RoleSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof RoleSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof RoleSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof RoleSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof RoleSearchInputDTO\n     */\n    sortDirection?: RoleSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof RoleSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const RoleSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype RoleSearchInputDTOSortDirectionEnum = typeof RoleSearchInputDTOSortDirectionEnum[keyof typeof RoleSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface RoleUpdateInputDTO\n */\ninterface RoleUpdateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof RoleUpdateInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof RoleUpdateInputDTO\n     */\n    permissions: Array<RoleUpdateInputDTOPermissionsEnum>;\n}\ndeclare const RoleUpdateInputDTOPermissionsEnum: {\n    readonly Root: \"ROOT\";\n    readonly ManageUsers: \"MANAGE_USERS\";\n    readonly ReadUsers: \"READ_USERS\";\n    readonly ManageRoles: \"MANAGE_ROLES\";\n    readonly ReadRoles: \"READ_ROLES\";\n    readonly ManageGameservers: \"MANAGE_GAMESERVERS\";\n    readonly ReadGameservers: \"READ_GAMESERVERS\";\n    readonly ReadFunctions: \"READ_FUNCTIONS\";\n    readonly ManageFunctions: \"MANAGE_FUNCTIONS\";\n    readonly ReadCronjobs: \"READ_CRONJOBS\";\n    readonly ManageCronjobs: \"MANAGE_CRONJOBS\";\n    readonly ReadHooks: \"READ_HOOKS\";\n    readonly ManageHooks: \"MANAGE_HOOKS\";\n    readonly ReadCommands: \"READ_COMMANDS\";\n    readonly ManageCommands: \"MANAGE_COMMANDS\";\n    readonly ReadModules: \"READ_MODULES\";\n    readonly ManageModules: \"MANAGE_MODULES\";\n    readonly ReadPlayers: \"READ_PLAYERS\";\n    readonly ManagePlayers: \"MANAGE_PLAYERS\";\n    readonly ManageSettings: \"MANAGE_SETTINGS\";\n    readonly ReadSettings: \"READ_SETTINGS\";\n    readonly ReadVariables: \"READ_VARIABLES\";\n    readonly ManageVariables: \"MANAGE_VARIABLES\";\n};\ntype RoleUpdateInputDTOPermissionsEnum = typeof RoleUpdateInputDTOPermissionsEnum[keyof typeof RoleUpdateInputDTOPermissionsEnum];\n/**\n *\n * @export\n * @interface RustConfig\n */\ninterface RustConfig {\n    /**\n     *\n     * @type {string}\n     * @memberof RustConfig\n     */\n    hostname: string;\n    /**\n     *\n     * @type {string}\n     * @memberof RustConfig\n     */\n    port: string;\n    /**\n     *\n     * @type {string}\n     * @memberof RustConfig\n     */\n    password: string;\n}\n/**\n *\n * @export\n * @interface RustConnectionInfo\n */\ninterface RustConnectionInfo {\n    /**\n     *\n     * @type {string}\n     * @memberof RustConnectionInfo\n     */\n    host: string;\n    /**\n     *\n     * @type {number}\n     * @memberof RustConnectionInfo\n     */\n    rconPort: number;\n    /**\n     *\n     * @type {string}\n     * @memberof RustConnectionInfo\n     */\n    rconPassword: string;\n}\n/**\n *\n * @export\n * @interface SdtdConnectionInfo\n */\ninterface SdtdConnectionInfo {\n    /**\n     *\n     * @type {string}\n     * @memberof SdtdConnectionInfo\n     */\n    host: string;\n    /**\n     *\n     * @type {string}\n     * @memberof SdtdConnectionInfo\n     */\n    adminUser: string;\n    /**\n     *\n     * @type {string}\n     * @memberof SdtdConnectionInfo\n     */\n    adminToken: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof SdtdConnectionInfo\n     */\n    useTls: boolean;\n}\n/**\n *\n * @export\n * @interface SearchRoleInputDTO\n */\ninterface SearchRoleInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof SearchRoleInputDTO\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface Settings\n */\ninterface Settings {\n    /**\n     *\n     * @type {string}\n     * @memberof Settings\n     */\n    commandPrefix: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Settings\n     */\n    serverChatName: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Settings\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof Settings\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof Settings\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface SettingsOutputDTOAPI\n */\ninterface SettingsOutputDTOAPI {\n    /**\n     *\n     * @type {string}\n     * @memberof SettingsOutputDTOAPI\n     */\n    data: string;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof SettingsOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface SettingsOutputObjectDTOAPI\n */\ninterface SettingsOutputObjectDTOAPI {\n    /**\n     *\n     * @type {Settings}\n     * @memberof SettingsOutputObjectDTOAPI\n     */\n    data: Settings;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof SettingsOutputObjectDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface SettingsSetDTO\n */\ninterface SettingsSetDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof SettingsSetDTO\n     */\n    gameServerId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof SettingsSetDTO\n     */\n    value: string;\n}\n/**\n *\n * @export\n * @interface TakaroModelDTO\n */\ninterface TakaroModelDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof TakaroModelDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof TakaroModelDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof TakaroModelDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface TakaroTokenDTO\n */\ninterface TakaroTokenDTO {\n    /**\n     *\n     * @type {boolean}\n     * @memberof TakaroTokenDTO\n     */\n    active: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof TakaroTokenDTO\n     */\n    clientId: string;\n    /**\n     *\n     * @type {number}\n     * @memberof TakaroTokenDTO\n     */\n    exp: number;\n    /**\n     *\n     * @type {number}\n     * @memberof TakaroTokenDTO\n     */\n    iat: number;\n    /**\n     *\n     * @type {string}\n     * @memberof TakaroTokenDTO\n     */\n    iss: string;\n    /**\n     *\n     * @type {string}\n     * @memberof TakaroTokenDTO\n     */\n    sub: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof TakaroTokenDTO\n     */\n    aud: Array<string>;\n}\n/**\n *\n * @export\n * @interface TeleportPlayerInputDTO\n */\ninterface TeleportPlayerInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof TeleportPlayerInputDTO\n     */\n    playerGameId: string;\n    /**\n     *\n     * @type {number}\n     * @memberof TeleportPlayerInputDTO\n     */\n    x: number;\n    /**\n     *\n     * @type {number}\n     * @memberof TeleportPlayerInputDTO\n     */\n    y: number;\n    /**\n     *\n     * @type {number}\n     * @memberof TeleportPlayerInputDTO\n     */\n    z: number;\n}\n/**\n *\n * @export\n * @interface TestReachabilityOutput\n */\ninterface TestReachabilityOutput {\n    /**\n     *\n     * @type {boolean}\n     * @memberof TestReachabilityOutput\n     */\n    connectable: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof TestReachabilityOutput\n     */\n    reason?: string;\n}\n/**\n *\n * @export\n * @interface TokenInputDTO\n */\ninterface TokenInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof TokenInputDTO\n     */\n    domainId: string;\n}\n/**\n *\n * @export\n * @interface TokenOutputDTO\n */\ninterface TokenOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof TokenOutputDTO\n     */\n    token: string;\n}\n/**\n *\n * @export\n * @interface TokenOutputDTOAPI\n */\ninterface TokenOutputDTOAPI {\n    /**\n     *\n     * @type {TokenOutputDTO}\n     * @memberof TokenOutputDTOAPI\n     */\n    data: TokenOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof TokenOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface UserCreateInputDTO\n */\ninterface UserCreateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof UserCreateInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserCreateInputDTO\n     */\n    email: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserCreateInputDTO\n     */\n    password: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserCreateInputDTO\n     */\n    idpId?: string;\n}\n/**\n *\n * @export\n * @interface UserOutputArrayDTOAPI\n */\ninterface UserOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<UserOutputDTO>}\n     * @memberof UserOutputArrayDTOAPI\n     */\n    data: Array<UserOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof UserOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface UserOutputDTO\n */\ninterface UserOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputDTO\n     */\n    email: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputDTO\n     */\n    idpId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface UserOutputDTOAPI\n */\ninterface UserOutputDTOAPI {\n    /**\n     *\n     * @type {UserOutputDTO}\n     * @memberof UserOutputDTOAPI\n     */\n    data: UserOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof UserOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface UserOutputWithRolesDTO\n */\ninterface UserOutputWithRolesDTO {\n    /**\n     *\n     * @type {RoleOutputDTO}\n     * @memberof UserOutputWithRolesDTO\n     */\n    roles: RoleOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputWithRolesDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserOutputWithRolesDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserOutputWithRolesDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputWithRolesDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputWithRolesDTO\n     */\n    email: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputWithRolesDTO\n     */\n    idpId: string;\n}\n/**\n *\n * @export\n * @interface UserSearchInputAllowedFilters\n */\ninterface UserSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof UserSearchInputAllowedFilters\n     */\n    name?: string;\n}\n/**\n *\n * @export\n * @interface UserSearchInputDTO\n */\ninterface UserSearchInputDTO {\n    /**\n     *\n     * @type {UserSearchInputAllowedFilters}\n     * @memberof UserSearchInputDTO\n     */\n    filters?: UserSearchInputAllowedFilters;\n    /**\n     *\n     * @type {any}\n     * @memberof UserSearchInputDTO\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof UserSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof UserSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof UserSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserSearchInputDTO\n     */\n    sortDirection?: UserSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof UserSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const UserSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype UserSearchInputDTOSortDirectionEnum = typeof UserSearchInputDTOSortDirectionEnum[keyof typeof UserSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface UserUpdateDTO\n */\ninterface UserUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof UserUpdateDTO\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface VariableCreateDTO\n */\ninterface VariableCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof VariableCreateDTO\n     */\n    key: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableCreateDTO\n     */\n    value: string;\n}\n/**\n *\n * @export\n * @interface VariableOutputArrayDTOAPI\n */\ninterface VariableOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<VariableOutputDTO>}\n     * @memberof VariableOutputArrayDTOAPI\n     */\n    data: Array<VariableOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof VariableOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface VariableOutputDTO\n */\ninterface VariableOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof VariableOutputDTO\n     */\n    key: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableOutputDTO\n     */\n    value: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof VariableOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof VariableOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface VariableOutputDTOAPI\n */\ninterface VariableOutputDTOAPI {\n    /**\n     *\n     * @type {VariableOutputDTO}\n     * @memberof VariableOutputDTOAPI\n     */\n    data: VariableOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof VariableOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface VariableSearchInputAllowedFilters\n */\ninterface VariableSearchInputAllowedFilters {\n    /**\n     *\n     * @type {string}\n     * @memberof VariableSearchInputAllowedFilters\n     */\n    id?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableSearchInputAllowedFilters\n     */\n    key?: string;\n}\n/**\n *\n * @export\n * @interface VariableSearchInputDTO\n */\ninterface VariableSearchInputDTO {\n    /**\n     *\n     * @type {VariableSearchInputAllowedFilters}\n     * @memberof VariableSearchInputDTO\n     */\n    filters?: VariableSearchInputAllowedFilters;\n    /**\n     *\n     * @type {VariableSearchInputAllowedFilters}\n     * @memberof VariableSearchInputDTO\n     */\n    search?: VariableSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof VariableSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof VariableSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableSearchInputDTO\n     */\n    sortDirection?: VariableSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof VariableSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const VariableSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype VariableSearchInputDTOSortDirectionEnum = typeof VariableSearchInputDTOSortDirectionEnum[keyof typeof VariableSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface VariableUpdateDTO\n */\ninterface VariableUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof VariableUpdateDTO\n     */\n    key: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableUpdateDTO\n     */\n    value: string;\n}\n/**\n * CommandApi - axios parameter creator\n * @export\n */\ndeclare const CommandApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {CommandCreateDTO} [commandCreateDTO] CommandCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreate: (commandCreateDTO?: CommandCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Create argument\n     * @param {CommandArgumentCreateDTO} [commandArgumentCreateDTO] CommandArgumentCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreateArgument: (commandArgumentCreateDTO?: CommandArgumentCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove argument\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemoveArgument: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {CommandSearchInputDTO} [commandSearchInputDTO] CommandSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerSearch: (commandSearchInputDTO?: CommandSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CommandUpdateDTO} [commandUpdateDTO] CommandUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdate: (id: string, commandUpdateDTO?: CommandUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update argument\n     * @param {string} id\n     * @param {CommandArgumentUpdateDTO} [commandArgumentUpdateDTO] CommandArgumentUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdateArgument: (id: string, commandArgumentUpdateDTO?: CommandArgumentUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * CommandApi - functional programming interface\n * @export\n */\ndeclare const CommandApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {CommandCreateDTO} [commandCreateDTO] CommandCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreate(commandCreateDTO?: CommandCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandOutputDTOAPI>>;\n    /**\n     *\n     * @summary Create argument\n     * @param {CommandArgumentCreateDTO} [commandArgumentCreateDTO] CommandArgumentCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreateArgument(commandArgumentCreateDTO?: CommandArgumentCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandArgumentDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Remove argument\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemoveArgument(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {CommandSearchInputDTO} [commandSearchInputDTO] CommandSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerSearch(commandSearchInputDTO?: CommandSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CommandUpdateDTO} [commandUpdateDTO] CommandUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdate(id: string, commandUpdateDTO?: CommandUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandOutputDTOAPI>>;\n    /**\n     *\n     * @summary Update argument\n     * @param {string} id\n     * @param {CommandArgumentUpdateDTO} [commandArgumentUpdateDTO] CommandArgumentUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdateArgument(id: string, commandArgumentUpdateDTO?: CommandArgumentUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandArgumentDTOAPI>>;\n};\n/**\n * CommandApi - factory interface\n * @export\n */\ndeclare const CommandApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {CommandCreateDTO} [commandCreateDTO] CommandCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreate(commandCreateDTO?: CommandCreateDTO, options?: any): AxiosPromise<CommandOutputDTOAPI>;\n    /**\n     *\n     * @summary Create argument\n     * @param {CommandArgumentCreateDTO} [commandArgumentCreateDTO] CommandArgumentCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreateArgument(commandArgumentCreateDTO?: CommandArgumentCreateDTO, options?: any): AxiosPromise<CommandArgumentDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerGetOne(id: string, options?: any): AxiosPromise<CommandOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Remove argument\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemoveArgument(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {CommandSearchInputDTO} [commandSearchInputDTO] CommandSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerSearch(commandSearchInputDTO?: CommandSearchInputDTO, options?: any): AxiosPromise<CommandOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CommandUpdateDTO} [commandUpdateDTO] CommandUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdate(id: string, commandUpdateDTO?: CommandUpdateDTO, options?: any): AxiosPromise<CommandOutputDTOAPI>;\n    /**\n     *\n     * @summary Update argument\n     * @param {string} id\n     * @param {CommandArgumentUpdateDTO} [commandArgumentUpdateDTO] CommandArgumentUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdateArgument(id: string, commandArgumentUpdateDTO?: CommandArgumentUpdateDTO, options?: any): AxiosPromise<CommandArgumentDTOAPI>;\n};\n/**\n * CommandApi - object-oriented interface\n * @export\n * @class CommandApi\n * @extends {BaseAPI}\n */\ndeclare class CommandApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {CommandCreateDTO} [commandCreateDTO] CommandCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerCreate(commandCreateDTO?: CommandCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Create argument\n     * @param {CommandArgumentCreateDTO} [commandArgumentCreateDTO] CommandArgumentCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerCreateArgument(commandArgumentCreateDTO?: CommandArgumentCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandArgumentDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove argument\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerRemoveArgument(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {CommandSearchInputDTO} [commandSearchInputDTO] CommandSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerSearch(commandSearchInputDTO?: CommandSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CommandUpdateDTO} [commandUpdateDTO] CommandUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerUpdate(id: string, commandUpdateDTO?: CommandUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Update argument\n     * @param {string} id\n     * @param {CommandArgumentUpdateDTO} [commandArgumentUpdateDTO] CommandArgumentUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerUpdateArgument(id: string, commandArgumentUpdateDTO?: CommandArgumentUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandArgumentDTOAPI, any>>;\n}\n/**\n * CronJobApi - axios parameter creator\n * @export\n */\ndeclare const CronJobApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {CronJobCreateDTO} [cronJobCreateDTO] CronJobCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerCreate: (cronJobCreateDTO?: CronJobCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {CronJobSearchInputDTO} [cronJobSearchInputDTO] CronJobSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerSearch: (cronJobSearchInputDTO?: CronJobSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CronJobUpdateDTO} [cronJobUpdateDTO] CronJobUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerUpdate: (id: string, cronJobUpdateDTO?: CronJobUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * CronJobApi - functional programming interface\n * @export\n */\ndeclare const CronJobApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {CronJobCreateDTO} [cronJobCreateDTO] CronJobCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerCreate(cronJobCreateDTO?: CronJobCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CronJobOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CronJobOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {CronJobSearchInputDTO} [cronJobSearchInputDTO] CronJobSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerSearch(cronJobSearchInputDTO?: CronJobSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CronJobOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CronJobUpdateDTO} [cronJobUpdateDTO] CronJobUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerUpdate(id: string, cronJobUpdateDTO?: CronJobUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CronJobOutputDTOAPI>>;\n};\n/**\n * CronJobApi - factory interface\n * @export\n */\ndeclare const CronJobApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {CronJobCreateDTO} [cronJobCreateDTO] CronJobCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerCreate(cronJobCreateDTO?: CronJobCreateDTO, options?: any): AxiosPromise<CronJobOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerGetOne(id: string, options?: any): AxiosPromise<CronJobOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {CronJobSearchInputDTO} [cronJobSearchInputDTO] CronJobSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerSearch(cronJobSearchInputDTO?: CronJobSearchInputDTO, options?: any): AxiosPromise<CronJobOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CronJobUpdateDTO} [cronJobUpdateDTO] CronJobUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerUpdate(id: string, cronJobUpdateDTO?: CronJobUpdateDTO, options?: any): AxiosPromise<CronJobOutputDTOAPI>;\n};\n/**\n * CronJobApi - object-oriented interface\n * @export\n * @class CronJobApi\n * @extends {BaseAPI}\n */\ndeclare class CronJobApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {CronJobCreateDTO} [cronJobCreateDTO] CronJobCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerCreate(cronJobCreateDTO?: CronJobCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CronJobOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CronJobOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {CronJobSearchInputDTO} [cronJobSearchInputDTO] CronJobSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerSearch(cronJobSearchInputDTO?: CronJobSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CronJobOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CronJobUpdateDTO} [cronJobUpdateDTO] CronJobUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerUpdate(id: string, cronJobUpdateDTO?: CronJobUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CronJobOutputDTOAPI, any>>;\n}\n/**\n * DomainApi - axios parameter creator\n * @export\n */\ndeclare const DomainApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {DomainCreateInputDTO} [domainCreateInputDTO] DomainCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerCreate: (domainCreateInputDTO?: DomainCreateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get token\n     * @param {TokenInputDTO} [tokenInputDTO] TokenInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetToken: (tokenInputDTO?: TokenInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {DomainSearchInputDTO} [domainSearchInputDTO] DomainSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerSearch: (domainSearchInputDTO?: DomainSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {DomainUpdateInputDTO} [domainUpdateInputDTO] DomainUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerUpdate: (id: string, domainUpdateInputDTO?: DomainUpdateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * DomainApi - functional programming interface\n * @export\n */\ndeclare const DomainApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {DomainCreateInputDTO} [domainCreateInputDTO] DomainCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerCreate(domainCreateInputDTO?: DomainCreateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DomainCreateOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DomainOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get token\n     * @param {TokenInputDTO} [tokenInputDTO] TokenInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetToken(tokenInputDTO?: TokenInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {DomainSearchInputDTO} [domainSearchInputDTO] DomainSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerSearch(domainSearchInputDTO?: DomainSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DomainOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {DomainUpdateInputDTO} [domainUpdateInputDTO] DomainUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerUpdate(id: string, domainUpdateInputDTO?: DomainUpdateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DomainOutputDTOAPI>>;\n};\n/**\n * DomainApi - factory interface\n * @export\n */\ndeclare const DomainApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {DomainCreateInputDTO} [domainCreateInputDTO] DomainCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerCreate(domainCreateInputDTO?: DomainCreateInputDTO, options?: any): AxiosPromise<DomainCreateOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetOne(id: string, options?: any): AxiosPromise<DomainOutputDTOAPI>;\n    /**\n     *\n     * @summary Get token\n     * @param {TokenInputDTO} [tokenInputDTO] TokenInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetToken(tokenInputDTO?: TokenInputDTO, options?: any): AxiosPromise<TokenOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {DomainSearchInputDTO} [domainSearchInputDTO] DomainSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerSearch(domainSearchInputDTO?: DomainSearchInputDTO, options?: any): AxiosPromise<DomainOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {DomainUpdateInputDTO} [domainUpdateInputDTO] DomainUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerUpdate(id: string, domainUpdateInputDTO?: DomainUpdateInputDTO, options?: any): AxiosPromise<DomainOutputDTOAPI>;\n};\n/**\n * DomainApi - object-oriented interface\n * @export\n * @class DomainApi\n * @extends {BaseAPI}\n */\ndeclare class DomainApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {DomainCreateInputDTO} [domainCreateInputDTO] DomainCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerCreate(domainCreateInputDTO?: DomainCreateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<DomainCreateOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<DomainOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get token\n     * @param {TokenInputDTO} [tokenInputDTO] TokenInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerGetToken(tokenInputDTO?: TokenInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<TokenOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {DomainSearchInputDTO} [domainSearchInputDTO] DomainSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerSearch(domainSearchInputDTO?: DomainSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<DomainOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {DomainUpdateInputDTO} [domainUpdateInputDTO] DomainUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerUpdate(id: string, domainUpdateInputDTO?: DomainUpdateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<DomainOutputDTOAPI, any>>;\n}\n/**\n * FunctionApi - axios parameter creator\n * @export\n */\ndeclare const FunctionApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {FunctionCreateDTO} [functionCreateDTO] FunctionCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerCreate: (functionCreateDTO?: FunctionCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {FunctionSearchInputDTO} [functionSearchInputDTO] FunctionSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerSearch: (functionSearchInputDTO?: FunctionSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {FunctionUpdateDTO} [functionUpdateDTO] FunctionUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerUpdate: (id: string, functionUpdateDTO?: FunctionUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * FunctionApi - functional programming interface\n * @export\n */\ndeclare const FunctionApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {FunctionCreateDTO} [functionCreateDTO] FunctionCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerCreate(functionCreateDTO?: FunctionCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FunctionOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FunctionOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {FunctionSearchInputDTO} [functionSearchInputDTO] FunctionSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerSearch(functionSearchInputDTO?: FunctionSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FunctionOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {FunctionUpdateDTO} [functionUpdateDTO] FunctionUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerUpdate(id: string, functionUpdateDTO?: FunctionUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FunctionOutputDTOAPI>>;\n};\n/**\n * FunctionApi - factory interface\n * @export\n */\ndeclare const FunctionApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {FunctionCreateDTO} [functionCreateDTO] FunctionCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerCreate(functionCreateDTO?: FunctionCreateDTO, options?: any): AxiosPromise<FunctionOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerGetOne(id: string, options?: any): AxiosPromise<FunctionOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {FunctionSearchInputDTO} [functionSearchInputDTO] FunctionSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerSearch(functionSearchInputDTO?: FunctionSearchInputDTO, options?: any): AxiosPromise<FunctionOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {FunctionUpdateDTO} [functionUpdateDTO] FunctionUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerUpdate(id: string, functionUpdateDTO?: FunctionUpdateDTO, options?: any): AxiosPromise<FunctionOutputDTOAPI>;\n};\n/**\n * FunctionApi - object-oriented interface\n * @export\n * @class FunctionApi\n * @extends {BaseAPI}\n */\ndeclare class FunctionApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {FunctionCreateDTO} [functionCreateDTO] FunctionCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerCreate(functionCreateDTO?: FunctionCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<FunctionOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<FunctionOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {FunctionSearchInputDTO} [functionSearchInputDTO] FunctionSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerSearch(functionSearchInputDTO?: FunctionSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<FunctionOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {FunctionUpdateDTO} [functionUpdateDTO] FunctionUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerUpdate(id: string, functionUpdateDTO?: FunctionUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<FunctionOutputDTOAPI, any>>;\n}\n/**\n * GameServerApi - axios parameter creator\n * @export\n */\ndeclare const GameServerApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {GameServerCreateDTO} [gameServerCreateDTO] GameServerCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerCreate: (gameServerCreateDTO?: GameServerCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Execute command\n     * @param {string} id\n     * @param {CommandExecuteInputDTO} [commandExecuteInputDTO] CommandExecuteInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerExecuteCommand: (id: string, commandExecuteInputDTO?: CommandExecuteInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get installed modules\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetInstalledModules: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get module installation\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetModuleInstallation: (gameserverId: string, moduleId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Install module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {ModuleInstallDTO} [moduleInstallDTO] ModuleInstallDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerInstallModule: (gameserverId: string, moduleId: string, moduleInstallDTO?: ModuleInstallDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {GameServerSearchInputDTO} [gameServerSearchInputDTO] GameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSearch: (gameServerSearchInputDTO?: GameServerSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {MessageSendInputDTO} [messageSendInputDTO] MessageSendInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSendMessage: (id: string, messageSendInputDTO?: MessageSendInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Teleport player\n     * @param {string} id\n     * @param {TeleportPlayerInputDTO} [teleportPlayerInputDTO] TeleportPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTeleportPlayer: (id: string, teleportPlayerInputDTO?: TeleportPlayerInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Test reachability\n     * @param {GameServerTestReachabilityInputDTO} [gameServerTestReachabilityInputDTO] GameServerTestReachabilityInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachability: (gameServerTestReachabilityInputDTO?: GameServerTestReachabilityInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Test reachability for id\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachabilityForId: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Uninstall module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUninstallModule: (gameserverId: string, moduleId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {GameServerUpdateDTO} [gameServerUpdateDTO] GameServerUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUpdate: (id: string, gameServerUpdateDTO?: GameServerUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * GameServerApi - functional programming interface\n * @export\n */\ndeclare const GameServerApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {GameServerCreateDTO} [gameServerCreateDTO] GameServerCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerCreate(gameServerCreateDTO?: GameServerCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerOutputDTOAPI>>;\n    /**\n     *\n     * @summary Execute command\n     * @param {string} id\n     * @param {CommandExecuteInputDTO} [commandExecuteInputDTO] CommandExecuteInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerExecuteCommand(id: string, commandExecuteInputDTO?: CommandExecuteInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandExecuteDTOAPI>>;\n    /**\n     *\n     * @summary Get installed modules\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetInstalledModules(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleInstallationOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Get module installation\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetModuleInstallation(gameserverId: string, moduleId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleInstallationOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerOutputDTOAPI>>;\n    /**\n     *\n     * @summary Install module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {ModuleInstallDTO} [moduleInstallDTO] ModuleInstallDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerInstallModule(gameserverId: string, moduleId: string, moduleInstallDTO?: ModuleInstallDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleInstallationOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {GameServerSearchInputDTO} [gameServerSearchInputDTO] GameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSearch(gameServerSearchInputDTO?: GameServerSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {MessageSendInputDTO} [messageSendInputDTO] MessageSendInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSendMessage(id: string, messageSendInputDTO?: MessageSendInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Teleport player\n     * @param {string} id\n     * @param {TeleportPlayerInputDTO} [teleportPlayerInputDTO] TeleportPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTeleportPlayer(id: string, teleportPlayerInputDTO?: TeleportPlayerInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Test reachability\n     * @param {GameServerTestReachabilityInputDTO} [gameServerTestReachabilityInputDTO] GameServerTestReachabilityInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachability(gameServerTestReachabilityInputDTO?: GameServerTestReachabilityInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerTestReachabilityDTOAPI>>;\n    /**\n     *\n     * @summary Test reachability for id\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachabilityForId(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerTestReachabilityDTOAPI>>;\n    /**\n     *\n     * @summary Uninstall module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUninstallModule(gameserverId: string, moduleId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleInstallationOutputDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {GameServerUpdateDTO} [gameServerUpdateDTO] GameServerUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUpdate(id: string, gameServerUpdateDTO?: GameServerUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerOutputDTOAPI>>;\n};\n/**\n * GameServerApi - factory interface\n * @export\n */\ndeclare const GameServerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {GameServerCreateDTO} [gameServerCreateDTO] GameServerCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerCreate(gameServerCreateDTO?: GameServerCreateDTO, options?: any): AxiosPromise<GameServerOutputDTOAPI>;\n    /**\n     *\n     * @summary Execute command\n     * @param {string} id\n     * @param {CommandExecuteInputDTO} [commandExecuteInputDTO] CommandExecuteInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerExecuteCommand(id: string, commandExecuteInputDTO?: CommandExecuteInputDTO, options?: any): AxiosPromise<CommandExecuteDTOAPI>;\n    /**\n     *\n     * @summary Get installed modules\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetInstalledModules(id: string, options?: any): AxiosPromise<ModuleInstallationOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Get module installation\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetModuleInstallation(gameserverId: string, moduleId: string, options?: any): AxiosPromise<ModuleInstallationOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetOne(id: string, options?: any): AxiosPromise<GameServerOutputDTOAPI>;\n    /**\n     *\n     * @summary Install module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {ModuleInstallDTO} [moduleInstallDTO] ModuleInstallDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerInstallModule(gameserverId: string, moduleId: string, moduleInstallDTO?: ModuleInstallDTO, options?: any): AxiosPromise<ModuleInstallationOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {GameServerSearchInputDTO} [gameServerSearchInputDTO] GameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSearch(gameServerSearchInputDTO?: GameServerSearchInputDTO, options?: any): AxiosPromise<GameServerOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {MessageSendInputDTO} [messageSendInputDTO] MessageSendInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSendMessage(id: string, messageSendInputDTO?: MessageSendInputDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Teleport player\n     * @param {string} id\n     * @param {TeleportPlayerInputDTO} [teleportPlayerInputDTO] TeleportPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTeleportPlayer(id: string, teleportPlayerInputDTO?: TeleportPlayerInputDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Test reachability\n     * @param {GameServerTestReachabilityInputDTO} [gameServerTestReachabilityInputDTO] GameServerTestReachabilityInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachability(gameServerTestReachabilityInputDTO?: GameServerTestReachabilityInputDTO, options?: any): AxiosPromise<GameServerTestReachabilityDTOAPI>;\n    /**\n     *\n     * @summary Test reachability for id\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachabilityForId(id: string, options?: any): AxiosPromise<GameServerTestReachabilityDTOAPI>;\n    /**\n     *\n     * @summary Uninstall module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUninstallModule(gameserverId: string, moduleId: string, options?: any): AxiosPromise<ModuleInstallationOutputDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {GameServerUpdateDTO} [gameServerUpdateDTO] GameServerUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUpdate(id: string, gameServerUpdateDTO?: GameServerUpdateDTO, options?: any): AxiosPromise<GameServerOutputDTOAPI>;\n};\n/**\n * GameServerApi - object-oriented interface\n * @export\n * @class GameServerApi\n * @extends {BaseAPI}\n */\ndeclare class GameServerApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {GameServerCreateDTO} [gameServerCreateDTO] GameServerCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerCreate(gameServerCreateDTO?: GameServerCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Execute command\n     * @param {string} id\n     * @param {CommandExecuteInputDTO} [commandExecuteInputDTO] CommandExecuteInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerExecuteCommand(id: string, commandExecuteInputDTO?: CommandExecuteInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandExecuteDTOAPI, any>>;\n    /**\n     *\n     * @summary Get installed modules\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerGetInstalledModules(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleInstallationOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Get module installation\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerGetModuleInstallation(gameserverId: string, moduleId: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleInstallationOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Install module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {ModuleInstallDTO} [moduleInstallDTO] ModuleInstallDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerInstallModule(gameserverId: string, moduleId: string, moduleInstallDTO?: ModuleInstallDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleInstallationOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {GameServerSearchInputDTO} [gameServerSearchInputDTO] GameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerSearch(gameServerSearchInputDTO?: GameServerSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {MessageSendInputDTO} [messageSendInputDTO] MessageSendInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerSendMessage(id: string, messageSendInputDTO?: MessageSendInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Teleport player\n     * @param {string} id\n     * @param {TeleportPlayerInputDTO} [teleportPlayerInputDTO] TeleportPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerTeleportPlayer(id: string, teleportPlayerInputDTO?: TeleportPlayerInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Test reachability\n     * @param {GameServerTestReachabilityInputDTO} [gameServerTestReachabilityInputDTO] GameServerTestReachabilityInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerTestReachability(gameServerTestReachabilityInputDTO?: GameServerTestReachabilityInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerTestReachabilityDTOAPI, any>>;\n    /**\n     *\n     * @summary Test reachability for id\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerTestReachabilityForId(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerTestReachabilityDTOAPI, any>>;\n    /**\n     *\n     * @summary Uninstall module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerUninstallModule(gameserverId: string, moduleId: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleInstallationOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {GameServerUpdateDTO} [gameServerUpdateDTO] GameServerUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerUpdate(id: string, gameServerUpdateDTO?: GameServerUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerOutputDTOAPI, any>>;\n}\n/**\n * HookApi - axios parameter creator\n * @export\n */\ndeclare const HookApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {HookCreateDTO} [hookCreateDTO] HookCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerCreate: (hookCreateDTO?: HookCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {HookSearchInputDTO} [hookSearchInputDTO] HookSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerSearch: (hookSearchInputDTO?: HookSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {HookUpdateDTO} [hookUpdateDTO] HookUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerUpdate: (id: string, hookUpdateDTO?: HookUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * HookApi - functional programming interface\n * @export\n */\ndeclare const HookApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {HookCreateDTO} [hookCreateDTO] HookCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerCreate(hookCreateDTO?: HookCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HookOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HookOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {HookSearchInputDTO} [hookSearchInputDTO] HookSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerSearch(hookSearchInputDTO?: HookSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HookOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {HookUpdateDTO} [hookUpdateDTO] HookUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerUpdate(id: string, hookUpdateDTO?: HookUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HookOutputDTOAPI>>;\n};\n/**\n * HookApi - factory interface\n * @export\n */\ndeclare const HookApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {HookCreateDTO} [hookCreateDTO] HookCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerCreate(hookCreateDTO?: HookCreateDTO, options?: any): AxiosPromise<HookOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerGetOne(id: string, options?: any): AxiosPromise<HookOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {HookSearchInputDTO} [hookSearchInputDTO] HookSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerSearch(hookSearchInputDTO?: HookSearchInputDTO, options?: any): AxiosPromise<HookOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {HookUpdateDTO} [hookUpdateDTO] HookUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerUpdate(id: string, hookUpdateDTO?: HookUpdateDTO, options?: any): AxiosPromise<HookOutputDTOAPI>;\n};\n/**\n * HookApi - object-oriented interface\n * @export\n * @class HookApi\n * @extends {BaseAPI}\n */\ndeclare class HookApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {HookCreateDTO} [hookCreateDTO] HookCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerCreate(hookCreateDTO?: HookCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HookOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HookOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {HookSearchInputDTO} [hookSearchInputDTO] HookSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerSearch(hookSearchInputDTO?: HookSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HookOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {HookUpdateDTO} [hookUpdateDTO] HookUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerUpdate(id: string, hookUpdateDTO?: HookUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HookOutputDTOAPI, any>>;\n}\n/**\n * MetaApi - axios parameter creator\n * @export\n */\ndeclare const MetaApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get health\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetHealth: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get metrics\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetMetrics: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get open api\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApi: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get open api html\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApiHtml: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get readiness\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetReadiness: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * MetaApi - functional programming interface\n * @export\n */\ndeclare const MetaApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get health\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetHealth(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HealthOutputDTO>>;\n    /**\n     *\n     * @summary Get metrics\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetMetrics(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Get open api\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApi(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Get open api html\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApiHtml(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Get readiness\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetReadiness(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HealthOutputDTO>>;\n};\n/**\n * MetaApi - factory interface\n * @export\n */\ndeclare const MetaApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Get health\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetHealth(options?: any): AxiosPromise<HealthOutputDTO>;\n    /**\n     *\n     * @summary Get metrics\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetMetrics(options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Get open api\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApi(options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Get open api html\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApiHtml(options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Get readiness\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetReadiness(options?: any): AxiosPromise<HealthOutputDTO>;\n};\n/**\n * MetaApi - object-oriented interface\n * @export\n * @class MetaApi\n * @extends {BaseAPI}\n */\ndeclare class MetaApi extends BaseAPI {\n    /**\n     *\n     * @summary Get health\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetHealth(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HealthOutputDTO, any>>;\n    /**\n     *\n     * @summary Get metrics\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetMetrics(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Get open api\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetOpenApi(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Get open api html\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetOpenApiHtml(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Get readiness\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetReadiness(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HealthOutputDTO, any>>;\n}\n/**\n * ModuleApi - axios parameter creator\n * @export\n */\ndeclare const ModuleApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {ModuleCreateDTO} [moduleCreateDTO] ModuleCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerCreate: (moduleCreateDTO?: ModuleCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {ModuleSearchInputDTO} [moduleSearchInputDTO] ModuleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerSearch: (moduleSearchInputDTO?: ModuleSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ModuleUpdateDTO} [moduleUpdateDTO] ModuleUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerUpdate: (id: string, moduleUpdateDTO?: ModuleUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * ModuleApi - functional programming interface\n * @export\n */\ndeclare const ModuleApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {ModuleCreateDTO} [moduleCreateDTO] ModuleCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerCreate(moduleCreateDTO?: ModuleCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {ModuleSearchInputDTO} [moduleSearchInputDTO] ModuleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerSearch(moduleSearchInputDTO?: ModuleSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ModuleUpdateDTO} [moduleUpdateDTO] ModuleUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerUpdate(id: string, moduleUpdateDTO?: ModuleUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleOutputDTOAPI>>;\n};\n/**\n * ModuleApi - factory interface\n * @export\n */\ndeclare const ModuleApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {ModuleCreateDTO} [moduleCreateDTO] ModuleCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerCreate(moduleCreateDTO?: ModuleCreateDTO, options?: any): AxiosPromise<ModuleOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerGetOne(id: string, options?: any): AxiosPromise<ModuleOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {ModuleSearchInputDTO} [moduleSearchInputDTO] ModuleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerSearch(moduleSearchInputDTO?: ModuleSearchInputDTO, options?: any): AxiosPromise<ModuleOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ModuleUpdateDTO} [moduleUpdateDTO] ModuleUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerUpdate(id: string, moduleUpdateDTO?: ModuleUpdateDTO, options?: any): AxiosPromise<ModuleOutputDTOAPI>;\n};\n/**\n * ModuleApi - object-oriented interface\n * @export\n * @class ModuleApi\n * @extends {BaseAPI}\n */\ndeclare class ModuleApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {ModuleCreateDTO} [moduleCreateDTO] ModuleCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerCreate(moduleCreateDTO?: ModuleCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {ModuleSearchInputDTO} [moduleSearchInputDTO] ModuleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerSearch(moduleSearchInputDTO?: ModuleSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ModuleUpdateDTO} [moduleUpdateDTO] ModuleUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerUpdate(id: string, moduleUpdateDTO?: ModuleUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleOutputDTOAPI, any>>;\n}\n/**\n * PlayerApi - axios parameter creator\n * @export\n */\ndeclare const PlayerApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerSearchInputDTO} [playerSearchInputDTO] PlayerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerSearch: (playerSearchInputDTO?: PlayerSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * PlayerApi - functional programming interface\n * @export\n */\ndeclare const PlayerApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOutputDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerSearchInputDTO} [playerSearchInputDTO] PlayerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerSearch(playerSearchInputDTO?: PlayerSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOutputArrayDTOAPI>>;\n};\n/**\n * PlayerApi - factory interface\n * @export\n */\ndeclare const PlayerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerGetOne(id: string, options?: any): AxiosPromise<PlayerOutputDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerSearchInputDTO} [playerSearchInputDTO] PlayerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerSearch(playerSearchInputDTO?: PlayerSearchInputDTO, options?: any): AxiosPromise<PlayerOutputArrayDTOAPI>;\n};\n/**\n * PlayerApi - object-oriented interface\n * @export\n * @class PlayerApi\n * @extends {BaseAPI}\n */\ndeclare class PlayerApi extends BaseAPI {\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerApi\n     */\n    playerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerSearchInputDTO} [playerSearchInputDTO] PlayerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerApi\n     */\n    playerControllerSearch(playerSearchInputDTO?: PlayerSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOutputArrayDTOAPI, any>>;\n}\n/**\n * RoleApi - axios parameter creator\n * @export\n */\ndeclare const RoleApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {RoleCreateInputDTO} [roleCreateInputDTO] RoleCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerCreate: (roleCreateInputDTO?: RoleCreateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {RoleSearchInputDTO} [roleSearchInputDTO] RoleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerSearch: (roleSearchInputDTO?: RoleSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {RoleUpdateInputDTO} [roleUpdateInputDTO] RoleUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerUpdate: (id: string, roleUpdateInputDTO?: RoleUpdateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * RoleApi - functional programming interface\n * @export\n */\ndeclare const RoleApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {RoleCreateInputDTO} [roleCreateInputDTO] RoleCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerCreate(roleCreateInputDTO?: RoleCreateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {RoleSearchInputDTO} [roleSearchInputDTO] RoleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerSearch(roleSearchInputDTO?: RoleSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {RoleUpdateInputDTO} [roleUpdateInputDTO] RoleUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerUpdate(id: string, roleUpdateInputDTO?: RoleUpdateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleOutputDTOAPI>>;\n};\n/**\n * RoleApi - factory interface\n * @export\n */\ndeclare const RoleApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {RoleCreateInputDTO} [roleCreateInputDTO] RoleCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerCreate(roleCreateInputDTO?: RoleCreateInputDTO, options?: any): AxiosPromise<RoleOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerGetOne(id: string, options?: any): AxiosPromise<RoleOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {RoleSearchInputDTO} [roleSearchInputDTO] RoleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerSearch(roleSearchInputDTO?: RoleSearchInputDTO, options?: any): AxiosPromise<RoleOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {RoleUpdateInputDTO} [roleUpdateInputDTO] RoleUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerUpdate(id: string, roleUpdateInputDTO?: RoleUpdateInputDTO, options?: any): AxiosPromise<RoleOutputDTOAPI>;\n};\n/**\n * RoleApi - object-oriented interface\n * @export\n * @class RoleApi\n * @extends {BaseAPI}\n */\ndeclare class RoleApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {RoleCreateInputDTO} [roleCreateInputDTO] RoleCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerCreate(roleCreateInputDTO?: RoleCreateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<RoleOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<RoleOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {RoleSearchInputDTO} [roleSearchInputDTO] RoleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerSearch(roleSearchInputDTO?: RoleSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<RoleOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {RoleUpdateInputDTO} [roleUpdateInputDTO] RoleUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerUpdate(id: string, roleUpdateInputDTO?: RoleUpdateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<RoleOutputDTOAPI, any>>;\n}\n/**\n * SettingsApi - axios parameter creator\n * @export\n */\ndeclare const SettingsApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get\n     * @param {Array<'commandPrefix' | 'serverChatName'>} [keys]\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGet: (keys?: Array<'commandPrefix' | 'serverChatName'>, gameServerId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} key\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGetOne: (key: string, gameServerId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Set\n     * @param {string} key\n     * @param {SettingsSetDTO} [settingsSetDTO] SettingsSetDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerSet: (key: string, settingsSetDTO?: SettingsSetDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * SettingsApi - functional programming interface\n * @export\n */\ndeclare const SettingsApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get\n     * @param {Array<'commandPrefix' | 'serverChatName'>} [keys]\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGet(keys?: Array<'commandPrefix' | 'serverChatName'>, gameServerId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SettingsOutputObjectDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} key\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGetOne(key: string, gameServerId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SettingsOutputDTOAPI>>;\n    /**\n     *\n     * @summary Set\n     * @param {string} key\n     * @param {SettingsSetDTO} [settingsSetDTO] SettingsSetDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerSet(key: string, settingsSetDTO?: SettingsSetDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SettingsOutputDTOAPI>>;\n};\n/**\n * SettingsApi - factory interface\n * @export\n */\ndeclare const SettingsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Get\n     * @param {Array<'commandPrefix' | 'serverChatName'>} [keys]\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGet(keys?: Array<'commandPrefix' | 'serverChatName'>, gameServerId?: string, options?: any): AxiosPromise<SettingsOutputObjectDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} key\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGetOne(key: string, gameServerId?: string, options?: any): AxiosPromise<SettingsOutputDTOAPI>;\n    /**\n     *\n     * @summary Set\n     * @param {string} key\n     * @param {SettingsSetDTO} [settingsSetDTO] SettingsSetDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerSet(key: string, settingsSetDTO?: SettingsSetDTO, options?: any): AxiosPromise<SettingsOutputDTOAPI>;\n};\n/**\n * SettingsApi - object-oriented interface\n * @export\n * @class SettingsApi\n * @extends {BaseAPI}\n */\ndeclare class SettingsApi extends BaseAPI {\n    /**\n     *\n     * @summary Get\n     * @param {Array<'commandPrefix' | 'serverChatName'>} [keys]\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    settingsControllerGet(keys?: Array<'commandPrefix' | 'serverChatName'>, gameServerId?: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<SettingsOutputObjectDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} key\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    settingsControllerGetOne(key: string, gameServerId?: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<SettingsOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Set\n     * @param {string} key\n     * @param {SettingsSetDTO} [settingsSetDTO] SettingsSetDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    settingsControllerSet(key: string, settingsSetDTO?: SettingsSetDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<SettingsOutputDTOAPI, any>>;\n}\n/**\n * UserApi - axios parameter creator\n * @export\n */\ndeclare const UserApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerAssignRole: (id: string, roleId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Create\n     * @param {UserCreateInputDTO} [userCreateInputDTO] UserCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerCreate: (userCreateInputDTO?: UserCreateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Login\n     * @param {LoginDTO} [loginDTO] LoginDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogin: (loginDTO?: LoginDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogout: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerMe: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemoveRole: (id: string, roleId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {UserSearchInputDTO} [userSearchInputDTO] UserSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerSearch: (userSearchInputDTO?: UserSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {UserUpdateDTO} [userUpdateDTO] UserUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerUpdate: (id: string, userUpdateDTO?: UserUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * UserApi - functional programming interface\n * @export\n */\ndeclare const UserApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerAssignRole(id: string, roleId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Create\n     * @param {UserCreateInputDTO} [userCreateInputDTO] UserCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerCreate(userCreateInputDTO?: UserCreateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputDTOAPI>>;\n    /**\n     *\n     * @summary Login\n     * @param {LoginDTO} [loginDTO] LoginDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogin(loginDTO?: LoginDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginOutputDTOAPI>>;\n    /**\n     *\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogout(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerMe(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemoveRole(id: string, roleId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Search\n     * @param {UserSearchInputDTO} [userSearchInputDTO] UserSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerSearch(userSearchInputDTO?: UserSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {UserUpdateDTO} [userUpdateDTO] UserUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerUpdate(id: string, userUpdateDTO?: UserUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputDTOAPI>>;\n};\n/**\n * UserApi - factory interface\n * @export\n */\ndeclare const UserApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerAssignRole(id: string, roleId: string, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Create\n     * @param {UserCreateInputDTO} [userCreateInputDTO] UserCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerCreate(userCreateInputDTO?: UserCreateInputDTO, options?: any): AxiosPromise<UserOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerGetOne(id: string, options?: any): AxiosPromise<UserOutputDTOAPI>;\n    /**\n     *\n     * @summary Login\n     * @param {LoginDTO} [loginDTO] LoginDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogin(loginDTO?: LoginDTO, options?: any): AxiosPromise<LoginOutputDTOAPI>;\n    /**\n     *\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogout(options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerMe(options?: any): AxiosPromise<UserOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemoveRole(id: string, roleId: string, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Search\n     * @param {UserSearchInputDTO} [userSearchInputDTO] UserSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerSearch(userSearchInputDTO?: UserSearchInputDTO, options?: any): AxiosPromise<UserOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {UserUpdateDTO} [userUpdateDTO] UserUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerUpdate(id: string, userUpdateDTO?: UserUpdateDTO, options?: any): AxiosPromise<UserOutputDTOAPI>;\n};\n/**\n * UserApi - object-oriented interface\n * @export\n * @class UserApi\n * @extends {BaseAPI}\n */\ndeclare class UserApi extends BaseAPI {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerAssignRole(id: string, roleId: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Create\n     * @param {UserCreateInputDTO} [userCreateInputDTO] UserCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerCreate(userCreateInputDTO?: UserCreateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Login\n     * @param {LoginDTO} [loginDTO] LoginDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerLogin(loginDTO?: LoginDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<LoginOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerLogout(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerMe(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerRemoveRole(id: string, roleId: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {UserSearchInputDTO} [userSearchInputDTO] UserSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerSearch(userSearchInputDTO?: UserSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {UserUpdateDTO} [userUpdateDTO] UserUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerUpdate(id: string, userUpdateDTO?: UserUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputDTOAPI, any>>;\n}\n/**\n * VariableApi - axios parameter creator\n * @export\n */\ndeclare const VariableApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {VariableCreateDTO} [variableCreateDTO] VariableCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerCreate: (variableCreateDTO?: VariableCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerDelete: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Find\n     * @param {VariableSearchInputDTO} [variableSearchInputDTO] VariableSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerFind: (variableSearchInputDTO?: VariableSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerFindOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {VariableUpdateDTO} [variableUpdateDTO] VariableUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerUpdate: (id: string, variableUpdateDTO?: VariableUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * VariableApi - functional programming interface\n * @export\n */\ndeclare const VariableApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {VariableCreateDTO} [variableCreateDTO] VariableCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerCreate(variableCreateDTO?: VariableCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOutputDTOAPI>>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerDelete(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Find\n     * @param {VariableSearchInputDTO} [variableSearchInputDTO] VariableSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerFind(variableSearchInputDTO?: VariableSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOutputDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {VariableUpdateDTO} [variableUpdateDTO] VariableUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerUpdate(id: string, variableUpdateDTO?: VariableUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOutputDTOAPI>>;\n};\n/**\n * VariableApi - factory interface\n * @export\n */\ndeclare const VariableApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {VariableCreateDTO} [variableCreateDTO] VariableCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerCreate(variableCreateDTO?: VariableCreateDTO, options?: any): AxiosPromise<VariableOutputDTOAPI>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerDelete(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Find\n     * @param {VariableSearchInputDTO} [variableSearchInputDTO] VariableSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerFind(variableSearchInputDTO?: VariableSearchInputDTO, options?: any): AxiosPromise<VariableOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerFindOne(id: string, options?: any): AxiosPromise<VariableOutputDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {VariableUpdateDTO} [variableUpdateDTO] VariableUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerUpdate(id: string, variableUpdateDTO?: VariableUpdateDTO, options?: any): AxiosPromise<VariableOutputDTOAPI>;\n};\n/**\n * VariableApi - object-oriented interface\n * @export\n * @class VariableApi\n * @extends {BaseAPI}\n */\ndeclare class VariableApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {VariableCreateDTO} [variableCreateDTO] VariableCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerCreate(variableCreateDTO?: VariableCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<VariableOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerDelete(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Find\n     * @param {VariableSearchInputDTO} [variableSearchInputDTO] VariableSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerFind(variableSearchInputDTO?: VariableSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<VariableOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<VariableOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {VariableUpdateDTO} [variableUpdateDTO] VariableUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerUpdate(id: string, variableUpdateDTO?: VariableUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<VariableOutputDTOAPI, any>>;\n}\n","file://node_modules/@takaro/apiclient/dist/generated/base.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\ndeclare const BASE_PATH: string;\n/**\n *\n * @export\n */\ndeclare const COLLECTION_FORMATS: {\n    csv: string;\n    ssv: string;\n    tsv: string;\n    pipes: string;\n};\n/**\n *\n * @export\n * @interface RequestArgs\n */\ninterface RequestArgs {\n    url: string;\n    options: AxiosRequestConfig;\n}\n/**\n *\n * @export\n * @class BaseAPI\n */\ndeclare class BaseAPI {\n    protected basePath: string;\n    protected axios: AxiosInstance;\n    protected configuration: Configuration | undefined;\n    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);\n}\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\ndeclare class RequiredError extends Error {\n    field: string;\n    name: 'RequiredError';\n    constructor(field: string, msg?: string);\n}\n","file://node_modules/@takaro/apiclient/dist/generated/common.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/**\n *\n * @export\n */\ndeclare const DUMMY_BASE_URL = \"https://example.com\";\n/**\n *\n * @throws {RequiredError}\n * @export\n */\ndeclare const assertParamExists: (functionName: string, paramName: string, paramValue: unknown) => void;\n/**\n *\n * @export\n */\ndeclare const setApiKeyToObject: (object: any, keyParamName: string, configuration?: Configuration) => Promise<void>;\n/**\n *\n * @export\n */\ndeclare const setBasicAuthToObject: (object: any, configuration?: Configuration) => void;\n/**\n *\n * @export\n */\ndeclare const setBearerAuthToObject: (object: any, configuration?: Configuration) => Promise<void>;\n/**\n *\n * @export\n */\ndeclare const setOAuthToObject: (object: any, name: string, scopes: string[], configuration?: Configuration) => Promise<void>;\n/**\n *\n * @export\n */\ndeclare const setSearchParams: (url: URL, ...objects: any[]) => void;\n/**\n *\n * @export\n */\ndeclare const serializeDataIfNeeded: (value: any, requestOptions: any, configuration?: Configuration) => any;\n/**\n *\n * @export\n */\ndeclare const toPathString: (url: URL) => string;\n/**\n *\n * @export\n */\ndeclare const createRequestFunction: (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) => <T = unknown, R = AxiosResponse<T, any>>(axios?: AxiosInstance, basePath?: string) => Promise<R>;\n","file://node_modules/@takaro/apiclient/dist/generated/configuration.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\ninterface ConfigurationParameters {\n    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);\n    username?: string;\n    password?: string;\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);\n    basePath?: string;\n    baseOptions?: any;\n    formDataCtor?: new () => any;\n}\ndeclare class Configuration {\n    /**\n     * parameter for apiKey security\n     * @param name security name\n     * @memberof Configuration\n     */\n    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);\n    /**\n     * parameter for basic security\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    username?: string;\n    /**\n     * parameter for basic security\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    password?: string;\n    /**\n     * parameter for oauth2 security\n     * @param name security name\n     * @param scopes oauth2 scope\n     * @memberof Configuration\n     */\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);\n    /**\n     * override base path\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    basePath?: string;\n    /**\n     * base options for axios calls\n     *\n     * @type {any}\n     * @memberof Configuration\n     */\n    baseOptions?: any;\n    /**\n     * The FormData constructor that will be used to create multipart form data\n     * requests. You can inject this here so that execution environments that\n     * do not support the FormData class can still run the generated client.\n     *\n     * @type {new () => FormData}\n     */\n    formDataCtor?: new () => any;\n    constructor(param?: ConfigurationParameters);\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    isJsonMime(mime: string): boolean;\n}\n","file://node_modules/@takaro/apiclient/dist/generated/index.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n* from './api.js';\n* from './configuration.js';\n","file://node_modules/@takaro/apiclient/dist/lib/adminClient.d.ts":"interface IAdminApiClientConfig extends IBaseApiClientConfig {\n    auth: {\n        clientId: string;\n        clientSecret: string;\n    };\n    OAuth2URL: string;\n}\ndeclare class AdminClient extends BaseApiClient<IAdminApiClientConfig> {\n    private cachedIssuer;\n    private cachedClient;\n    private token;\n    constructor(config: IAdminApiClientConfig);\n    private getIssuer;\n    getOidcToken(): Promise<TokenSet>;\n    private addAuthInterceptor;\n    get domain(): DomainApi;\n}\n","file://node_modules/@takaro/apiclient/dist/lib/baseClient.d.ts":"interface IBaseApiClientConfig {\n    url: string;\n    log?: Logger;\n}\ninterface Logger {\n    info: (msg: string, meta?: unknown) => void;\n    warn: (msg: string, meta?: unknown) => void;\n    error: (msg: string, meta?: unknown) => void;\n    debug: (msg: string, meta?: unknown) => void;\n}\ndeclare class BaseApiClient<T extends IBaseApiClientConfig> {\n    protected readonly config: T;\n    protected axios: AxiosInstance;\n    protected log: Logger;\n    constructor(config: T);\n    isJsonMime(mime: string): boolean;\n    private addLoggers;\n    /**\n     * Wait until the API reports that it is healthy\n     * @param timeout in milliseconds\n     */\n    waitUntilHealthy(timeout?: number): Promise<void>;\n    get meta(): MetaApi;\n}\n{};\n","file://node_modules/@takaro/apiclient/dist/lib/client.d.ts":"interface IApiClientConfig extends IBaseApiClientConfig {\n    auth: {\n        username?: string;\n        password?: string;\n        token?: string;\n    };\n}\ndeclare class Client extends BaseApiClient<IApiClientConfig> {\n    constructor(config: IApiClientConfig);\n    set username(username: string);\n    set password(password: string);\n    login(): Promise<void>;\n    logout(): void;\n    get user(): UserApi;\n    get role(): RoleApi;\n    get gameserver(): GameServerApi;\n    get cronjob(): CronJobApi;\n    get function(): FunctionApi;\n    get module(): ModuleApi;\n    get hook(): HookApi;\n    get command(): CommandApi;\n    get player(): PlayerApi;\n    get settings(): SettingsApi;\n    get variable(): VariableApi;\n}\n","file://node_modules/@takaro/apiclient/dist/main.d.ts":"{ AxiosResponse } from 'axios';\n{ isAxiosError } from 'axios';\n{ AdminClient } from './lib/adminClient.js';\n{ Client } from './lib/client.js';\ntype ITakaroAPIAxiosResponse<T> = AxiosResponse<T>;\n* from './generated/api.js';\n","file://node_modules/@takaro/config/package.json":"{\"name\":\"@takaro/config\",\"types\":\"dist/main.d.ts\"}","file://node_modules/@takaro/config/dist/main.d.ts":"interface IBaseConfig {\n    app: {\n        name: string;\n    };\n    mode: 'development' | 'production' | 'test';\n}\ndeclare const baseConfigConvict: Schema<IBaseConfig>;\ndeclare class Config<T extends IBaseConfig> {\n    _config: convict.Config<T>;\n    constructor(valuesArray?: Schema<Partial<T>>[]);\n    get<K extends Path<T>>(arg: K): K extends null | undefined ? T : K extends Path<T> ? PathValue<T, K> : never;\n    load(data: Partial<T>): void;\n    validate(): void;\n}\n"}

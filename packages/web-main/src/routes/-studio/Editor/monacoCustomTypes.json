{"file://node_modules/@takaro/helpers/package.json":"{\"name\":\"@takaro/helpers\",\"types\":\"dist/main.d.ts\"}","file://node_modules/@takaro/helpers/dist/TakaroUserError.d.ts":"declare class TakaroUserError extends Error {\n    constructor(message: string);\n}\n","file://node_modules/@takaro/helpers/dist/checkPermission.d.ts":"declare function checkPermission(player: any, permission: string): any;\n","file://node_modules/@takaro/helpers/dist/config.d.ts":"interface IHelpersConfig extends IBaseConfig {\n    apiClient: {\n        token: string;\n        url: string;\n    };\n    data: string;\n}\ndeclare const config: Config<IHelpersConfig>;\n{};\n","file://node_modules/@takaro/helpers/dist/getData.d.ts":"declare function getData(): Promise<any>;\n","file://node_modules/@takaro/helpers/dist/getTakaro.d.ts":"/// <reference types=\"node\" resolution-mode=\"require\"/>\ndeclare function getTakaro(data: Record<string, any>, logger?: Pick<Console, 'log' | 'debug' | 'error' | 'warn' | 'info'>): Promise<Client>;\n","file://node_modules/@takaro/helpers/dist/main.d.ts":"{ getTakaro } from './getTakaro.js';\n{ getData } from './getData.js';\n{ checkPermission } from './checkPermission.js';\n{ TakaroUserError } from './TakaroUserError.js';\n* as _ from 'lodash-es';\n* as axios from 'axios';\n","file://node_modules/@takaro/apiclient/package.json":"{\"name\":\"@takaro/apiclient\",\"types\":\"dist/main.d.ts\"}","file://node_modules/@takaro/apiclient/dist/generated/api.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/**\n *\n * @export\n * @interface APIOutput\n */\ninterface APIOutput {\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof APIOutput\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface BanDTO\n */\ninterface BanDTO {\n    /**\n     *\n     * @type {IPlayerReferenceDTO}\n     * @memberof BanDTO\n     */\n    player: IPlayerReferenceDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof BanDTO\n     */\n    reason: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof BanDTO\n     */\n    expiresAt?: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface BanInputDTO\n */\ninterface BanInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof BanInputDTO\n     */\n    reason?: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof BanInputDTO\n     */\n    expiresAt?: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface BanOutputDTO\n */\ninterface BanOutputDTO {\n    /**\n     *\n     * @type {Array<BanDTO>}\n     * @memberof BanOutputDTO\n     */\n    data: Array<BanDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof BanOutputDTO\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface BaseGameEvent\n */\ninterface BaseGameEvent {\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof BaseGameEvent\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof BaseGameEvent\n     */\n    type: BaseGameEventTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof BaseGameEvent\n     */\n    msg: string;\n}\ndeclare const BaseGameEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n};\ntype BaseGameEventTypeEnum = (typeof BaseGameEventTypeEnum)[keyof typeof BaseGameEventTypeEnum];\n/**\n *\n * @export\n * @interface CommandArgumentCreateDTO\n */\ninterface CommandArgumentCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    type: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    helpText?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    defaultValue?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof CommandArgumentCreateDTO\n     */\n    position: number;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentCreateDTO\n     */\n    commandId?: string;\n}\n/**\n *\n * @export\n * @interface CommandArgumentDTOAPI\n */\ninterface CommandArgumentDTOAPI {\n    /**\n     *\n     * @type {CommandArgumentOutputDTO}\n     * @memberof CommandArgumentDTOAPI\n     */\n    data: CommandArgumentOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CommandArgumentDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CommandArgumentOutputDTO\n */\ninterface CommandArgumentOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    type: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    helpText: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    defaultValue?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof CommandArgumentOutputDTO\n     */\n    position: number;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CommandArgumentOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CommandArgumentOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface CommandArgumentUpdateDTO\n */\ninterface CommandArgumentUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentUpdateDTO\n     */\n    type?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentUpdateDTO\n     */\n    helpText?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandArgumentUpdateDTO\n     */\n    defaultValue?: string;\n}\n/**\n *\n * @export\n * @interface CommandCreateDTO\n */\ninterface CommandCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    trigger: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    helpText?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandCreateDTO\n     */\n    function?: string;\n    /**\n     *\n     * @type {Array<CommandArgumentCreateDTO>}\n     * @memberof CommandCreateDTO\n     */\n    arguments?: Array<CommandArgumentCreateDTO>;\n}\n/**\n *\n * @export\n * @interface CommandExecuteDTOAPI\n */\ninterface CommandExecuteDTOAPI {\n    /**\n     *\n     * @type {CommandOutput}\n     * @memberof CommandExecuteDTOAPI\n     */\n    data: CommandOutput;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CommandExecuteDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CommandExecuteInputDTO\n */\ninterface CommandExecuteInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandExecuteInputDTO\n     */\n    command: string;\n}\n/**\n *\n * @export\n * @interface CommandOutput\n */\ninterface CommandOutput {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutput\n     */\n    rawResult: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof CommandOutput\n     */\n    success: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutput\n     */\n    errorMessage?: string;\n}\n/**\n *\n * @export\n * @interface CommandOutputArrayDTOAPI\n */\ninterface CommandOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<CommandOutputDTO>}\n     * @memberof CommandOutputArrayDTOAPI\n     */\n    data: Array<CommandOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CommandOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CommandOutputDTO\n */\ninterface CommandOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    trigger: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    helpText: string;\n    /**\n     *\n     * @type {FunctionOutputDTO}\n     * @memberof CommandOutputDTO\n     */\n    function: FunctionOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    functionId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {Array<CommandArgumentOutputDTO>}\n     * @memberof CommandOutputDTO\n     */\n    arguments: Array<CommandArgumentOutputDTO>;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CommandOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CommandOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface CommandOutputDTOAPI\n */\ninterface CommandOutputDTOAPI {\n    /**\n     *\n     * @type {CommandOutputDTO}\n     * @memberof CommandOutputDTOAPI\n     */\n    data: CommandOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CommandOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CommandSearchInputAllowedFilters\n */\ninterface CommandSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CommandSearchInputAllowedFilters\n     */\n    id?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CommandSearchInputAllowedFilters\n     */\n    moduleId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CommandSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n    /**\n     *\n     * @type {Array<boolean>}\n     * @memberof CommandSearchInputAllowedFilters\n     */\n    enabled?: Array<boolean>;\n}\n/**\n *\n * @export\n * @interface CommandSearchInputDTO\n */\ninterface CommandSearchInputDTO {\n    /**\n     *\n     * @type {CommandSearchInputAllowedFilters}\n     * @memberof CommandSearchInputDTO\n     */\n    filters?: CommandSearchInputAllowedFilters;\n    /**\n     *\n     * @type {CommandSearchInputAllowedFilters}\n     * @memberof CommandSearchInputDTO\n     */\n    search?: CommandSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof CommandSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof CommandSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandSearchInputDTO\n     */\n    sortDirection?: CommandSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CommandSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const CommandSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype CommandSearchInputDTOSortDirectionEnum = (typeof CommandSearchInputDTOSortDirectionEnum)[keyof typeof CommandSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface CommandTriggerDTO\n */\ninterface CommandTriggerDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandTriggerDTO\n     */\n    playerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandTriggerDTO\n     */\n    msg: string;\n}\n/**\n *\n * @export\n * @interface CommandUpdateDTO\n */\ninterface CommandUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CommandUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandUpdateDTO\n     */\n    trigger?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandUpdateDTO\n     */\n    helpText?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CommandUpdateDTO\n     */\n    function?: string;\n    /**\n     *\n     * @type {Array<CommandArgumentCreateDTO>}\n     * @memberof CommandUpdateDTO\n     */\n    arguments?: Array<CommandArgumentCreateDTO>;\n}\n/**\n *\n * @export\n * @interface CronJobCreateDTO\n */\ninterface CronJobCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobCreateDTO\n     */\n    temporalValue: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobCreateDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobCreateDTO\n     */\n    function?: string;\n}\n/**\n *\n * @export\n * @interface CronJobOutputArrayDTOAPI\n */\ninterface CronJobOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<CronJobOutputDTO>}\n     * @memberof CronJobOutputArrayDTOAPI\n     */\n    data: Array<CronJobOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CronJobOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CronJobOutputDTO\n */\ninterface CronJobOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobOutputDTO\n     */\n    temporalValue: string;\n    /**\n     *\n     * @type {FunctionOutputDTO}\n     * @memberof CronJobOutputDTO\n     */\n    function: FunctionOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobOutputDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CronJobOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof CronJobOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface CronJobOutputDTOAPI\n */\ninterface CronJobOutputDTOAPI {\n    /**\n     *\n     * @type {CronJobOutputDTO}\n     * @memberof CronJobOutputDTOAPI\n     */\n    data: CronJobOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof CronJobOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface CronJobSearchInputAllowedFilters\n */\ninterface CronJobSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CronJobSearchInputAllowedFilters\n     */\n    id?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CronJobSearchInputAllowedFilters\n     */\n    moduleId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CronJobSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n}\n/**\n *\n * @export\n * @interface CronJobSearchInputDTO\n */\ninterface CronJobSearchInputDTO {\n    /**\n     *\n     * @type {CronJobSearchInputAllowedFilters}\n     * @memberof CronJobSearchInputDTO\n     */\n    filters?: CronJobSearchInputAllowedFilters;\n    /**\n     *\n     * @type {CronJobSearchInputAllowedFilters}\n     * @memberof CronJobSearchInputDTO\n     */\n    search?: CronJobSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof CronJobSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof CronJobSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobSearchInputDTO\n     */\n    sortDirection?: CronJobSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof CronJobSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const CronJobSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype CronJobSearchInputDTOSortDirectionEnum = (typeof CronJobSearchInputDTOSortDirectionEnum)[keyof typeof CronJobSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface CronJobTriggerDTO\n */\ninterface CronJobTriggerDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobTriggerDTO\n     */\n    gameServerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobTriggerDTO\n     */\n    cronjobId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobTriggerDTO\n     */\n    moduleId: string;\n}\n/**\n *\n * @export\n * @interface CronJobUpdateDTO\n */\ninterface CronJobUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobUpdateDTO\n     */\n    temporalValue?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof CronJobUpdateDTO\n     */\n    function?: string;\n}\n/**\n *\n * @export\n * @interface DiscordInviteOutputDTO\n */\ninterface DiscordInviteOutputDTO {\n    /**\n     *\n     * @type {InviteOutputDTO}\n     * @memberof DiscordInviteOutputDTO\n     */\n    data: InviteOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof DiscordInviteOutputDTO\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface DiscordParamId\n */\ninterface DiscordParamId {\n    /**\n     *\n     * @type {string}\n     * @memberof DiscordParamId\n     */\n    id: string;\n}\n/**\n *\n * @export\n * @interface DomainCreateInputDTO\n */\ninterface DomainCreateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof DomainCreateInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainCreateInputDTO\n     */\n    id?: string;\n}\n/**\n *\n * @export\n * @interface DomainCreateOutputDTO\n */\ninterface DomainCreateOutputDTO {\n    /**\n     *\n     * @type {DomainOutputDTO}\n     * @memberof DomainCreateOutputDTO\n     */\n    createdDomain: DomainOutputDTO;\n    /**\n     *\n     * @type {UserOutputDTO}\n     * @memberof DomainCreateOutputDTO\n     */\n    rootUser: UserOutputDTO;\n    /**\n     *\n     * @type {RoleOutputDTO}\n     * @memberof DomainCreateOutputDTO\n     */\n    rootRole: RoleOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainCreateOutputDTO\n     */\n    password: string;\n}\n/**\n *\n * @export\n * @interface DomainCreateOutputDTOAPI\n */\ninterface DomainCreateOutputDTOAPI {\n    /**\n     *\n     * @type {DomainCreateOutputDTO}\n     * @memberof DomainCreateOutputDTOAPI\n     */\n    data: DomainCreateOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof DomainCreateOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface DomainOutputArrayDTOAPI\n */\ninterface DomainOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<DomainOutputDTO>}\n     * @memberof DomainOutputArrayDTOAPI\n     */\n    data: Array<DomainOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof DomainOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface DomainOutputDTO\n */\ninterface DomainOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof DomainOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof DomainOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof DomainOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface DomainOutputDTOAPI\n */\ninterface DomainOutputDTOAPI {\n    /**\n     *\n     * @type {DomainOutputDTO}\n     * @memberof DomainOutputDTOAPI\n     */\n    data: DomainOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof DomainOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface DomainSearchInputAllowedFilters\n */\ninterface DomainSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof DomainSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n}\n/**\n *\n * @export\n * @interface DomainSearchInputDTO\n */\ninterface DomainSearchInputDTO {\n    /**\n     *\n     * @type {DomainSearchInputAllowedFilters}\n     * @memberof DomainSearchInputDTO\n     */\n    filters?: DomainSearchInputAllowedFilters;\n    /**\n     *\n     * @type {DomainSearchInputAllowedFilters}\n     * @memberof DomainSearchInputDTO\n     */\n    search?: DomainSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof DomainSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof DomainSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainSearchInputDTO\n     */\n    sortDirection?: DomainSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof DomainSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof DomainSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const DomainSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype DomainSearchInputDTOSortDirectionEnum = (typeof DomainSearchInputDTOSortDirectionEnum)[keyof typeof DomainSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface DomainUpdateInputDTO\n */\ninterface DomainUpdateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof DomainUpdateInputDTO\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface ErrorOutput\n */\ninterface ErrorOutput {\n    /**\n     *\n     * @type {string}\n     * @memberof ErrorOutput\n     */\n    code: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ErrorOutput\n     */\n    message: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ErrorOutput\n     */\n    details: string;\n}\n/**\n *\n * @export\n * @interface EventChatMessage\n */\ninterface EventChatMessage {\n    /**\n     *\n     * @type {IGamePlayer}\n     * @memberof EventChatMessage\n     */\n    player: IGamePlayer;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventChatMessage\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof EventChatMessage\n     */\n    type: EventChatMessageTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventChatMessage\n     */\n    msg: string;\n}\ndeclare const EventChatMessageTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n};\ntype EventChatMessageTypeEnum = (typeof EventChatMessageTypeEnum)[keyof typeof EventChatMessageTypeEnum];\n/**\n *\n * @export\n * @interface EventCreateDTO\n */\ninterface EventCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof EventCreateDTO\n     */\n    eventName: EventCreateDTOEventNameEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventCreateDTO\n     */\n    moduleId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventCreateDTO\n     */\n    playerId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventCreateDTO\n     */\n    userId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventCreateDTO\n     */\n    gameserverId?: string;\n    /**\n     *\n     * @type {object}\n     * @memberof EventCreateDTO\n     */\n    meta?: object;\n}\ndeclare const EventCreateDTOEventNameEnum: {\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n    readonly RoleAssigned: \"role-assigned\";\n    readonly RoleRemoved: \"role-removed\";\n    readonly RoleCreated: \"role-created\";\n    readonly RoleUpdated: \"role-updated\";\n    readonly RoleDeleted: \"role-deleted\";\n    readonly CommandExecuted: \"command-executed\";\n    readonly HookExecuted: \"hook-executed\";\n    readonly CronjobExecuted: \"cronjob-executed\";\n    readonly CurrencyAdded: \"currency-added\";\n    readonly CurrencyDeducted: \"currency-deducted\";\n    readonly SettingsSet: \"settings-set\";\n    readonly PlayerNewIpDetected: \"player-new-ip-detected\";\n};\ntype EventCreateDTOEventNameEnum = (typeof EventCreateDTOEventNameEnum)[keyof typeof EventCreateDTOEventNameEnum];\n/**\n *\n * @export\n * @interface EventDiscordChannel\n */\ninterface EventDiscordChannel {\n    /**\n     *\n     * @type {string}\n     * @memberof EventDiscordChannel\n     */\n    id: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventDiscordChannel\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface EventDiscordUser\n */\ninterface EventDiscordUser {\n    /**\n     *\n     * @type {string}\n     * @memberof EventDiscordUser\n     */\n    id: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventDiscordUser\n     */\n    username: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventDiscordUser\n     */\n    displayName: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof EventDiscordUser\n     */\n    isBot: boolean;\n    /**\n     *\n     * @type {boolean}\n     * @memberof EventDiscordUser\n     */\n    isTakaroBot: boolean;\n}\n/**\n *\n * @export\n * @interface EventEntityKilled\n */\ninterface EventEntityKilled {\n    /**\n     *\n     * @type {IGamePlayer}\n     * @memberof EventEntityKilled\n     */\n    player: IGamePlayer;\n    /**\n     *\n     * @type {string}\n     * @memberof EventEntityKilled\n     */\n    entity: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventEntityKilled\n     */\n    weapon: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventEntityKilled\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof EventEntityKilled\n     */\n    type: EventEntityKilledTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventEntityKilled\n     */\n    msg: string;\n}\ndeclare const EventEntityKilledTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n};\ntype EventEntityKilledTypeEnum = (typeof EventEntityKilledTypeEnum)[keyof typeof EventEntityKilledTypeEnum];\n/**\n *\n * @export\n * @interface EventOutputArrayDTOAPI\n */\ninterface EventOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<EventOutputDTO>}\n     * @memberof EventOutputArrayDTOAPI\n     */\n    data: Array<EventOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof EventOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface EventOutputDTO\n */\ninterface EventOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof EventOutputDTO\n     */\n    eventName: EventOutputDTOEventNameEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventOutputDTO\n     */\n    moduleId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventOutputDTO\n     */\n    playerId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventOutputDTO\n     */\n    userId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventOutputDTO\n     */\n    gameserverId?: string;\n    /**\n     *\n     * @type {object}\n     * @memberof EventOutputDTO\n     */\n    meta?: object;\n    /**\n     *\n     * @type {PlayerOutputDTO}\n     * @memberof EventOutputDTO\n     */\n    player?: PlayerOutputDTO;\n    /**\n     *\n     * @type {GameServerOutputDTO}\n     * @memberof EventOutputDTO\n     */\n    gameServer?: GameServerOutputDTO;\n    /**\n     *\n     * @type {ModuleOutputDTO}\n     * @memberof EventOutputDTO\n     */\n    module?: ModuleOutputDTO;\n    /**\n     *\n     * @type {UserOutputDTO}\n     * @memberof EventOutputDTO\n     */\n    user?: UserOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof EventOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\ndeclare const EventOutputDTOEventNameEnum: {\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n    readonly RoleAssigned: \"role-assigned\";\n    readonly RoleRemoved: \"role-removed\";\n    readonly RoleCreated: \"role-created\";\n    readonly RoleUpdated: \"role-updated\";\n    readonly RoleDeleted: \"role-deleted\";\n    readonly CommandExecuted: \"command-executed\";\n    readonly HookExecuted: \"hook-executed\";\n    readonly CronjobExecuted: \"cronjob-executed\";\n    readonly CurrencyAdded: \"currency-added\";\n    readonly CurrencyDeducted: \"currency-deducted\";\n    readonly SettingsSet: \"settings-set\";\n    readonly PlayerNewIpDetected: \"player-new-ip-detected\";\n};\ntype EventOutputDTOEventNameEnum = (typeof EventOutputDTOEventNameEnum)[keyof typeof EventOutputDTOEventNameEnum];\n/**\n *\n * @export\n * @interface EventPlayerConnected\n */\ninterface EventPlayerConnected {\n    /**\n     *\n     * @type {IGamePlayer}\n     * @memberof EventPlayerConnected\n     */\n    player: IGamePlayer;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventPlayerConnected\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerConnected\n     */\n    type: EventPlayerConnectedTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerConnected\n     */\n    msg: string;\n}\ndeclare const EventPlayerConnectedTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n};\ntype EventPlayerConnectedTypeEnum = (typeof EventPlayerConnectedTypeEnum)[keyof typeof EventPlayerConnectedTypeEnum];\n/**\n *\n * @export\n * @interface EventPlayerDeath\n */\ninterface EventPlayerDeath {\n    /**\n     *\n     * @type {IGamePlayer}\n     * @memberof EventPlayerDeath\n     */\n    player: IGamePlayer;\n    /**\n     *\n     * @type {IGamePlayer}\n     * @memberof EventPlayerDeath\n     */\n    attacker?: IGamePlayer;\n    /**\n     *\n     * @type {IPosition}\n     * @memberof EventPlayerDeath\n     */\n    position?: IPosition;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventPlayerDeath\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerDeath\n     */\n    type: EventPlayerDeathTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerDeath\n     */\n    msg: string;\n}\ndeclare const EventPlayerDeathTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n};\ntype EventPlayerDeathTypeEnum = (typeof EventPlayerDeathTypeEnum)[keyof typeof EventPlayerDeathTypeEnum];\n/**\n *\n * @export\n * @interface EventPlayerDisconnected\n */\ninterface EventPlayerDisconnected {\n    /**\n     *\n     * @type {IGamePlayer}\n     * @memberof EventPlayerDisconnected\n     */\n    player: IGamePlayer;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof EventPlayerDisconnected\n     */\n    timestamp: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerDisconnected\n     */\n    type: EventPlayerDisconnectedTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventPlayerDisconnected\n     */\n    msg: string;\n}\ndeclare const EventPlayerDisconnectedTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n};\ntype EventPlayerDisconnectedTypeEnum = (typeof EventPlayerDisconnectedTypeEnum)[keyof typeof EventPlayerDisconnectedTypeEnum];\n/**\n *\n * @export\n * @interface EventSearchInputAllowedFilters\n */\ninterface EventSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof EventSearchInputAllowedFilters\n     */\n    id?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof EventSearchInputAllowedFilters\n     */\n    eventName?: Array<EventSearchInputAllowedFiltersEventNameEnum>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof EventSearchInputAllowedFilters\n     */\n    moduleId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof EventSearchInputAllowedFilters\n     */\n    playerId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof EventSearchInputAllowedFilters\n     */\n    gameserverId?: Array<string>;\n}\ndeclare const EventSearchInputAllowedFiltersEventNameEnum: {\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n    readonly RoleAssigned: \"role-assigned\";\n    readonly RoleRemoved: \"role-removed\";\n    readonly RoleCreated: \"role-created\";\n    readonly RoleUpdated: \"role-updated\";\n    readonly RoleDeleted: \"role-deleted\";\n    readonly CommandExecuted: \"command-executed\";\n    readonly HookExecuted: \"hook-executed\";\n    readonly CronjobExecuted: \"cronjob-executed\";\n    readonly CurrencyAdded: \"currency-added\";\n    readonly CurrencyDeducted: \"currency-deducted\";\n    readonly SettingsSet: \"settings-set\";\n    readonly PlayerNewIpDetected: \"player-new-ip-detected\";\n};\ntype EventSearchInputAllowedFiltersEventNameEnum = (typeof EventSearchInputAllowedFiltersEventNameEnum)[keyof typeof EventSearchInputAllowedFiltersEventNameEnum];\n/**\n *\n * @export\n * @interface EventSearchInputDTO\n */\ninterface EventSearchInputDTO {\n    /**\n     *\n     * @type {EventSearchInputAllowedFilters}\n     * @memberof EventSearchInputDTO\n     */\n    filters?: EventSearchInputAllowedFilters;\n    /**\n     *\n     * @type {EventSearchInputAllowedFilters}\n     * @memberof EventSearchInputDTO\n     */\n    search?: EventSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof EventSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof EventSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof EventSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventSearchInputDTO\n     */\n    sortDirection?: EventSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof EventSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof EventSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof EventSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const EventSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype EventSearchInputDTOSortDirectionEnum = (typeof EventSearchInputDTOSortDirectionEnum)[keyof typeof EventSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface FunctionCreateDTO\n */\ninterface FunctionCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionCreateDTO\n     */\n    code?: string;\n}\n/**\n *\n * @export\n * @interface FunctionOutputArrayDTOAPI\n */\ninterface FunctionOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<FunctionOutputDTO>}\n     * @memberof FunctionOutputArrayDTOAPI\n     */\n    data: Array<FunctionOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof FunctionOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface FunctionOutputDTO\n */\ninterface FunctionOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionOutputDTO\n     */\n    code: string;\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof FunctionOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof FunctionOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface FunctionOutputDTOAPI\n */\ninterface FunctionOutputDTOAPI {\n    /**\n     *\n     * @type {FunctionOutputDTO}\n     * @memberof FunctionOutputDTOAPI\n     */\n    data: FunctionOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof FunctionOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface FunctionSearchInputAllowedFilters\n */\ninterface FunctionSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof FunctionSearchInputAllowedFilters\n     */\n    id: Array<string>;\n}\n/**\n *\n * @export\n * @interface FunctionSearchInputDTO\n */\ninterface FunctionSearchInputDTO {\n    /**\n     *\n     * @type {FunctionSearchInputAllowedFilters}\n     * @memberof FunctionSearchInputDTO\n     */\n    filters?: FunctionSearchInputAllowedFilters;\n    /**\n     *\n     * @type {FunctionSearchInputAllowedFilters}\n     * @memberof FunctionSearchInputDTO\n     */\n    search?: FunctionSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof FunctionSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof FunctionSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionSearchInputDTO\n     */\n    sortDirection?: FunctionSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof FunctionSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const FunctionSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype FunctionSearchInputDTOSortDirectionEnum = (typeof FunctionSearchInputDTOSortDirectionEnum)[keyof typeof FunctionSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface FunctionUpdateDTO\n */\ninterface FunctionUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof FunctionUpdateDTO\n     */\n    code: string;\n}\n/**\n *\n * @export\n * @interface GameServerCreateDTO\n */\ninterface GameServerCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerCreateDTO\n     */\n    connectionInfo: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerCreateDTO\n     */\n    type: GameServerCreateDTOTypeEnum;\n}\ndeclare const GameServerCreateDTOTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerCreateDTOTypeEnum = (typeof GameServerCreateDTOTypeEnum)[keyof typeof GameServerCreateDTOTypeEnum];\n/**\n *\n * @export\n * @interface GameServerOutputArrayDTOAPI\n */\ninterface GameServerOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<GameServerOutputDTO>}\n     * @memberof GameServerOutputArrayDTOAPI\n     */\n    data: Array<GameServerOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof GameServerOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface GameServerOutputDTO\n */\ninterface GameServerOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {object}\n     * @memberof GameServerOutputDTO\n     */\n    connectionInfo: object;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerOutputDTO\n     */\n    type: GameServerOutputDTOTypeEnum;\n    /**\n     *\n     * @type {boolean}\n     * @memberof GameServerOutputDTO\n     */\n    reachable: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof GameServerOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof GameServerOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\ndeclare const GameServerOutputDTOTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerOutputDTOTypeEnum = (typeof GameServerOutputDTOTypeEnum)[keyof typeof GameServerOutputDTOTypeEnum];\n/**\n *\n * @export\n * @interface GameServerOutputDTOAPI\n */\ninterface GameServerOutputDTOAPI {\n    /**\n     *\n     * @type {GameServerOutputDTO}\n     * @memberof GameServerOutputDTOAPI\n     */\n    data: GameServerOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof GameServerOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface GameServerSearchInputAllowedFilters\n */\ninterface GameServerSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GameServerSearchInputAllowedFilters\n     */\n    id?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GameServerSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GameServerSearchInputAllowedFilters\n     */\n    type?: Array<GameServerSearchInputAllowedFiltersTypeEnum>;\n}\ndeclare const GameServerSearchInputAllowedFiltersTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerSearchInputAllowedFiltersTypeEnum = (typeof GameServerSearchInputAllowedFiltersTypeEnum)[keyof typeof GameServerSearchInputAllowedFiltersTypeEnum];\n/**\n *\n * @export\n * @interface GameServerSearchInputDTO\n */\ninterface GameServerSearchInputDTO {\n    /**\n     *\n     * @type {GameServerSearchInputAllowedFilters}\n     * @memberof GameServerSearchInputDTO\n     */\n    filters?: GameServerSearchInputAllowedFilters;\n    /**\n     *\n     * @type {GameServerSearchInputAllowedFilters}\n     * @memberof GameServerSearchInputDTO\n     */\n    search?: GameServerSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof GameServerSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof GameServerSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerSearchInputDTO\n     */\n    sortDirection?: GameServerSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GameServerSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const GameServerSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype GameServerSearchInputDTOSortDirectionEnum = (typeof GameServerSearchInputDTOSortDirectionEnum)[keyof typeof GameServerSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface GameServerTestReachabilityDTOAPI\n */\ninterface GameServerTestReachabilityDTOAPI {\n    /**\n     *\n     * @type {TestReachabilityOutputDTO}\n     * @memberof GameServerTestReachabilityDTOAPI\n     */\n    data: TestReachabilityOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof GameServerTestReachabilityDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface GameServerTestReachabilityInputDTO\n */\ninterface GameServerTestReachabilityInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerTestReachabilityInputDTO\n     */\n    connectionInfo: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerTestReachabilityInputDTO\n     */\n    type: GameServerTestReachabilityInputDTOTypeEnum;\n}\ndeclare const GameServerTestReachabilityInputDTOTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerTestReachabilityInputDTOTypeEnum = (typeof GameServerTestReachabilityInputDTOTypeEnum)[keyof typeof GameServerTestReachabilityInputDTOTypeEnum];\n/**\n *\n * @export\n * @interface GameServerTypesOutputDTO\n */\ninterface GameServerTypesOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerTypesOutputDTO\n     */\n    type: GameServerTypesOutputDTOTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerTypesOutputDTO\n     */\n    connectionInfoSchema: string;\n}\ndeclare const GameServerTypesOutputDTOTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerTypesOutputDTOTypeEnum = (typeof GameServerTypesOutputDTOTypeEnum)[keyof typeof GameServerTypesOutputDTOTypeEnum];\n/**\n *\n * @export\n * @interface GameServerTypesOutputDTOAPI\n */\ninterface GameServerTypesOutputDTOAPI {\n    /**\n     *\n     * @type {Array<GameServerOutputDTO>}\n     * @memberof GameServerTypesOutputDTOAPI\n     */\n    data: Array<GameServerOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof GameServerTypesOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface GameServerUpdateDTO\n */\ninterface GameServerUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerUpdateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerUpdateDTO\n     */\n    connectionInfo: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GameServerUpdateDTO\n     */\n    type: GameServerUpdateDTOTypeEnum;\n    /**\n     *\n     * @type {boolean}\n     * @memberof GameServerUpdateDTO\n     */\n    reachable?: boolean;\n}\ndeclare const GameServerUpdateDTOTypeEnum: {\n    readonly Mock: \"MOCK\";\n    readonly Sevendaystodie: \"SEVENDAYSTODIE\";\n    readonly Rust: \"RUST\";\n};\ntype GameServerUpdateDTOTypeEnum = (typeof GameServerUpdateDTOTypeEnum)[keyof typeof GameServerUpdateDTOTypeEnum];\n/**\n *\n * @export\n * @interface GetSettingsInput\n */\ninterface GetSettingsInput {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GetSettingsInput\n     */\n    keys?: Array<GetSettingsInputKeysEnum>;\n    /**\n     *\n     * @type {string}\n     * @memberof GetSettingsInput\n     */\n    gameServerId?: string;\n}\ndeclare const GetSettingsInputKeysEnum: {\n    readonly CommandPrefix: \"commandPrefix\";\n    readonly ServerChatName: \"serverChatName\";\n    readonly EconomyEnabled: \"economyEnabled\";\n    readonly CurrencyName: \"currencyName\";\n};\ntype GetSettingsInputKeysEnum = (typeof GetSettingsInputKeysEnum)[keyof typeof GetSettingsInputKeysEnum];\n/**\n *\n * @export\n * @interface GetSettingsOneInput\n */\ninterface GetSettingsOneInput {\n    /**\n     *\n     * @type {string}\n     * @memberof GetSettingsOneInput\n     */\n    gameServerId?: string;\n}\n/**\n *\n * @export\n * @interface GetUserDTO\n */\ninterface GetUserDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GetUserDTO\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface GiveItemInputDTO\n */\ninterface GiveItemInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GiveItemInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {number}\n     * @memberof GiveItemInputDTO\n     */\n    amount: number;\n}\n/**\n *\n * @export\n * @interface GuildApiUpdateDTO\n */\ninterface GuildApiUpdateDTO {\n    /**\n     *\n     * @type {boolean}\n     * @memberof GuildApiUpdateDTO\n     */\n    takaroEnabled?: boolean;\n}\n/**\n *\n * @export\n * @interface GuildCreateInputDTO\n */\ninterface GuildCreateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GuildCreateInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildCreateInputDTO\n     */\n    discordId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildCreateInputDTO\n     */\n    icon?: string;\n}\n/**\n *\n * @export\n * @interface GuildOutputArrayDTOAPI\n */\ninterface GuildOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<GuildOutputDTO>}\n     * @memberof GuildOutputArrayDTOAPI\n     */\n    data: Array<GuildOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof GuildOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface GuildOutputDTO\n */\ninterface GuildOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GuildOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildOutputDTO\n     */\n    discordId: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof GuildOutputDTO\n     */\n    takaroEnabled: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildOutputDTO\n     */\n    icon?: string;\n}\n/**\n *\n * @export\n * @interface GuildOutputDTOAPI\n */\ninterface GuildOutputDTOAPI {\n    /**\n     *\n     * @type {GuildOutputDTO}\n     * @memberof GuildOutputDTOAPI\n     */\n    data: GuildOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof GuildOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface GuildSearchInputAllowedFilters\n */\ninterface GuildSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GuildSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GuildSearchInputAllowedFilters\n     */\n    discordId?: Array<string>;\n    /**\n     *\n     * @type {Array<boolean>}\n     * @memberof GuildSearchInputAllowedFilters\n     */\n    takaroEnabled?: Array<boolean>;\n}\n/**\n *\n * @export\n * @interface GuildSearchInputDTO\n */\ninterface GuildSearchInputDTO {\n    /**\n     *\n     * @type {GuildSearchInputAllowedFilters}\n     * @memberof GuildSearchInputDTO\n     */\n    filters?: GuildSearchInputAllowedFilters;\n    /**\n     *\n     * @type {GuildSearchInputAllowedFilters}\n     * @memberof GuildSearchInputDTO\n     */\n    search?: GuildSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof GuildSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof GuildSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildSearchInputDTO\n     */\n    sortDirection?: GuildSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof GuildSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const GuildSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype GuildSearchInputDTOSortDirectionEnum = (typeof GuildSearchInputDTOSortDirectionEnum)[keyof typeof GuildSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface GuildUpdateDTO\n */\ninterface GuildUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof GuildUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof GuildUpdateDTO\n     */\n    icon?: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof GuildUpdateDTO\n     */\n    takaroEnabled?: boolean;\n}\n/**\n *\n * @export\n * @interface HealthOutputDTO\n */\ninterface HealthOutputDTO {\n    /**\n     *\n     * @type {boolean}\n     * @memberof HealthOutputDTO\n     */\n    healthy: boolean;\n}\n/**\n *\n * @export\n * @interface HookCreateDTO\n */\ninterface HookCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    regex: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    eventType: HookCreateDTOEventTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    function?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookCreateDTO\n     */\n    discordChannelId?: string;\n}\ndeclare const HookCreateDTOEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n    readonly DiscordMessage: \"discord-message\";\n};\ntype HookCreateDTOEventTypeEnum = (typeof HookCreateDTOEventTypeEnum)[keyof typeof HookCreateDTOEventTypeEnum];\n/**\n *\n * @export\n * @interface HookEventDiscordMessage\n */\ninterface HookEventDiscordMessage {\n    /**\n     *\n     * @type {string}\n     * @memberof HookEventDiscordMessage\n     */\n    type: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookEventDiscordMessage\n     */\n    msg: string;\n    /**\n     *\n     * @type {EventDiscordUser}\n     * @memberof HookEventDiscordMessage\n     */\n    author: EventDiscordUser;\n    /**\n     *\n     * @type {EventDiscordChannel}\n     * @memberof HookEventDiscordMessage\n     */\n    channel: EventDiscordChannel;\n}\n/**\n *\n * @export\n * @interface HookOutputArrayDTOAPI\n */\ninterface HookOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<HookOutputDTO>}\n     * @memberof HookOutputArrayDTOAPI\n     */\n    data: Array<HookOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof HookOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface HookOutputDTO\n */\ninterface HookOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    regex: string;\n    /**\n     *\n     * @type {FunctionOutputDTO}\n     * @memberof HookOutputDTO\n     */\n    function: FunctionOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    eventType: HookOutputDTOEventTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof HookOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof HookOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\ndeclare const HookOutputDTOEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n    readonly DiscordMessage: \"discord-message\";\n};\ntype HookOutputDTOEventTypeEnum = (typeof HookOutputDTOEventTypeEnum)[keyof typeof HookOutputDTOEventTypeEnum];\n/**\n *\n * @export\n * @interface HookOutputDTOAPI\n */\ninterface HookOutputDTOAPI {\n    /**\n     *\n     * @type {HookOutputDTO}\n     * @memberof HookOutputDTOAPI\n     */\n    data: HookOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof HookOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface HookSearchInputAllowedFilters\n */\ninterface HookSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof HookSearchInputAllowedFilters\n     */\n    id?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof HookSearchInputAllowedFilters\n     */\n    moduleId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof HookSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof HookSearchInputAllowedFilters\n     */\n    eventType?: Array<HookSearchInputAllowedFiltersEventTypeEnum>;\n}\ndeclare const HookSearchInputAllowedFiltersEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n    readonly DiscordMessage: \"discord-message\";\n};\ntype HookSearchInputAllowedFiltersEventTypeEnum = (typeof HookSearchInputAllowedFiltersEventTypeEnum)[keyof typeof HookSearchInputAllowedFiltersEventTypeEnum];\n/**\n *\n * @export\n * @interface HookSearchInputDTO\n */\ninterface HookSearchInputDTO {\n    /**\n     *\n     * @type {HookSearchInputAllowedFilters}\n     * @memberof HookSearchInputDTO\n     */\n    filters?: HookSearchInputAllowedFilters;\n    /**\n     *\n     * @type {HookSearchInputAllowedFilters}\n     * @memberof HookSearchInputDTO\n     */\n    search?: HookSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof HookSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof HookSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputDTO\n     */\n    sortDirection?: HookSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof HookSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const HookSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype HookSearchInputDTOSortDirectionEnum = (typeof HookSearchInputDTOSortDirectionEnum)[keyof typeof HookSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface HookTriggerDTO\n */\ninterface HookTriggerDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof HookTriggerDTO\n     */\n    gameServerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookTriggerDTO\n     */\n    eventType: HookTriggerDTOEventTypeEnum;\n    /**\n     *\n     * @type {IPlayerReferenceDTO}\n     * @memberof HookTriggerDTO\n     */\n    player?: IPlayerReferenceDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof HookTriggerDTO\n     */\n    msg?: string;\n}\ndeclare const HookTriggerDTOEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n    readonly DiscordMessage: \"discord-message\";\n};\ntype HookTriggerDTOEventTypeEnum = (typeof HookTriggerDTOEventTypeEnum)[keyof typeof HookTriggerDTOEventTypeEnum];\n/**\n *\n * @export\n * @interface HookUpdateDTO\n */\ninterface HookUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof HookUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookUpdateDTO\n     */\n    regex?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookUpdateDTO\n     */\n    eventType?: HookUpdateDTOEventTypeEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof HookUpdateDTO\n     */\n    function?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof HookUpdateDTO\n     */\n    discordChannelId?: string;\n}\ndeclare const HookUpdateDTOEventTypeEnum: {\n    readonly Log: \"log\";\n    readonly PlayerConnected: \"player-connected\";\n    readonly PlayerDisconnected: \"player-disconnected\";\n    readonly ChatMessage: \"chat-message\";\n    readonly PlayerDeath: \"player-death\";\n    readonly EntityKilled: \"entity-killed\";\n    readonly DiscordMessage: \"discord-message\";\n};\ntype HookUpdateDTOEventTypeEnum = (typeof HookUpdateDTOEventTypeEnum)[keyof typeof HookUpdateDTOEventTypeEnum];\n/**\n *\n * @export\n * @interface IGamePlayer\n */\ninterface IGamePlayer {\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    gameId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    steamId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    epicOnlineServicesId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    xboxLiveId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    platformId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IGamePlayer\n     */\n    ip?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof IGamePlayer\n     */\n    ping?: number;\n}\n/**\n *\n * @export\n * @interface IItemDTO\n */\ninterface IItemDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof IItemDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IItemDTO\n     */\n    code: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IItemDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof IItemDTO\n     */\n    amount?: number;\n}\n/**\n *\n * @export\n * @interface IMessageOptsDTO\n */\ninterface IMessageOptsDTO {\n    /**\n     *\n     * @type {IPlayerReferenceDTO}\n     * @memberof IMessageOptsDTO\n     */\n    recipient: IPlayerReferenceDTO;\n}\n/**\n *\n * @export\n * @interface IPlayerReferenceDTO\n */\ninterface IPlayerReferenceDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof IPlayerReferenceDTO\n     */\n    gameId: string;\n}\n/**\n *\n * @export\n * @interface IPosition\n */\ninterface IPosition {\n    /**\n     *\n     * @type {number}\n     * @memberof IPosition\n     */\n    x: number;\n    /**\n     *\n     * @type {number}\n     * @memberof IPosition\n     */\n    y: number;\n    /**\n     *\n     * @type {number}\n     * @memberof IPosition\n     */\n    z: number;\n}\n/**\n *\n * @export\n * @interface ITakaroQuery\n */\ninterface ITakaroQuery {\n    /**\n     *\n     * @type {any}\n     * @memberof ITakaroQuery\n     */\n    filters?: any;\n    /**\n     *\n     * @type {any}\n     * @memberof ITakaroQuery\n     */\n    search?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof ITakaroQuery\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof ITakaroQuery\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof ITakaroQuery\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ITakaroQuery\n     */\n    sortDirection?: ITakaroQuerySortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof ITakaroQuery\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ITakaroQuery\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ITakaroQuery\n     */\n    extend?: Array<string>;\n}\ndeclare const ITakaroQuerySortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype ITakaroQuerySortDirectionEnum = (typeof ITakaroQuerySortDirectionEnum)[keyof typeof ITakaroQuerySortDirectionEnum];\n/**\n *\n * @export\n * @interface IdUuidDTO\n */\ninterface IdUuidDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof IdUuidDTO\n     */\n    id: string;\n}\n/**\n *\n * @export\n * @interface IdUuidDTOAPI\n */\ninterface IdUuidDTOAPI {\n    /**\n     *\n     * @type {IdUuidDTO}\n     * @memberof IdUuidDTOAPI\n     */\n    data: IdUuidDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof IdUuidDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface InviteCreateDTO\n */\ninterface InviteCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof InviteCreateDTO\n     */\n    email: string;\n}\n/**\n *\n * @export\n * @interface InviteOutputDTO\n */\ninterface InviteOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof InviteOutputDTO\n     */\n    botInvite: string;\n    /**\n     *\n     * @type {string}\n     * @memberof InviteOutputDTO\n     */\n    devServer: string;\n}\n/**\n *\n * @export\n * @interface IpHistoryOutputDTO\n */\ninterface IpHistoryOutputDTO {\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof IpHistoryOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof IpHistoryOutputDTO\n     */\n    ip: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IpHistoryOutputDTO\n     */\n    country?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IpHistoryOutputDTO\n     */\n    city?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IpHistoryOutputDTO\n     */\n    latitude?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof IpHistoryOutputDTO\n     */\n    longitude?: string;\n}\n/**\n *\n * @export\n * @interface ItemCreateDTO\n */\ninterface ItemCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ItemCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemCreateDTO\n     */\n    code: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemCreateDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemCreateDTO\n     */\n    icon?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemCreateDTO\n     */\n    gameserverId: string;\n}\n/**\n *\n * @export\n * @interface ItemOutputArrayDTOAPI\n */\ninterface ItemOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<ItemsOutputDTO>}\n     * @memberof ItemOutputArrayDTOAPI\n     */\n    data: Array<ItemsOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ItemOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ItemOutputDTOAPI\n */\ninterface ItemOutputDTOAPI {\n    /**\n     *\n     * @type {ItemsOutputDTO}\n     * @memberof ItemOutputDTOAPI\n     */\n    data: ItemsOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ItemOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ItemSearchInputAllowedFilters\n */\ninterface ItemSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ItemSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ItemSearchInputAllowedFilters\n     */\n    code?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ItemSearchInputAllowedFilters\n     */\n    gameserverId?: Array<string>;\n}\n/**\n *\n * @export\n * @interface ItemSearchInputDTO\n */\ninterface ItemSearchInputDTO {\n    /**\n     *\n     * @type {ItemSearchInputAllowedFilters}\n     * @memberof ItemSearchInputDTO\n     */\n    filters?: ItemSearchInputAllowedFilters;\n    /**\n     *\n     * @type {ItemSearchInputAllowedFilters}\n     * @memberof ItemSearchInputDTO\n     */\n    search?: ItemSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof ItemSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof ItemSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemSearchInputDTO\n     */\n    sortDirection?: ItemSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ItemSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const ItemSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype ItemSearchInputDTOSortDirectionEnum = (typeof ItemSearchInputDTOSortDirectionEnum)[keyof typeof ItemSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface ItemUpdateDTO\n */\ninterface ItemUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ItemUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemUpdateDTO\n     */\n    code?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemUpdateDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemUpdateDTO\n     */\n    icon?: string;\n}\n/**\n *\n * @export\n * @interface ItemsOutputDTO\n */\ninterface ItemsOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ItemsOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemsOutputDTO\n     */\n    code: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemsOutputDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemsOutputDTO\n     */\n    icon?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemsOutputDTO\n     */\n    gameserverId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ItemsOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ItemsOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ItemsOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface KickPlayerInputDTO\n */\ninterface KickPlayerInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof KickPlayerInputDTO\n     */\n    reason: string;\n}\n/**\n *\n * @export\n * @interface LoginDTO\n */\ninterface LoginDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof LoginDTO\n     */\n    username: string;\n    /**\n     *\n     * @type {string}\n     * @memberof LoginDTO\n     */\n    password: string;\n}\n/**\n *\n * @export\n * @interface LoginOutputDTO\n */\ninterface LoginOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof LoginOutputDTO\n     */\n    token: string;\n}\n/**\n *\n * @export\n * @interface LoginOutputDTOAPI\n */\ninterface LoginOutputDTOAPI {\n    /**\n     *\n     * @type {LoginOutputDTO}\n     * @memberof LoginOutputDTOAPI\n     */\n    data: LoginOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof LoginOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface MessageSendInputDTO\n */\ninterface MessageSendInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof MessageSendInputDTO\n     */\n    message: string;\n    /**\n     *\n     * @type {IMessageOptsDTO}\n     * @memberof MessageSendInputDTO\n     */\n    opts?: IMessageOptsDTO;\n}\n/**\n *\n * @export\n * @interface MetadataOutput\n */\ninterface MetadataOutput {\n    /**\n     *\n     * @type {MetadataOutputServerTime}\n     * @memberof MetadataOutput\n     */\n    serverTime: MetadataOutputServerTime;\n    /**\n     *\n     * @type {ErrorOutput}\n     * @memberof MetadataOutput\n     */\n    error: ErrorOutput;\n    /**\n     *\n     * @type {number}\n     * @memberof MetadataOutput\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof MetadataOutput\n     */\n    limit?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof MetadataOutput\n     */\n    total?: number;\n}\n/**\n * @type MetadataOutputServerTime\n * @export\n */\ntype MetadataOutputServerTime = string;\n/**\n *\n * @export\n * @interface MockConnectionInfo\n */\ninterface MockConnectionInfo {\n    /**\n     *\n     * @type {string}\n     * @memberof MockConnectionInfo\n     */\n    host: string;\n}\n/**\n *\n * @export\n * @interface ModuleCreateDTO\n */\ninterface ModuleCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateDTO\n     */\n    configSchema?: string;\n    /**\n     *\n     * @type {Array<PermissionCreateDTO>}\n     * @memberof ModuleCreateDTO\n     */\n    permissions?: Array<PermissionCreateDTO>;\n}\n/**\n *\n * @export\n * @interface ModuleCreateInternalDTO\n */\ninterface ModuleCreateInternalDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateInternalDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateInternalDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateInternalDTO\n     */\n    configSchema?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleCreateInternalDTO\n     */\n    builtin?: string;\n    /**\n     *\n     * @type {Array<PermissionCreateDTO>}\n     * @memberof ModuleCreateInternalDTO\n     */\n    permissions?: Array<PermissionCreateDTO>;\n}\n/**\n *\n * @export\n * @interface ModuleInstallDTO\n */\ninterface ModuleInstallDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallDTO\n     */\n    userConfig?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallDTO\n     */\n    systemConfig?: string;\n}\n/**\n *\n * @export\n * @interface ModuleInstallationOutputArrayDTOAPI\n */\ninterface ModuleInstallationOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<ModuleInstallationOutputDTO>}\n     * @memberof ModuleInstallationOutputArrayDTOAPI\n     */\n    data: Array<ModuleInstallationOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ModuleInstallationOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ModuleInstallationOutputDTO\n */\ninterface ModuleInstallationOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    gameserverId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    moduleId: string;\n    /**\n     *\n     * @type {object}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    userConfig: object;\n    /**\n     *\n     * @type {object}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    systemConfig: object;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ModuleInstallationOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface ModuleInstallationOutputDTOAPI\n */\ninterface ModuleInstallationOutputDTOAPI {\n    /**\n     *\n     * @type {ModuleInstallationOutputDTO}\n     * @memberof ModuleInstallationOutputDTOAPI\n     */\n    data: ModuleInstallationOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ModuleInstallationOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ModuleOutputArrayDTOAPI\n */\ninterface ModuleOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<ModuleOutputDTO>}\n     * @memberof ModuleOutputArrayDTOAPI\n     */\n    data: Array<ModuleOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ModuleOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ModuleOutputDTO\n */\ninterface ModuleOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    description: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    configSchema: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    systemConfigSchema: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    builtin?: string;\n    /**\n     *\n     * @type {Array<CronJobOutputDTO>}\n     * @memberof ModuleOutputDTO\n     */\n    cronJobs: Array<CronJobOutputDTO>;\n    /**\n     *\n     * @type {Array<HookOutputDTO>}\n     * @memberof ModuleOutputDTO\n     */\n    hooks: Array<HookOutputDTO>;\n    /**\n     *\n     * @type {Array<CommandOutputDTO>}\n     * @memberof ModuleOutputDTO\n     */\n    commands: Array<CommandOutputDTO>;\n    /**\n     *\n     * @type {Array<PermissionOutputDTO>}\n     * @memberof ModuleOutputDTO\n     */\n    permissions: Array<PermissionOutputDTO>;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ModuleOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof ModuleOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface ModuleOutputDTOAPI\n */\ninterface ModuleOutputDTOAPI {\n    /**\n     *\n     * @type {ModuleOutputDTO}\n     * @memberof ModuleOutputDTOAPI\n     */\n    data: ModuleOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof ModuleOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface ModuleSearchInputAllowedFilters\n */\ninterface ModuleSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ModuleSearchInputAllowedFilters\n     */\n    id?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ModuleSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n}\n/**\n *\n * @export\n * @interface ModuleSearchInputDTO\n */\ninterface ModuleSearchInputDTO {\n    /**\n     *\n     * @type {ModuleSearchInputAllowedFilters}\n     * @memberof ModuleSearchInputDTO\n     */\n    filters?: ModuleSearchInputAllowedFilters;\n    /**\n     *\n     * @type {ModuleSearchInputAllowedFilters}\n     * @memberof ModuleSearchInputDTO\n     */\n    search?: ModuleSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof ModuleSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof ModuleSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleSearchInputDTO\n     */\n    sortDirection?: ModuleSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ModuleSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const ModuleSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype ModuleSearchInputDTOSortDirectionEnum = (typeof ModuleSearchInputDTOSortDirectionEnum)[keyof typeof ModuleSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface ModuleUpdateDTO\n */\ninterface ModuleUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleUpdateDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleUpdateDTO\n     */\n    description?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ModuleUpdateDTO\n     */\n    configSchema?: string;\n    /**\n     *\n     * @type {Array<PermissionCreateDTO>}\n     * @memberof ModuleUpdateDTO\n     */\n    permissions?: Array<PermissionCreateDTO>;\n}\n/**\n *\n * @export\n * @interface NOTDOMAINSCOPEDTakaroModelDTO\n */\ninterface NOTDOMAINSCOPEDTakaroModelDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof NOTDOMAINSCOPEDTakaroModelDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof NOTDOMAINSCOPEDTakaroModelDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof NOTDOMAINSCOPEDTakaroModelDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n * @type NOTDOMAINSCOPEDTakaroModelDTOCreatedAt\n * @export\n */\ntype NOTDOMAINSCOPEDTakaroModelDTOCreatedAt = string;\n/**\n *\n * @export\n * @interface ParamId\n */\ninterface ParamId {\n    /**\n     *\n     * @type {string}\n     * @memberof ParamId\n     */\n    id: string;\n}\n/**\n *\n * @export\n * @interface ParamIdAndModuleId\n */\ninterface ParamIdAndModuleId {\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndModuleId\n     */\n    gameserverId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndModuleId\n     */\n    moduleId: string;\n}\n/**\n *\n * @export\n * @interface ParamIdAndPlayerId\n */\ninterface ParamIdAndPlayerId {\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndPlayerId\n     */\n    gameserverId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndPlayerId\n     */\n    playerId: string;\n}\n/**\n *\n * @export\n * @interface ParamIdAndRoleId\n */\ninterface ParamIdAndRoleId {\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndRoleId\n     */\n    roleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ParamIdAndRoleId\n     */\n    id: string;\n}\n/**\n *\n * @export\n * @interface ParamKey\n */\ninterface ParamKey {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof ParamKey\n     */\n    key: Array<ParamKeyKeyEnum>;\n}\ndeclare const ParamKeyKeyEnum: {\n    readonly CommandPrefix: \"commandPrefix\";\n    readonly ServerChatName: \"serverChatName\";\n    readonly EconomyEnabled: \"economyEnabled\";\n    readonly CurrencyName: \"currencyName\";\n};\ntype ParamKeyKeyEnum = (typeof ParamKeyKeyEnum)[keyof typeof ParamKeyKeyEnum];\n/**\n *\n * @export\n * @interface ParamSenderReceiver\n */\ninterface ParamSenderReceiver {\n    /**\n     *\n     * @type {string}\n     * @memberof ParamSenderReceiver\n     */\n    sender: string;\n    /**\n     *\n     * @type {string}\n     * @memberof ParamSenderReceiver\n     */\n    receiver: string;\n}\n/**\n *\n * @export\n * @interface PermissionCreateDTO\n */\ninterface PermissionCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionCreateDTO\n     */\n    permission: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionCreateDTO\n     */\n    friendlyName: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionCreateDTO\n     */\n    description: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof PermissionCreateDTO\n     */\n    canHaveCount?: boolean;\n}\n/**\n *\n * @export\n * @interface PermissionInputDTO\n */\ninterface PermissionInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionInputDTO\n     */\n    permissionId: string;\n    /**\n     *\n     * @type {number}\n     * @memberof PermissionInputDTO\n     */\n    count?: number;\n}\n/**\n *\n * @export\n * @interface PermissionOnRoleDTO\n */\ninterface PermissionOnRoleDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionOnRoleDTO\n     */\n    permissionId: string;\n    /**\n     *\n     * @type {PermissionOutputDTO}\n     * @memberof PermissionOnRoleDTO\n     */\n    permission: PermissionOutputDTO;\n    /**\n     *\n     * @type {number}\n     * @memberof PermissionOnRoleDTO\n     */\n    count: number;\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionOnRoleDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PermissionOnRoleDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PermissionOnRoleDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface PermissionOutputDTO\n */\ninterface PermissionOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionOutputDTO\n     */\n    permission: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionOutputDTO\n     */\n    friendlyName: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionOutputDTO\n     */\n    description: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof PermissionOutputDTO\n     */\n    canHaveCount?: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof PermissionOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PermissionOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PermissionOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface PermissionOutputDTOAPI\n */\ninterface PermissionOutputDTOAPI {\n    /**\n     *\n     * @type {Array<PermissionOutputDTO>}\n     * @memberof PermissionOutputDTOAPI\n     */\n    data: Array<PermissionOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof PermissionOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface PlayerCreateDTO\n */\ninterface PlayerCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerCreateDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerCreateDTO\n     */\n    steamId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerCreateDTO\n     */\n    xboxLiveId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerCreateDTO\n     */\n    epicOnlineServicesId?: string;\n}\n/**\n *\n * @export\n * @interface PlayerOnGameServerCreateDTO\n */\ninterface PlayerOnGameServerCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameServerCreateDTO\n     */\n    gameServerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameServerCreateDTO\n     */\n    playerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameServerCreateDTO\n     */\n    gameId: string;\n}\n/**\n *\n * @export\n * @interface PlayerOnGameServerSearchInputAllowedFilters\n */\ninterface PlayerOnGameServerSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerOnGameServerSearchInputAllowedFilters\n     */\n    id?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerOnGameServerSearchInputAllowedFilters\n     */\n    gameId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerOnGameServerSearchInputAllowedFilters\n     */\n    gameServerId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerOnGameServerSearchInputAllowedFilters\n     */\n    playerId?: Array<string>;\n    /**\n     *\n     * @type {Array<boolean>}\n     * @memberof PlayerOnGameServerSearchInputAllowedFilters\n     */\n    online?: Array<boolean>;\n}\n/**\n *\n * @export\n * @interface PlayerOnGameServerSearchInputDTO\n */\ninterface PlayerOnGameServerSearchInputDTO {\n    /**\n     *\n     * @type {PlayerOnGameServerSearchInputAllowedFilters}\n     * @memberof PlayerOnGameServerSearchInputDTO\n     */\n    filters?: PlayerOnGameServerSearchInputAllowedFilters;\n    /**\n     *\n     * @type {PlayerOnGameServerSearchInputAllowedFilters}\n     * @memberof PlayerOnGameServerSearchInputDTO\n     */\n    search?: PlayerOnGameServerSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameServerSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameServerSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameServerSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameServerSearchInputDTO\n     */\n    sortDirection?: PlayerOnGameServerSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameServerSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameServerSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerOnGameServerSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const PlayerOnGameServerSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype PlayerOnGameServerSearchInputDTOSortDirectionEnum = (typeof PlayerOnGameServerSearchInputDTOSortDirectionEnum)[keyof typeof PlayerOnGameServerSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface PlayerOnGameServerSetCurrencyInputDTO\n */\ninterface PlayerOnGameServerSetCurrencyInputDTO {\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameServerSetCurrencyInputDTO\n     */\n    currency: number;\n}\n/**\n *\n * @export\n * @interface PlayerOnGameServerUpdateDTO\n */\ninterface PlayerOnGameServerUpdateDTO {\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameServerUpdateDTO\n     */\n    positionX?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameServerUpdateDTO\n     */\n    positionY?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameServerUpdateDTO\n     */\n    positionZ?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameServerUpdateDTO\n     */\n    ip?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameServerUpdateDTO\n     */\n    ping?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameServerUpdateDTO\n     */\n    currency?: number;\n    /**\n     *\n     * @type {boolean}\n     * @memberof PlayerOnGameServerUpdateDTO\n     */\n    online: boolean;\n}\n/**\n *\n * @export\n * @interface PlayerOnGameserverOutputArrayDTOAPI\n */\ninterface PlayerOnGameserverOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<PlayerOnGameserverOutputWithRolesDTO>}\n     * @memberof PlayerOnGameserverOutputArrayDTOAPI\n     */\n    data: Array<PlayerOnGameserverOutputWithRolesDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof PlayerOnGameserverOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface PlayerOnGameserverOutputDTO\n */\ninterface PlayerOnGameserverOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    gameServerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    playerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    gameId: string;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    positionX?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    positionY?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    positionZ?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    ip?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    ping?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    currency: number;\n    /**\n     *\n     * @type {boolean}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    online: boolean;\n    /**\n     *\n     * @type {Array<IItemDTO>}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    inventory: Array<IItemDTO>;\n    /**\n     *\n     * @type {Array<IpHistoryOutputDTO>}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    ipHistory: Array<IpHistoryOutputDTO>;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOnGameserverOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface PlayerOnGameserverOutputDTOAPI\n */\ninterface PlayerOnGameserverOutputDTOAPI {\n    /**\n     *\n     * @type {PlayerOnGameserverOutputWithRolesDTO}\n     * @memberof PlayerOnGameserverOutputDTOAPI\n     */\n    data: PlayerOnGameserverOutputWithRolesDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof PlayerOnGameserverOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface PlayerOnGameserverOutputWithRolesDTO\n */\ninterface PlayerOnGameserverOutputWithRolesDTO {\n    /**\n     *\n     * @type {Array<PlayerRoleAssignmentOutputDTO>}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    roles: Array<PlayerRoleAssignmentOutputDTO>;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    gameServerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    playerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    gameId: string;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    positionX?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    positionY?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    positionZ?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    ip?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    ping?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    currency: number;\n    /**\n     *\n     * @type {boolean}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    online: boolean;\n    /**\n     *\n     * @type {Array<IItemDTO>}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    inventory: Array<IItemDTO>;\n    /**\n     *\n     * @type {Array<IpHistoryOutputDTO>}\n     * @memberof PlayerOnGameserverOutputWithRolesDTO\n     */\n    ipHistory: Array<IpHistoryOutputDTO>;\n}\n/**\n *\n * @export\n * @interface PlayerOutputArrayDTOAPI\n */\ninterface PlayerOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<PlayerOutputDTO>}\n     * @memberof PlayerOutputArrayDTOAPI\n     */\n    data: Array<PlayerOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof PlayerOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface PlayerOutputDTO\n */\ninterface PlayerOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    steamId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    xboxLiveId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    epicOnlineServicesId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    steamAvatar?: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOutputDTO\n     */\n    steamAccountCreated?: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {boolean}\n     * @memberof PlayerOutputDTO\n     */\n    steamCommunityBanned?: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    steamEconomyBan?: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof PlayerOutputDTO\n     */\n    steamVacBanned?: boolean;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOutputDTO\n     */\n    steamsDaysSinceLastBan?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOutputDTO\n     */\n    steamNumberOfVACBans?: number;\n    /**\n     *\n     * @type {Array<PlayerOnGameserverOutputDTO>}\n     * @memberof PlayerOutputDTO\n     */\n    playerOnGameServers?: Array<PlayerOnGameserverOutputDTO>;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface PlayerOutputDTOAPI\n */\ninterface PlayerOutputDTOAPI {\n    /**\n     *\n     * @type {PlayerOutputWithRolesDTO}\n     * @memberof PlayerOutputDTOAPI\n     */\n    data: PlayerOutputWithRolesDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof PlayerOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface PlayerOutputWithRolesDTO\n */\ninterface PlayerOutputWithRolesDTO {\n    /**\n     *\n     * @type {Array<PlayerRoleAssignmentOutputDTO>}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    roleAssignments: Array<PlayerRoleAssignmentOutputDTO>;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    steamId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    xboxLiveId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    epicOnlineServicesId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    steamAvatar?: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    steamAccountCreated?: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {boolean}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    steamCommunityBanned?: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    steamEconomyBan?: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    steamVacBanned?: boolean;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    steamsDaysSinceLastBan?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    steamNumberOfVACBans?: number;\n    /**\n     *\n     * @type {Array<PlayerOnGameserverOutputDTO>}\n     * @memberof PlayerOutputWithRolesDTO\n     */\n    playerOnGameServers?: Array<PlayerOnGameserverOutputDTO>;\n}\n/**\n *\n * @export\n * @interface PlayerOutputWithRolesDTOAPI\n */\ninterface PlayerOutputWithRolesDTOAPI {\n    /**\n     *\n     * @type {PlayerOutputWithRolesDTO}\n     * @memberof PlayerOutputWithRolesDTOAPI\n     */\n    data: PlayerOutputWithRolesDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof PlayerOutputWithRolesDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface PlayerRoleAssignChangeDTO\n */\ninterface PlayerRoleAssignChangeDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerRoleAssignChangeDTO\n     */\n    gameServerId?: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerRoleAssignChangeDTO\n     */\n    expiresAt?: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface PlayerRoleAssignmentOutputDTO\n */\ninterface PlayerRoleAssignmentOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerRoleAssignmentOutputDTO\n     */\n    playerId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerRoleAssignmentOutputDTO\n     */\n    roleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerRoleAssignmentOutputDTO\n     */\n    gameServerId?: string;\n    /**\n     *\n     * @type {RoleOutputDTO}\n     * @memberof PlayerRoleAssignmentOutputDTO\n     */\n    role: RoleOutputDTO;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerRoleAssignmentOutputDTO\n     */\n    expiresAt?: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerRoleAssignmentOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerRoleAssignmentOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof PlayerRoleAssignmentOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface PlayerSearchInputAllowedFilters\n */\ninterface PlayerSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    id?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    steamId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    epicOnlineServicesId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    xboxLiveId?: Array<string>;\n    /**\n     *\n     * @type {Array<boolean>}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    steamCommunityBanned?: Array<boolean>;\n    /**\n     *\n     * @type {Array<boolean>}\n     * @memberof PlayerSearchInputAllowedFilters\n     */\n    steamVacBanned?: Array<boolean>;\n}\n/**\n *\n * @export\n * @interface PlayerSearchInputDTO\n */\ninterface PlayerSearchInputDTO {\n    /**\n     *\n     * @type {PlayerSearchInputAllowedFilters}\n     * @memberof PlayerSearchInputDTO\n     */\n    filters?: PlayerSearchInputAllowedFilters;\n    /**\n     *\n     * @type {PlayerSearchInputAllowedFilters}\n     * @memberof PlayerSearchInputDTO\n     */\n    search?: PlayerSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof PlayerSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputDTO\n     */\n    sortDirection?: PlayerSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof PlayerSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const PlayerSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype PlayerSearchInputDTOSortDirectionEnum = (typeof PlayerSearchInputDTOSortDirectionEnum)[keyof typeof PlayerSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface PlayerUpdateDTO\n */\ninterface PlayerUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof PlayerUpdateDTO\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface RedirectQs\n */\ninterface RedirectQs {\n    /**\n     *\n     * @type {string}\n     * @memberof RedirectQs\n     */\n    redirect: string;\n}\n/**\n *\n * @export\n * @interface RoleCreateInputDTO\n */\ninterface RoleCreateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof RoleCreateInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {Array<PermissionInputDTO>}\n     * @memberof RoleCreateInputDTO\n     */\n    permissions: Array<PermissionInputDTO>;\n}\n/**\n *\n * @export\n * @interface RoleOutputArrayDTOAPI\n */\ninterface RoleOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<RoleOutputDTO>}\n     * @memberof RoleOutputArrayDTOAPI\n     */\n    data: Array<RoleOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof RoleOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface RoleOutputDTO\n */\ninterface RoleOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof RoleOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {Array<PermissionOnRoleDTO>}\n     * @memberof RoleOutputDTO\n     */\n    permissions: Array<PermissionOnRoleDTO>;\n    /**\n     *\n     * @type {boolean}\n     * @memberof RoleOutputDTO\n     */\n    system: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof RoleOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof RoleOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof RoleOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface RoleOutputDTOAPI\n */\ninterface RoleOutputDTOAPI {\n    /**\n     *\n     * @type {RoleOutputDTO}\n     * @memberof RoleOutputDTOAPI\n     */\n    data: RoleOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof RoleOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface RoleSearchInputAllowedFilters\n */\ninterface RoleSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof RoleSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n}\n/**\n *\n * @export\n * @interface RoleSearchInputDTO\n */\ninterface RoleSearchInputDTO {\n    /**\n     *\n     * @type {RoleSearchInputAllowedFilters}\n     * @memberof RoleSearchInputDTO\n     */\n    filters?: RoleSearchInputAllowedFilters;\n    /**\n     *\n     * @type {RoleSearchInputAllowedFilters}\n     * @memberof RoleSearchInputDTO\n     */\n    search?: RoleSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof RoleSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof RoleSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof RoleSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof RoleSearchInputDTO\n     */\n    sortDirection?: RoleSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof RoleSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof RoleSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof RoleSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const RoleSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype RoleSearchInputDTOSortDirectionEnum = (typeof RoleSearchInputDTOSortDirectionEnum)[keyof typeof RoleSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface RoleUpdateInputDTO\n */\ninterface RoleUpdateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof RoleUpdateInputDTO\n     */\n    name?: string;\n    /**\n     *\n     * @type {Array<PermissionInputDTO>}\n     * @memberof RoleUpdateInputDTO\n     */\n    permissions?: Array<PermissionInputDTO>;\n}\n/**\n *\n * @export\n * @interface RustConnectionInfo\n */\ninterface RustConnectionInfo {\n    /**\n     *\n     * @type {string}\n     * @memberof RustConnectionInfo\n     */\n    host: string;\n    /**\n     *\n     * @type {number}\n     * @memberof RustConnectionInfo\n     */\n    rconPort: number;\n    /**\n     *\n     * @type {string}\n     * @memberof RustConnectionInfo\n     */\n    rconPassword: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof RustConnectionInfo\n     */\n    useTls: boolean;\n}\n/**\n *\n * @export\n * @interface SdtdConnectionInfo\n */\ninterface SdtdConnectionInfo {\n    /**\n     *\n     * @type {string}\n     * @memberof SdtdConnectionInfo\n     */\n    host: string;\n    /**\n     *\n     * @type {string}\n     * @memberof SdtdConnectionInfo\n     */\n    adminUser: string;\n    /**\n     *\n     * @type {string}\n     * @memberof SdtdConnectionInfo\n     */\n    adminToken: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof SdtdConnectionInfo\n     */\n    useTls: boolean;\n    /**\n     *\n     * @type {boolean}\n     * @memberof SdtdConnectionInfo\n     */\n    useCPM: boolean;\n}\n/**\n *\n * @export\n * @interface SearchRoleInputDTO\n */\ninterface SearchRoleInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof SearchRoleInputDTO\n     */\n    name: string;\n}\n/**\n *\n * @export\n * @interface SendMessageInputDTO\n */\ninterface SendMessageInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof SendMessageInputDTO\n     */\n    message: string;\n}\n/**\n *\n * @export\n * @interface ServiceRoleCreateInputDTO\n */\ninterface ServiceRoleCreateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof ServiceRoleCreateInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {Array<PermissionInputDTO>}\n     * @memberof ServiceRoleCreateInputDTO\n     */\n    permissions: Array<PermissionInputDTO>;\n    /**\n     *\n     * @type {boolean}\n     * @memberof ServiceRoleCreateInputDTO\n     */\n    system?: boolean;\n}\n/**\n *\n * @export\n * @interface Settings\n */\ninterface Settings {\n    /**\n     *\n     * @type {string}\n     * @memberof Settings\n     */\n    commandPrefix: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Settings\n     */\n    serverChatName: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Settings\n     */\n    economyEnabled: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Settings\n     */\n    currencyName: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Settings\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof Settings\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof Settings\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface SettingsOutputDTOAPI\n */\ninterface SettingsOutputDTOAPI {\n    /**\n     *\n     * @type {string}\n     * @memberof SettingsOutputDTOAPI\n     */\n    data: string;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof SettingsOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface SettingsOutputObjectDTOAPI\n */\ninterface SettingsOutputObjectDTOAPI {\n    /**\n     *\n     * @type {Settings}\n     * @memberof SettingsOutputObjectDTOAPI\n     */\n    data: Settings;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof SettingsOutputObjectDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface SettingsSetDTO\n */\ninterface SettingsSetDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof SettingsSetDTO\n     */\n    gameServerId?: string;\n    /**\n     *\n     * @type {any}\n     * @memberof SettingsSetDTO\n     */\n    value: any;\n}\n/**\n *\n * @export\n * @interface TakaroModelDTO\n */\ninterface TakaroModelDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof TakaroModelDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof TakaroModelDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof TakaroModelDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface TakaroTokenDTO\n */\ninterface TakaroTokenDTO {\n    /**\n     *\n     * @type {boolean}\n     * @memberof TakaroTokenDTO\n     */\n    active: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof TakaroTokenDTO\n     */\n    clientId: string;\n    /**\n     *\n     * @type {number}\n     * @memberof TakaroTokenDTO\n     */\n    exp: number;\n    /**\n     *\n     * @type {number}\n     * @memberof TakaroTokenDTO\n     */\n    iat: number;\n    /**\n     *\n     * @type {string}\n     * @memberof TakaroTokenDTO\n     */\n    iss: string;\n    /**\n     *\n     * @type {string}\n     * @memberof TakaroTokenDTO\n     */\n    sub: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof TakaroTokenDTO\n     */\n    aud: Array<string>;\n}\n/**\n *\n * @export\n * @interface TeleportPlayerInputDTO\n */\ninterface TeleportPlayerInputDTO {\n    /**\n     *\n     * @type {number}\n     * @memberof TeleportPlayerInputDTO\n     */\n    x: number;\n    /**\n     *\n     * @type {number}\n     * @memberof TeleportPlayerInputDTO\n     */\n    y: number;\n    /**\n     *\n     * @type {number}\n     * @memberof TeleportPlayerInputDTO\n     */\n    z: number;\n}\n/**\n *\n * @export\n * @interface TestReachabilityOutputDTO\n */\ninterface TestReachabilityOutputDTO {\n    /**\n     *\n     * @type {boolean}\n     * @memberof TestReachabilityOutputDTO\n     */\n    connectable: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof TestReachabilityOutputDTO\n     */\n    reason?: string;\n}\n/**\n *\n * @export\n * @interface TokenInputDTO\n */\ninterface TokenInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof TokenInputDTO\n     */\n    domainId: string;\n}\n/**\n *\n * @export\n * @interface TokenOutputDTO\n */\ninterface TokenOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof TokenOutputDTO\n     */\n    token: string;\n}\n/**\n *\n * @export\n * @interface TokenOutputDTOAPI\n */\ninterface TokenOutputDTOAPI {\n    /**\n     *\n     * @type {TokenOutputDTO}\n     * @memberof TokenOutputDTOAPI\n     */\n    data: TokenOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof TokenOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface UserAssignmentOutputDTO\n */\ninterface UserAssignmentOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof UserAssignmentOutputDTO\n     */\n    userId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserAssignmentOutputDTO\n     */\n    roleId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserAssignmentOutputDTO\n     */\n    gameServerId?: string;\n    /**\n     *\n     * @type {RoleOutputDTO}\n     * @memberof UserAssignmentOutputDTO\n     */\n    role: RoleOutputDTO;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserAssignmentOutputDTO\n     */\n    expiresAt?: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof UserAssignmentOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserAssignmentOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserAssignmentOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface UserCreateInputDTO\n */\ninterface UserCreateInputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof UserCreateInputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserCreateInputDTO\n     */\n    email: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserCreateInputDTO\n     */\n    password: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserCreateInputDTO\n     */\n    idpId?: string;\n}\n/**\n *\n * @export\n * @interface UserOutputArrayDTOAPI\n */\ninterface UserOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<UserOutputWithRolesDTO>}\n     * @memberof UserOutputArrayDTOAPI\n     */\n    data: Array<UserOutputWithRolesDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof UserOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface UserOutputDTO\n */\ninterface UserOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputDTO\n     */\n    email: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputDTO\n     */\n    idpId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputDTO\n     */\n    discordId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface UserOutputDTOAPI\n */\ninterface UserOutputDTOAPI {\n    /**\n     *\n     * @type {UserOutputWithRolesDTO}\n     * @memberof UserOutputDTOAPI\n     */\n    data: UserOutputWithRolesDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof UserOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface UserOutputWithRolesDTO\n */\ninterface UserOutputWithRolesDTO {\n    /**\n     *\n     * @type {Array<UserAssignmentOutputDTO>}\n     * @memberof UserOutputWithRolesDTO\n     */\n    roles: Array<UserAssignmentOutputDTO>;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputWithRolesDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserOutputWithRolesDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserOutputWithRolesDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputWithRolesDTO\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputWithRolesDTO\n     */\n    email: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputWithRolesDTO\n     */\n    idpId: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserOutputWithRolesDTO\n     */\n    discordId?: string;\n}\n/**\n *\n * @export\n * @interface UserRoleAssignChangeDTO\n */\ninterface UserRoleAssignChangeDTO {\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof UserRoleAssignChangeDTO\n     */\n    expiresAt?: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface UserSearchInputAllowedFilters\n */\ninterface UserSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof UserSearchInputAllowedFilters\n     */\n    name?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof UserSearchInputAllowedFilters\n     */\n    idpId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof UserSearchInputAllowedFilters\n     */\n    discordId?: Array<string>;\n}\n/**\n *\n * @export\n * @interface UserSearchInputDTO\n */\ninterface UserSearchInputDTO {\n    /**\n     *\n     * @type {UserSearchInputAllowedFilters}\n     * @memberof UserSearchInputDTO\n     */\n    filters?: UserSearchInputAllowedFilters;\n    /**\n     *\n     * @type {UserSearchInputAllowedFilters}\n     * @memberof UserSearchInputDTO\n     */\n    search?: UserSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof UserSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof UserSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof UserSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserSearchInputDTO\n     */\n    sortDirection?: UserSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof UserSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof UserSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof UserSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const UserSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype UserSearchInputDTOSortDirectionEnum = (typeof UserSearchInputDTOSortDirectionEnum)[keyof typeof UserSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface UserUpdateAuthDTO\n */\ninterface UserUpdateAuthDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof UserUpdateAuthDTO\n     */\n    discordId?: string;\n}\n/**\n *\n * @export\n * @interface UserUpdateDTO\n */\ninterface UserUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof UserUpdateDTO\n     */\n    name?: string;\n}\n/**\n *\n * @export\n * @interface VariableCreateDTO\n */\ninterface VariableCreateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof VariableCreateDTO\n     */\n    key: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableCreateDTO\n     */\n    value: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableCreateDTO\n     */\n    gameServerId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableCreateDTO\n     */\n    playerId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableCreateDTO\n     */\n    moduleId?: string;\n}\n/**\n *\n * @export\n * @interface VariableOutputArrayDTOAPI\n */\ninterface VariableOutputArrayDTOAPI {\n    /**\n     *\n     * @type {Array<VariableOutputDTO>}\n     * @memberof VariableOutputArrayDTOAPI\n     */\n    data: Array<VariableOutputDTO>;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof VariableOutputArrayDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface VariableOutputDTO\n */\ninterface VariableOutputDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof VariableOutputDTO\n     */\n    key: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableOutputDTO\n     */\n    value: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableOutputDTO\n     */\n    gameServerId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableOutputDTO\n     */\n    playerId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableOutputDTO\n     */\n    moduleId?: string;\n    /**\n     *\n     * @type {GameServerOutputDTO}\n     * @memberof VariableOutputDTO\n     */\n    gameServer?: GameServerOutputDTO;\n    /**\n     *\n     * @type {ModuleOutputDTO}\n     * @memberof VariableOutputDTO\n     */\n    module?: ModuleOutputDTO;\n    /**\n     *\n     * @type {PlayerOutputDTO}\n     * @memberof VariableOutputDTO\n     */\n    player?: PlayerOutputDTO;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableOutputDTO\n     */\n    id: string;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof VariableOutputDTO\n     */\n    createdAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n    /**\n     *\n     * @type {NOTDOMAINSCOPEDTakaroModelDTOCreatedAt}\n     * @memberof VariableOutputDTO\n     */\n    updatedAt: NOTDOMAINSCOPEDTakaroModelDTOCreatedAt;\n}\n/**\n *\n * @export\n * @interface VariableOutputDTOAPI\n */\ninterface VariableOutputDTOAPI {\n    /**\n     *\n     * @type {VariableOutputDTO}\n     * @memberof VariableOutputDTOAPI\n     */\n    data: VariableOutputDTO;\n    /**\n     *\n     * @type {MetadataOutput}\n     * @memberof VariableOutputDTOAPI\n     */\n    meta: MetadataOutput;\n}\n/**\n *\n * @export\n * @interface VariableSearchInputAllowedFilters\n */\ninterface VariableSearchInputAllowedFilters {\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof VariableSearchInputAllowedFilters\n     */\n    id?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof VariableSearchInputAllowedFilters\n     */\n    key?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof VariableSearchInputAllowedFilters\n     */\n    gameServerId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof VariableSearchInputAllowedFilters\n     */\n    playerId?: Array<string>;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof VariableSearchInputAllowedFilters\n     */\n    moduleId?: Array<string>;\n}\n/**\n *\n * @export\n * @interface VariableSearchInputDTO\n */\ninterface VariableSearchInputDTO {\n    /**\n     *\n     * @type {VariableSearchInputAllowedFilters}\n     * @memberof VariableSearchInputDTO\n     */\n    filters?: VariableSearchInputAllowedFilters;\n    /**\n     *\n     * @type {VariableSearchInputAllowedFilters}\n     * @memberof VariableSearchInputDTO\n     */\n    search?: VariableSearchInputAllowedFilters;\n    /**\n     *\n     * @type {number}\n     * @memberof VariableSearchInputDTO\n     */\n    page?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof VariableSearchInputDTO\n     */\n    limit?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableSearchInputDTO\n     */\n    sortBy?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableSearchInputDTO\n     */\n    sortDirection?: VariableSearchInputDTOSortDirectionEnum;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableSearchInputDTO\n     */\n    startDate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableSearchInputDTO\n     */\n    endDate?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof VariableSearchInputDTO\n     */\n    extend?: Array<string>;\n}\ndeclare const VariableSearchInputDTOSortDirectionEnum: {\n    readonly Asc: \"asc\";\n    readonly Desc: \"desc\";\n};\ntype VariableSearchInputDTOSortDirectionEnum = (typeof VariableSearchInputDTOSortDirectionEnum)[keyof typeof VariableSearchInputDTOSortDirectionEnum];\n/**\n *\n * @export\n * @interface VariableUpdateDTO\n */\ninterface VariableUpdateDTO {\n    /**\n     *\n     * @type {string}\n     * @memberof VariableUpdateDTO\n     */\n    key?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableUpdateDTO\n     */\n    value: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableUpdateDTO\n     */\n    gameServerId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableUpdateDTO\n     */\n    playerId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof VariableUpdateDTO\n     */\n    moduleId?: string;\n}\n/**\n * CommandApi - axios parameter creator\n * @export\n */\ndeclare const CommandApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {CommandCreateDTO} [commandCreateDTO] CommandCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreate: (commandCreateDTO?: CommandCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Create argument\n     * @param {CommandArgumentCreateDTO} [commandArgumentCreateDTO] CommandArgumentCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreateArgument: (commandArgumentCreateDTO?: CommandArgumentCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove argument\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemoveArgument: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {CommandSearchInputDTO} [commandSearchInputDTO] CommandSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerSearch: (commandSearchInputDTO?: CommandSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Trigger\n     * @param {string} id\n     * @param {CommandTriggerDTO} [commandTriggerDTO] CommandTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerTrigger: (id: string, commandTriggerDTO?: CommandTriggerDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CommandUpdateDTO} [commandUpdateDTO] CommandUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdate: (id: string, commandUpdateDTO?: CommandUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update argument\n     * @param {string} id\n     * @param {CommandArgumentUpdateDTO} [commandArgumentUpdateDTO] CommandArgumentUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdateArgument: (id: string, commandArgumentUpdateDTO?: CommandArgumentUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * CommandApi - functional programming interface\n * @export\n */\ndeclare const CommandApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {CommandCreateDTO} [commandCreateDTO] CommandCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreate(commandCreateDTO?: CommandCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandOutputDTOAPI>>;\n    /**\n     *\n     * @summary Create argument\n     * @param {CommandArgumentCreateDTO} [commandArgumentCreateDTO] CommandArgumentCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreateArgument(commandArgumentCreateDTO?: CommandArgumentCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandArgumentDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Remove argument\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemoveArgument(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {CommandSearchInputDTO} [commandSearchInputDTO] CommandSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerSearch(commandSearchInputDTO?: CommandSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Trigger\n     * @param {string} id\n     * @param {CommandTriggerDTO} [commandTriggerDTO] CommandTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerTrigger(id: string, commandTriggerDTO?: CommandTriggerDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CommandUpdateDTO} [commandUpdateDTO] CommandUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdate(id: string, commandUpdateDTO?: CommandUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandOutputDTOAPI>>;\n    /**\n     *\n     * @summary Update argument\n     * @param {string} id\n     * @param {CommandArgumentUpdateDTO} [commandArgumentUpdateDTO] CommandArgumentUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdateArgument(id: string, commandArgumentUpdateDTO?: CommandArgumentUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandArgumentDTOAPI>>;\n};\n/**\n * CommandApi - factory interface\n * @export\n */\ndeclare const CommandApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {CommandCreateDTO} [commandCreateDTO] CommandCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreate(commandCreateDTO?: CommandCreateDTO, options?: any): AxiosPromise<CommandOutputDTOAPI>;\n    /**\n     *\n     * @summary Create argument\n     * @param {CommandArgumentCreateDTO} [commandArgumentCreateDTO] CommandArgumentCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerCreateArgument(commandArgumentCreateDTO?: CommandArgumentCreateDTO, options?: any): AxiosPromise<CommandArgumentDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerGetOne(id: string, options?: any): AxiosPromise<CommandOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Remove argument\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerRemoveArgument(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {CommandSearchInputDTO} [commandSearchInputDTO] CommandSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerSearch(commandSearchInputDTO?: CommandSearchInputDTO, options?: any): AxiosPromise<CommandOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Trigger\n     * @param {string} id\n     * @param {CommandTriggerDTO} [commandTriggerDTO] CommandTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerTrigger(id: string, commandTriggerDTO?: CommandTriggerDTO, options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CommandUpdateDTO} [commandUpdateDTO] CommandUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdate(id: string, commandUpdateDTO?: CommandUpdateDTO, options?: any): AxiosPromise<CommandOutputDTOAPI>;\n    /**\n     *\n     * @summary Update argument\n     * @param {string} id\n     * @param {CommandArgumentUpdateDTO} [commandArgumentUpdateDTO] CommandArgumentUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    commandControllerUpdateArgument(id: string, commandArgumentUpdateDTO?: CommandArgumentUpdateDTO, options?: any): AxiosPromise<CommandArgumentDTOAPI>;\n};\n/**\n * CommandApi - object-oriented interface\n * @export\n * @class CommandApi\n * @extends {BaseAPI}\n */\ndeclare class CommandApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {CommandCreateDTO} [commandCreateDTO] CommandCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerCreate(commandCreateDTO?: CommandCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Create argument\n     * @param {CommandArgumentCreateDTO} [commandArgumentCreateDTO] CommandArgumentCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerCreateArgument(commandArgumentCreateDTO?: CommandArgumentCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandArgumentDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove argument\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerRemoveArgument(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {CommandSearchInputDTO} [commandSearchInputDTO] CommandSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerSearch(commandSearchInputDTO?: CommandSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Trigger\n     * @param {string} id\n     * @param {CommandTriggerDTO} [commandTriggerDTO] CommandTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerTrigger(id: string, commandTriggerDTO?: CommandTriggerDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CommandUpdateDTO} [commandUpdateDTO] CommandUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerUpdate(id: string, commandUpdateDTO?: CommandUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Update argument\n     * @param {string} id\n     * @param {CommandArgumentUpdateDTO} [commandArgumentUpdateDTO] CommandArgumentUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CommandApi\n     */\n    commandControllerUpdateArgument(id: string, commandArgumentUpdateDTO?: CommandArgumentUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandArgumentDTOAPI, any>>;\n}\n/**\n * CronJobApi - axios parameter creator\n * @export\n */\ndeclare const CronJobApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {CronJobCreateDTO} [cronJobCreateDTO] CronJobCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerCreate: (cronJobCreateDTO?: CronJobCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {CronJobSearchInputDTO} [cronJobSearchInputDTO] CronJobSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerSearch: (cronJobSearchInputDTO?: CronJobSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Trigger\n     * @param {CronJobTriggerDTO} [cronJobTriggerDTO] CronJobTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerTrigger: (cronJobTriggerDTO?: CronJobTriggerDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CronJobUpdateDTO} [cronJobUpdateDTO] CronJobUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerUpdate: (id: string, cronJobUpdateDTO?: CronJobUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * CronJobApi - functional programming interface\n * @export\n */\ndeclare const CronJobApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {CronJobCreateDTO} [cronJobCreateDTO] CronJobCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerCreate(cronJobCreateDTO?: CronJobCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CronJobOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CronJobOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {CronJobSearchInputDTO} [cronJobSearchInputDTO] CronJobSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerSearch(cronJobSearchInputDTO?: CronJobSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CronJobOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Trigger\n     * @param {CronJobTriggerDTO} [cronJobTriggerDTO] CronJobTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerTrigger(cronJobTriggerDTO?: CronJobTriggerDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CronJobUpdateDTO} [cronJobUpdateDTO] CronJobUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerUpdate(id: string, cronJobUpdateDTO?: CronJobUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CronJobOutputDTOAPI>>;\n};\n/**\n * CronJobApi - factory interface\n * @export\n */\ndeclare const CronJobApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {CronJobCreateDTO} [cronJobCreateDTO] CronJobCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerCreate(cronJobCreateDTO?: CronJobCreateDTO, options?: any): AxiosPromise<CronJobOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerGetOne(id: string, options?: any): AxiosPromise<CronJobOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {CronJobSearchInputDTO} [cronJobSearchInputDTO] CronJobSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerSearch(cronJobSearchInputDTO?: CronJobSearchInputDTO, options?: any): AxiosPromise<CronJobOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Trigger\n     * @param {CronJobTriggerDTO} [cronJobTriggerDTO] CronJobTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerTrigger(cronJobTriggerDTO?: CronJobTriggerDTO, options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CronJobUpdateDTO} [cronJobUpdateDTO] CronJobUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    cronJobControllerUpdate(id: string, cronJobUpdateDTO?: CronJobUpdateDTO, options?: any): AxiosPromise<CronJobOutputDTOAPI>;\n};\n/**\n * CronJobApi - object-oriented interface\n * @export\n * @class CronJobApi\n * @extends {BaseAPI}\n */\ndeclare class CronJobApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {CronJobCreateDTO} [cronJobCreateDTO] CronJobCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerCreate(cronJobCreateDTO?: CronJobCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CronJobOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CronJobOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {CronJobSearchInputDTO} [cronJobSearchInputDTO] CronJobSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerSearch(cronJobSearchInputDTO?: CronJobSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CronJobOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Trigger\n     * @param {CronJobTriggerDTO} [cronJobTriggerDTO] CronJobTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerTrigger(cronJobTriggerDTO?: CronJobTriggerDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {CronJobUpdateDTO} [cronJobUpdateDTO] CronJobUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof CronJobApi\n     */\n    cronJobControllerUpdate(id: string, cronJobUpdateDTO?: CronJobUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CronJobOutputDTOAPI, any>>;\n}\n/**\n * DiscordApi - axios parameter creator\n * @export\n */\ndeclare const DiscordApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get invite\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerGetInvite: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {GuildSearchInputDTO} [guildSearchInputDTO] GuildSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerSearch: (guildSearchInputDTO?: GuildSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {SendMessageInputDTO} [sendMessageInputDTO] SendMessageInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerSendMessage: (id: string, sendMessageInputDTO?: SendMessageInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update guild\n     * @param {string} id\n     * @param {GuildApiUpdateDTO} [guildApiUpdateDTO] GuildApiUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerUpdateGuild: (id: string, guildApiUpdateDTO?: GuildApiUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * DiscordApi - functional programming interface\n * @export\n */\ndeclare const DiscordApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get invite\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerGetInvite(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DiscordInviteOutputDTO>>;\n    /**\n     *\n     * @summary Search\n     * @param {GuildSearchInputDTO} [guildSearchInputDTO] GuildSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerSearch(guildSearchInputDTO?: GuildSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GuildOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {SendMessageInputDTO} [sendMessageInputDTO] SendMessageInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerSendMessage(id: string, sendMessageInputDTO?: SendMessageInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Update guild\n     * @param {string} id\n     * @param {GuildApiUpdateDTO} [guildApiUpdateDTO] GuildApiUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerUpdateGuild(id: string, guildApiUpdateDTO?: GuildApiUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GuildOutputDTOAPI>>;\n};\n/**\n * DiscordApi - factory interface\n * @export\n */\ndeclare const DiscordApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Get invite\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerGetInvite(options?: any): AxiosPromise<DiscordInviteOutputDTO>;\n    /**\n     *\n     * @summary Search\n     * @param {GuildSearchInputDTO} [guildSearchInputDTO] GuildSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerSearch(guildSearchInputDTO?: GuildSearchInputDTO, options?: any): AxiosPromise<GuildOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {SendMessageInputDTO} [sendMessageInputDTO] SendMessageInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerSendMessage(id: string, sendMessageInputDTO?: SendMessageInputDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Update guild\n     * @param {string} id\n     * @param {GuildApiUpdateDTO} [guildApiUpdateDTO] GuildApiUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    discordControllerUpdateGuild(id: string, guildApiUpdateDTO?: GuildApiUpdateDTO, options?: any): AxiosPromise<GuildOutputDTOAPI>;\n};\n/**\n * DiscordApi - object-oriented interface\n * @export\n * @class DiscordApi\n * @extends {BaseAPI}\n */\ndeclare class DiscordApi extends BaseAPI {\n    /**\n     *\n     * @summary Get invite\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DiscordApi\n     */\n    discordControllerGetInvite(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<DiscordInviteOutputDTO, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {GuildSearchInputDTO} [guildSearchInputDTO] GuildSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DiscordApi\n     */\n    discordControllerSearch(guildSearchInputDTO?: GuildSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GuildOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {SendMessageInputDTO} [sendMessageInputDTO] SendMessageInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DiscordApi\n     */\n    discordControllerSendMessage(id: string, sendMessageInputDTO?: SendMessageInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Update guild\n     * @param {string} id\n     * @param {GuildApiUpdateDTO} [guildApiUpdateDTO] GuildApiUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DiscordApi\n     */\n    discordControllerUpdateGuild(id: string, guildApiUpdateDTO?: GuildApiUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GuildOutputDTOAPI, any>>;\n}\n/**\n * DomainApi - axios parameter creator\n * @export\n */\ndeclare const DomainApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {DomainCreateInputDTO} [domainCreateInputDTO] DomainCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerCreate: (domainCreateInputDTO?: DomainCreateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get token\n     * @param {TokenInputDTO} [tokenInputDTO] TokenInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetToken: (tokenInputDTO?: TokenInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {DomainSearchInputDTO} [domainSearchInputDTO] DomainSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerSearch: (domainSearchInputDTO?: DomainSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {DomainUpdateInputDTO} [domainUpdateInputDTO] DomainUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerUpdate: (id: string, domainUpdateInputDTO?: DomainUpdateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * DomainApi - functional programming interface\n * @export\n */\ndeclare const DomainApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {DomainCreateInputDTO} [domainCreateInputDTO] DomainCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerCreate(domainCreateInputDTO?: DomainCreateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DomainCreateOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DomainOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get token\n     * @param {TokenInputDTO} [tokenInputDTO] TokenInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetToken(tokenInputDTO?: TokenInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TokenOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {DomainSearchInputDTO} [domainSearchInputDTO] DomainSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerSearch(domainSearchInputDTO?: DomainSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DomainOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {DomainUpdateInputDTO} [domainUpdateInputDTO] DomainUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerUpdate(id: string, domainUpdateInputDTO?: DomainUpdateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DomainOutputDTOAPI>>;\n};\n/**\n * DomainApi - factory interface\n * @export\n */\ndeclare const DomainApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {DomainCreateInputDTO} [domainCreateInputDTO] DomainCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerCreate(domainCreateInputDTO?: DomainCreateInputDTO, options?: any): AxiosPromise<DomainCreateOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetOne(id: string, options?: any): AxiosPromise<DomainOutputDTOAPI>;\n    /**\n     *\n     * @summary Get token\n     * @param {TokenInputDTO} [tokenInputDTO] TokenInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerGetToken(tokenInputDTO?: TokenInputDTO, options?: any): AxiosPromise<TokenOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {DomainSearchInputDTO} [domainSearchInputDTO] DomainSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerSearch(domainSearchInputDTO?: DomainSearchInputDTO, options?: any): AxiosPromise<DomainOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {DomainUpdateInputDTO} [domainUpdateInputDTO] DomainUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    domainControllerUpdate(id: string, domainUpdateInputDTO?: DomainUpdateInputDTO, options?: any): AxiosPromise<DomainOutputDTOAPI>;\n};\n/**\n * DomainApi - object-oriented interface\n * @export\n * @class DomainApi\n * @extends {BaseAPI}\n */\ndeclare class DomainApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {DomainCreateInputDTO} [domainCreateInputDTO] DomainCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerCreate(domainCreateInputDTO?: DomainCreateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<DomainCreateOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<DomainOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get token\n     * @param {TokenInputDTO} [tokenInputDTO] TokenInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerGetToken(tokenInputDTO?: TokenInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<TokenOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {DomainSearchInputDTO} [domainSearchInputDTO] DomainSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerSearch(domainSearchInputDTO?: DomainSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<DomainOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {DomainUpdateInputDTO} [domainUpdateInputDTO] DomainUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DomainApi\n     */\n    domainControllerUpdate(id: string, domainUpdateInputDTO?: DomainUpdateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<DomainOutputDTOAPI, any>>;\n}\n/**\n * EventApi - axios parameter creator\n * @export\n */\ndeclare const EventApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {EventCreateDTO} [eventCreateDTO] EventCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    eventControllerCreate: (eventCreateDTO?: EventCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {EventSearchInputDTO} [eventSearchInputDTO] EventSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    eventControllerSearch: (eventSearchInputDTO?: EventSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * EventApi - functional programming interface\n * @export\n */\ndeclare const EventApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {EventCreateDTO} [eventCreateDTO] EventCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    eventControllerCreate(eventCreateDTO?: EventCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EventOutputDTO>>;\n    /**\n     *\n     * @summary Search\n     * @param {EventSearchInputDTO} [eventSearchInputDTO] EventSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    eventControllerSearch(eventSearchInputDTO?: EventSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EventOutputArrayDTOAPI>>;\n};\n/**\n * EventApi - factory interface\n * @export\n */\ndeclare const EventApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {EventCreateDTO} [eventCreateDTO] EventCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    eventControllerCreate(eventCreateDTO?: EventCreateDTO, options?: any): AxiosPromise<EventOutputDTO>;\n    /**\n     *\n     * @summary Search\n     * @param {EventSearchInputDTO} [eventSearchInputDTO] EventSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    eventControllerSearch(eventSearchInputDTO?: EventSearchInputDTO, options?: any): AxiosPromise<EventOutputArrayDTOAPI>;\n};\n/**\n * EventApi - object-oriented interface\n * @export\n * @class EventApi\n * @extends {BaseAPI}\n */\ndeclare class EventApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {EventCreateDTO} [eventCreateDTO] EventCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    eventControllerCreate(eventCreateDTO?: EventCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<EventOutputDTO, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {EventSearchInputDTO} [eventSearchInputDTO] EventSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof EventApi\n     */\n    eventControllerSearch(eventSearchInputDTO?: EventSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<EventOutputArrayDTOAPI, any>>;\n}\n/**\n * ExternalAuthApi - axios parameter creator\n * @export\n */\ndeclare const ExternalAuthApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Auth discord\n     * @param {string} redirect\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    externalAuthControllerAuthDiscord: (redirect: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Auth discord return\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    externalAuthControllerAuthDiscordReturn: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * ExternalAuthApi - functional programming interface\n * @export\n */\ndeclare const ExternalAuthApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Auth discord\n     * @param {string} redirect\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    externalAuthControllerAuthDiscord(redirect: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Auth discord return\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    externalAuthControllerAuthDiscordReturn(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n};\n/**\n * ExternalAuthApi - factory interface\n * @export\n */\ndeclare const ExternalAuthApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Auth discord\n     * @param {string} redirect\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    externalAuthControllerAuthDiscord(redirect: string, options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Auth discord return\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    externalAuthControllerAuthDiscordReturn(options?: any): AxiosPromise<void>;\n};\n/**\n * ExternalAuthApi - object-oriented interface\n * @export\n * @class ExternalAuthApi\n * @extends {BaseAPI}\n */\ndeclare class ExternalAuthApi extends BaseAPI {\n    /**\n     *\n     * @summary Auth discord\n     * @param {string} redirect\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ExternalAuthApi\n     */\n    externalAuthControllerAuthDiscord(redirect: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Auth discord return\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ExternalAuthApi\n     */\n    externalAuthControllerAuthDiscordReturn(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n}\n/**\n * FunctionApi - axios parameter creator\n * @export\n */\ndeclare const FunctionApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {FunctionCreateDTO} [functionCreateDTO] FunctionCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerCreate: (functionCreateDTO?: FunctionCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {FunctionSearchInputDTO} [functionSearchInputDTO] FunctionSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerSearch: (functionSearchInputDTO?: FunctionSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {FunctionUpdateDTO} [functionUpdateDTO] FunctionUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerUpdate: (id: string, functionUpdateDTO?: FunctionUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * FunctionApi - functional programming interface\n * @export\n */\ndeclare const FunctionApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {FunctionCreateDTO} [functionCreateDTO] FunctionCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerCreate(functionCreateDTO?: FunctionCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FunctionOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FunctionOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {FunctionSearchInputDTO} [functionSearchInputDTO] FunctionSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerSearch(functionSearchInputDTO?: FunctionSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FunctionOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {FunctionUpdateDTO} [functionUpdateDTO] FunctionUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerUpdate(id: string, functionUpdateDTO?: FunctionUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FunctionOutputDTOAPI>>;\n};\n/**\n * FunctionApi - factory interface\n * @export\n */\ndeclare const FunctionApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {FunctionCreateDTO} [functionCreateDTO] FunctionCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerCreate(functionCreateDTO?: FunctionCreateDTO, options?: any): AxiosPromise<FunctionOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerGetOne(id: string, options?: any): AxiosPromise<FunctionOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {FunctionSearchInputDTO} [functionSearchInputDTO] FunctionSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerSearch(functionSearchInputDTO?: FunctionSearchInputDTO, options?: any): AxiosPromise<FunctionOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {FunctionUpdateDTO} [functionUpdateDTO] FunctionUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    functionControllerUpdate(id: string, functionUpdateDTO?: FunctionUpdateDTO, options?: any): AxiosPromise<FunctionOutputDTOAPI>;\n};\n/**\n * FunctionApi - object-oriented interface\n * @export\n * @class FunctionApi\n * @extends {BaseAPI}\n */\ndeclare class FunctionApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {FunctionCreateDTO} [functionCreateDTO] FunctionCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerCreate(functionCreateDTO?: FunctionCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<FunctionOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<FunctionOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {FunctionSearchInputDTO} [functionSearchInputDTO] FunctionSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerSearch(functionSearchInputDTO?: FunctionSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<FunctionOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {FunctionUpdateDTO} [functionUpdateDTO] FunctionUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof FunctionApi\n     */\n    functionControllerUpdate(id: string, functionUpdateDTO?: FunctionUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<FunctionOutputDTOAPI, any>>;\n}\n/**\n * GameServerApi - axios parameter creator\n * @export\n */\ndeclare const GameServerApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Ban player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {BanInputDTO} [banInputDTO] BanInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerBanPlayer: (gameserverId: string, playerId: string, banInputDTO?: BanInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Create\n     * @param {GameServerCreateDTO} [gameServerCreateDTO] GameServerCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerCreate: (gameServerCreateDTO?: GameServerCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Execute command\n     * @param {string} id\n     * @param {CommandExecuteInputDTO} [commandExecuteInputDTO] CommandExecuteInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerExecuteCommand: (id: string, commandExecuteInputDTO?: CommandExecuteInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get installed modules\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetInstalledModules: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get module installation\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetModuleInstallation: (gameserverId: string, moduleId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get players\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetPlayers: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get types\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetTypes: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Give item\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {GiveItemInputDTO} [giveItemInputDTO] GiveItemInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGiveItem: (gameserverId: string, playerId: string, giveItemInputDTO?: GiveItemInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Install module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {ModuleInstallDTO} [moduleInstallDTO] ModuleInstallDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerInstallModule: (gameserverId: string, moduleId: string, moduleInstallDTO?: ModuleInstallDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Kick player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {KickPlayerInputDTO} [kickPlayerInputDTO] KickPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerKickPlayer: (gameserverId: string, playerId: string, kickPlayerInputDTO?: KickPlayerInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary List bans\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerListBans: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {GameServerSearchInputDTO} [gameServerSearchInputDTO] GameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSearch: (gameServerSearchInputDTO?: GameServerSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {MessageSendInputDTO} [messageSendInputDTO] MessageSendInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSendMessage: (id: string, messageSendInputDTO?: MessageSendInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Teleport player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {TeleportPlayerInputDTO} [teleportPlayerInputDTO] TeleportPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTeleportPlayer: (gameserverId: string, playerId: string, teleportPlayerInputDTO?: TeleportPlayerInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Test reachability\n     * @param {GameServerTestReachabilityInputDTO} [gameServerTestReachabilityInputDTO] GameServerTestReachabilityInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachability: (gameServerTestReachabilityInputDTO?: GameServerTestReachabilityInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Test reachability for id\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachabilityForId: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Unban player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUnbanPlayer: (gameserverId: string, playerId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Uninstall module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUninstallModule: (gameserverId: string, moduleId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {GameServerUpdateDTO} [gameServerUpdateDTO] GameServerUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUpdate: (id: string, gameServerUpdateDTO?: GameServerUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * GameServerApi - functional programming interface\n * @export\n */\ndeclare const GameServerApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Ban player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {BanInputDTO} [banInputDTO] BanInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerBanPlayer(gameserverId: string, playerId: string, banInputDTO?: BanInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Create\n     * @param {GameServerCreateDTO} [gameServerCreateDTO] GameServerCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerCreate(gameServerCreateDTO?: GameServerCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerOutputDTOAPI>>;\n    /**\n     *\n     * @summary Execute command\n     * @param {string} id\n     * @param {CommandExecuteInputDTO} [commandExecuteInputDTO] CommandExecuteInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerExecuteCommand(id: string, commandExecuteInputDTO?: CommandExecuteInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CommandExecuteDTOAPI>>;\n    /**\n     *\n     * @summary Get installed modules\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetInstalledModules(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleInstallationOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Get module installation\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetModuleInstallation(gameserverId: string, moduleId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleInstallationOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get players\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetPlayers(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOnGameserverOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get types\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetTypes(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerTypesOutputDTOAPI>>;\n    /**\n     *\n     * @summary Give item\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {GiveItemInputDTO} [giveItemInputDTO] GiveItemInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGiveItem(gameserverId: string, playerId: string, giveItemInputDTO?: GiveItemInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Install module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {ModuleInstallDTO} [moduleInstallDTO] ModuleInstallDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerInstallModule(gameserverId: string, moduleId: string, moduleInstallDTO?: ModuleInstallDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleInstallationOutputDTOAPI>>;\n    /**\n     *\n     * @summary Kick player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {KickPlayerInputDTO} [kickPlayerInputDTO] KickPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerKickPlayer(gameserverId: string, playerId: string, kickPlayerInputDTO?: KickPlayerInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary List bans\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerListBans(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BanOutputDTO>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {GameServerSearchInputDTO} [gameServerSearchInputDTO] GameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSearch(gameServerSearchInputDTO?: GameServerSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {MessageSendInputDTO} [messageSendInputDTO] MessageSendInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSendMessage(id: string, messageSendInputDTO?: MessageSendInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Teleport player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {TeleportPlayerInputDTO} [teleportPlayerInputDTO] TeleportPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTeleportPlayer(gameserverId: string, playerId: string, teleportPlayerInputDTO?: TeleportPlayerInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Test reachability\n     * @param {GameServerTestReachabilityInputDTO} [gameServerTestReachabilityInputDTO] GameServerTestReachabilityInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachability(gameServerTestReachabilityInputDTO?: GameServerTestReachabilityInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerTestReachabilityDTOAPI>>;\n    /**\n     *\n     * @summary Test reachability for id\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachabilityForId(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerTestReachabilityDTOAPI>>;\n    /**\n     *\n     * @summary Unban player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUnbanPlayer(gameserverId: string, playerId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Uninstall module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUninstallModule(gameserverId: string, moduleId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleInstallationOutputDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {GameServerUpdateDTO} [gameServerUpdateDTO] GameServerUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUpdate(id: string, gameServerUpdateDTO?: GameServerUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GameServerOutputDTOAPI>>;\n};\n/**\n * GameServerApi - factory interface\n * @export\n */\ndeclare const GameServerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Ban player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {BanInputDTO} [banInputDTO] BanInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerBanPlayer(gameserverId: string, playerId: string, banInputDTO?: BanInputDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Create\n     * @param {GameServerCreateDTO} [gameServerCreateDTO] GameServerCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerCreate(gameServerCreateDTO?: GameServerCreateDTO, options?: any): AxiosPromise<GameServerOutputDTOAPI>;\n    /**\n     *\n     * @summary Execute command\n     * @param {string} id\n     * @param {CommandExecuteInputDTO} [commandExecuteInputDTO] CommandExecuteInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerExecuteCommand(id: string, commandExecuteInputDTO?: CommandExecuteInputDTO, options?: any): AxiosPromise<CommandExecuteDTOAPI>;\n    /**\n     *\n     * @summary Get installed modules\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetInstalledModules(id: string, options?: any): AxiosPromise<ModuleInstallationOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Get module installation\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetModuleInstallation(gameserverId: string, moduleId: string, options?: any): AxiosPromise<ModuleInstallationOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetOne(id: string, options?: any): AxiosPromise<GameServerOutputDTOAPI>;\n    /**\n     *\n     * @summary Get players\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetPlayers(id: string, options?: any): AxiosPromise<PlayerOnGameserverOutputDTOAPI>;\n    /**\n     *\n     * @summary Get types\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGetTypes(options?: any): AxiosPromise<GameServerTypesOutputDTOAPI>;\n    /**\n     *\n     * @summary Give item\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {GiveItemInputDTO} [giveItemInputDTO] GiveItemInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerGiveItem(gameserverId: string, playerId: string, giveItemInputDTO?: GiveItemInputDTO, options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Install module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {ModuleInstallDTO} [moduleInstallDTO] ModuleInstallDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerInstallModule(gameserverId: string, moduleId: string, moduleInstallDTO?: ModuleInstallDTO, options?: any): AxiosPromise<ModuleInstallationOutputDTOAPI>;\n    /**\n     *\n     * @summary Kick player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {KickPlayerInputDTO} [kickPlayerInputDTO] KickPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerKickPlayer(gameserverId: string, playerId: string, kickPlayerInputDTO?: KickPlayerInputDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary List bans\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerListBans(id: string, options?: any): AxiosPromise<BanOutputDTO>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {GameServerSearchInputDTO} [gameServerSearchInputDTO] GameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSearch(gameServerSearchInputDTO?: GameServerSearchInputDTO, options?: any): AxiosPromise<GameServerOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {MessageSendInputDTO} [messageSendInputDTO] MessageSendInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerSendMessage(id: string, messageSendInputDTO?: MessageSendInputDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Teleport player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {TeleportPlayerInputDTO} [teleportPlayerInputDTO] TeleportPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTeleportPlayer(gameserverId: string, playerId: string, teleportPlayerInputDTO?: TeleportPlayerInputDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Test reachability\n     * @param {GameServerTestReachabilityInputDTO} [gameServerTestReachabilityInputDTO] GameServerTestReachabilityInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachability(gameServerTestReachabilityInputDTO?: GameServerTestReachabilityInputDTO, options?: any): AxiosPromise<GameServerTestReachabilityDTOAPI>;\n    /**\n     *\n     * @summary Test reachability for id\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerTestReachabilityForId(id: string, options?: any): AxiosPromise<GameServerTestReachabilityDTOAPI>;\n    /**\n     *\n     * @summary Unban player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUnbanPlayer(gameserverId: string, playerId: string, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Uninstall module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUninstallModule(gameserverId: string, moduleId: string, options?: any): AxiosPromise<ModuleInstallationOutputDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {GameServerUpdateDTO} [gameServerUpdateDTO] GameServerUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    gameServerControllerUpdate(id: string, gameServerUpdateDTO?: GameServerUpdateDTO, options?: any): AxiosPromise<GameServerOutputDTOAPI>;\n};\n/**\n * GameServerApi - object-oriented interface\n * @export\n * @class GameServerApi\n * @extends {BaseAPI}\n */\ndeclare class GameServerApi extends BaseAPI {\n    /**\n     *\n     * @summary Ban player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {BanInputDTO} [banInputDTO] BanInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerBanPlayer(gameserverId: string, playerId: string, banInputDTO?: BanInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Create\n     * @param {GameServerCreateDTO} [gameServerCreateDTO] GameServerCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerCreate(gameServerCreateDTO?: GameServerCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Execute command\n     * @param {string} id\n     * @param {CommandExecuteInputDTO} [commandExecuteInputDTO] CommandExecuteInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerExecuteCommand(id: string, commandExecuteInputDTO?: CommandExecuteInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<CommandExecuteDTOAPI, any>>;\n    /**\n     *\n     * @summary Get installed modules\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerGetInstalledModules(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleInstallationOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Get module installation\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerGetModuleInstallation(gameserverId: string, moduleId: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleInstallationOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get players\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerGetPlayers(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOnGameserverOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get types\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerGetTypes(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerTypesOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Give item\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {GiveItemInputDTO} [giveItemInputDTO] GiveItemInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerGiveItem(gameserverId: string, playerId: string, giveItemInputDTO?: GiveItemInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Install module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {ModuleInstallDTO} [moduleInstallDTO] ModuleInstallDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerInstallModule(gameserverId: string, moduleId: string, moduleInstallDTO?: ModuleInstallDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleInstallationOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Kick player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {KickPlayerInputDTO} [kickPlayerInputDTO] KickPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerKickPlayer(gameserverId: string, playerId: string, kickPlayerInputDTO?: KickPlayerInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary List bans\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerListBans(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<BanOutputDTO, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {GameServerSearchInputDTO} [gameServerSearchInputDTO] GameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerSearch(gameServerSearchInputDTO?: GameServerSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Send message\n     * @param {string} id\n     * @param {MessageSendInputDTO} [messageSendInputDTO] MessageSendInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerSendMessage(id: string, messageSendInputDTO?: MessageSendInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Teleport player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {TeleportPlayerInputDTO} [teleportPlayerInputDTO] TeleportPlayerInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerTeleportPlayer(gameserverId: string, playerId: string, teleportPlayerInputDTO?: TeleportPlayerInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Test reachability\n     * @param {GameServerTestReachabilityInputDTO} [gameServerTestReachabilityInputDTO] GameServerTestReachabilityInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerTestReachability(gameServerTestReachabilityInputDTO?: GameServerTestReachabilityInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerTestReachabilityDTOAPI, any>>;\n    /**\n     *\n     * @summary Test reachability for id\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerTestReachabilityForId(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerTestReachabilityDTOAPI, any>>;\n    /**\n     *\n     * @summary Unban player\n     * @param {string} gameserverId\n     * @param {string} playerId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerUnbanPlayer(gameserverId: string, playerId: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Uninstall module\n     * @param {string} gameserverId\n     * @param {string} moduleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerUninstallModule(gameserverId: string, moduleId: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleInstallationOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {GameServerUpdateDTO} [gameServerUpdateDTO] GameServerUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof GameServerApi\n     */\n    gameServerControllerUpdate(id: string, gameServerUpdateDTO?: GameServerUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<GameServerOutputDTOAPI, any>>;\n}\n/**\n * HookApi - axios parameter creator\n * @export\n */\ndeclare const HookApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {HookCreateDTO} [hookCreateDTO] HookCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerCreate: (hookCreateDTO?: HookCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {HookSearchInputDTO} [hookSearchInputDTO] HookSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerSearch: (hookSearchInputDTO?: HookSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Trigger\n     * @param {HookTriggerDTO} [hookTriggerDTO] HookTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerTrigger: (hookTriggerDTO?: HookTriggerDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {HookUpdateDTO} [hookUpdateDTO] HookUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerUpdate: (id: string, hookUpdateDTO?: HookUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * HookApi - functional programming interface\n * @export\n */\ndeclare const HookApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {HookCreateDTO} [hookCreateDTO] HookCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerCreate(hookCreateDTO?: HookCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HookOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HookOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {HookSearchInputDTO} [hookSearchInputDTO] HookSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerSearch(hookSearchInputDTO?: HookSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HookOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Trigger\n     * @param {HookTriggerDTO} [hookTriggerDTO] HookTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerTrigger(hookTriggerDTO?: HookTriggerDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {HookUpdateDTO} [hookUpdateDTO] HookUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerUpdate(id: string, hookUpdateDTO?: HookUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HookOutputDTOAPI>>;\n};\n/**\n * HookApi - factory interface\n * @export\n */\ndeclare const HookApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {HookCreateDTO} [hookCreateDTO] HookCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerCreate(hookCreateDTO?: HookCreateDTO, options?: any): AxiosPromise<HookOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerGetOne(id: string, options?: any): AxiosPromise<HookOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {HookSearchInputDTO} [hookSearchInputDTO] HookSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerSearch(hookSearchInputDTO?: HookSearchInputDTO, options?: any): AxiosPromise<HookOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Trigger\n     * @param {HookTriggerDTO} [hookTriggerDTO] HookTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerTrigger(hookTriggerDTO?: HookTriggerDTO, options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {HookUpdateDTO} [hookUpdateDTO] HookUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    hookControllerUpdate(id: string, hookUpdateDTO?: HookUpdateDTO, options?: any): AxiosPromise<HookOutputDTOAPI>;\n};\n/**\n * HookApi - object-oriented interface\n * @export\n * @class HookApi\n * @extends {BaseAPI}\n */\ndeclare class HookApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {HookCreateDTO} [hookCreateDTO] HookCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerCreate(hookCreateDTO?: HookCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HookOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HookOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {HookSearchInputDTO} [hookSearchInputDTO] HookSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerSearch(hookSearchInputDTO?: HookSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HookOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Trigger\n     * @param {HookTriggerDTO} [hookTriggerDTO] HookTriggerDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerTrigger(hookTriggerDTO?: HookTriggerDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {HookUpdateDTO} [hookUpdateDTO] HookUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HookApi\n     */\n    hookControllerUpdate(id: string, hookUpdateDTO?: HookUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HookOutputDTOAPI, any>>;\n}\n/**\n * ItemApi - axios parameter creator\n * @export\n */\ndeclare const ItemApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {ItemCreateDTO} [itemCreateDTO] ItemCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerCreate: (itemCreateDTO?: ItemCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerDelete: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerFindOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {ItemSearchInputDTO} [itemSearchInputDTO] ItemSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerSearch: (itemSearchInputDTO?: ItemSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ItemUpdateDTO} [itemUpdateDTO] ItemUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerUpdate: (id: string, itemUpdateDTO?: ItemUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * ItemApi - functional programming interface\n * @export\n */\ndeclare const ItemApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {ItemCreateDTO} [itemCreateDTO] ItemCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerCreate(itemCreateDTO?: ItemCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemOutputDTOAPI>>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerDelete(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemOutputDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {ItemSearchInputDTO} [itemSearchInputDTO] ItemSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerSearch(itemSearchInputDTO?: ItemSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ItemUpdateDTO} [itemUpdateDTO] ItemUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerUpdate(id: string, itemUpdateDTO?: ItemUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ItemOutputDTOAPI>>;\n};\n/**\n * ItemApi - factory interface\n * @export\n */\ndeclare const ItemApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {ItemCreateDTO} [itemCreateDTO] ItemCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerCreate(itemCreateDTO?: ItemCreateDTO, options?: any): AxiosPromise<ItemOutputDTOAPI>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerDelete(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerFindOne(id: string, options?: any): AxiosPromise<ItemOutputDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {ItemSearchInputDTO} [itemSearchInputDTO] ItemSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerSearch(itemSearchInputDTO?: ItemSearchInputDTO, options?: any): AxiosPromise<ItemOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ItemUpdateDTO} [itemUpdateDTO] ItemUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    itemControllerUpdate(id: string, itemUpdateDTO?: ItemUpdateDTO, options?: any): AxiosPromise<ItemOutputDTOAPI>;\n};\n/**\n * ItemApi - object-oriented interface\n * @export\n * @class ItemApi\n * @extends {BaseAPI}\n */\ndeclare class ItemApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {ItemCreateDTO} [itemCreateDTO] ItemCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ItemApi\n     */\n    itemControllerCreate(itemCreateDTO?: ItemCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ItemOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ItemApi\n     */\n    itemControllerDelete(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ItemApi\n     */\n    itemControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ItemOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {ItemSearchInputDTO} [itemSearchInputDTO] ItemSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ItemApi\n     */\n    itemControllerSearch(itemSearchInputDTO?: ItemSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ItemOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ItemUpdateDTO} [itemUpdateDTO] ItemUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ItemApi\n     */\n    itemControllerUpdate(id: string, itemUpdateDTO?: ItemUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ItemOutputDTOAPI, any>>;\n}\n/**\n * MetaApi - axios parameter creator\n * @export\n */\ndeclare const MetaApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get health\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetHealth: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get metrics\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetMetrics: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get open api\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApi: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get open api html\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApiHtml: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get readiness\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetReadiness: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * MetaApi - functional programming interface\n * @export\n */\ndeclare const MetaApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get health\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetHealth(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HealthOutputDTO>>;\n    /**\n     *\n     * @summary Get metrics\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetMetrics(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Get open api\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApi(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Get open api html\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApiHtml(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;\n    /**\n     *\n     * @summary Get readiness\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetReadiness(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HealthOutputDTO>>;\n};\n/**\n * MetaApi - factory interface\n * @export\n */\ndeclare const MetaApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Get health\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetHealth(options?: any): AxiosPromise<HealthOutputDTO>;\n    /**\n     *\n     * @summary Get metrics\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetMetrics(options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Get open api\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApi(options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Get open api html\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetOpenApiHtml(options?: any): AxiosPromise<void>;\n    /**\n     *\n     * @summary Get readiness\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    metaGetReadiness(options?: any): AxiosPromise<HealthOutputDTO>;\n};\n/**\n * MetaApi - object-oriented interface\n * @export\n * @class MetaApi\n * @extends {BaseAPI}\n */\ndeclare class MetaApi extends BaseAPI {\n    /**\n     *\n     * @summary Get health\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetHealth(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HealthOutputDTO, any>>;\n    /**\n     *\n     * @summary Get metrics\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetMetrics(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Get open api\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetOpenApi(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Get open api html\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetOpenApiHtml(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<void, any>>;\n    /**\n     *\n     * @summary Get readiness\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof MetaApi\n     */\n    metaGetReadiness(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<HealthOutputDTO, any>>;\n}\n/**\n * ModuleApi - axios parameter creator\n * @export\n */\ndeclare const ModuleApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {ModuleCreateDTO} [moduleCreateDTO] ModuleCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerCreate: (moduleCreateDTO?: ModuleCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {ModuleSearchInputDTO} [moduleSearchInputDTO] ModuleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerSearch: (moduleSearchInputDTO?: ModuleSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ModuleUpdateDTO} [moduleUpdateDTO] ModuleUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerUpdate: (id: string, moduleUpdateDTO?: ModuleUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * ModuleApi - functional programming interface\n * @export\n */\ndeclare const ModuleApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {ModuleCreateDTO} [moduleCreateDTO] ModuleCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerCreate(moduleCreateDTO?: ModuleCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {ModuleSearchInputDTO} [moduleSearchInputDTO] ModuleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerSearch(moduleSearchInputDTO?: ModuleSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ModuleUpdateDTO} [moduleUpdateDTO] ModuleUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerUpdate(id: string, moduleUpdateDTO?: ModuleUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModuleOutputDTOAPI>>;\n};\n/**\n * ModuleApi - factory interface\n * @export\n */\ndeclare const ModuleApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {ModuleCreateDTO} [moduleCreateDTO] ModuleCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerCreate(moduleCreateDTO?: ModuleCreateDTO, options?: any): AxiosPromise<ModuleOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerGetOne(id: string, options?: any): AxiosPromise<ModuleOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {ModuleSearchInputDTO} [moduleSearchInputDTO] ModuleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerSearch(moduleSearchInputDTO?: ModuleSearchInputDTO, options?: any): AxiosPromise<ModuleOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ModuleUpdateDTO} [moduleUpdateDTO] ModuleUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    moduleControllerUpdate(id: string, moduleUpdateDTO?: ModuleUpdateDTO, options?: any): AxiosPromise<ModuleOutputDTOAPI>;\n};\n/**\n * ModuleApi - object-oriented interface\n * @export\n * @class ModuleApi\n * @extends {BaseAPI}\n */\ndeclare class ModuleApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {ModuleCreateDTO} [moduleCreateDTO] ModuleCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerCreate(moduleCreateDTO?: ModuleCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {ModuleSearchInputDTO} [moduleSearchInputDTO] ModuleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerSearch(moduleSearchInputDTO?: ModuleSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {ModuleUpdateDTO} [moduleUpdateDTO] ModuleUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof ModuleApi\n     */\n    moduleControllerUpdate(id: string, moduleUpdateDTO?: ModuleUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<ModuleOutputDTOAPI, any>>;\n}\n/**\n * PlayerApi - axios parameter creator\n * @export\n */\ndeclare const PlayerApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {PlayerRoleAssignChangeDTO} [playerRoleAssignChangeDTO] PlayerRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerAssignRole: (id: string, roleId: string, playerRoleAssignChangeDTO?: PlayerRoleAssignChangeDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {PlayerRoleAssignChangeDTO} [playerRoleAssignChangeDTO] PlayerRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerRemoveRole: (id: string, roleId: string, playerRoleAssignChangeDTO?: PlayerRoleAssignChangeDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerSearchInputDTO} [playerSearchInputDTO] PlayerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerSearch: (playerSearchInputDTO?: PlayerSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * PlayerApi - functional programming interface\n * @export\n */\ndeclare const PlayerApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {PlayerRoleAssignChangeDTO} [playerRoleAssignChangeDTO] PlayerRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerAssignRole(id: string, roleId: string, playerRoleAssignChangeDTO?: PlayerRoleAssignChangeDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOutputWithRolesDTOAPI>>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {PlayerRoleAssignChangeDTO} [playerRoleAssignChangeDTO] PlayerRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerRemoveRole(id: string, roleId: string, playerRoleAssignChangeDTO?: PlayerRoleAssignChangeDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerSearchInputDTO} [playerSearchInputDTO] PlayerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerSearch(playerSearchInputDTO?: PlayerSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOutputArrayDTOAPI>>;\n};\n/**\n * PlayerApi - factory interface\n * @export\n */\ndeclare const PlayerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {PlayerRoleAssignChangeDTO} [playerRoleAssignChangeDTO] PlayerRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerAssignRole(id: string, roleId: string, playerRoleAssignChangeDTO?: PlayerRoleAssignChangeDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerGetOne(id: string, options?: any): AxiosPromise<PlayerOutputWithRolesDTOAPI>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {PlayerRoleAssignChangeDTO} [playerRoleAssignChangeDTO] PlayerRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerRemoveRole(id: string, roleId: string, playerRoleAssignChangeDTO?: PlayerRoleAssignChangeDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerSearchInputDTO} [playerSearchInputDTO] PlayerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerControllerSearch(playerSearchInputDTO?: PlayerSearchInputDTO, options?: any): AxiosPromise<PlayerOutputArrayDTOAPI>;\n};\n/**\n * PlayerApi - object-oriented interface\n * @export\n * @class PlayerApi\n * @extends {BaseAPI}\n */\ndeclare class PlayerApi extends BaseAPI {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {PlayerRoleAssignChangeDTO} [playerRoleAssignChangeDTO] PlayerRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerApi\n     */\n    playerControllerAssignRole(id: string, roleId: string, playerRoleAssignChangeDTO?: PlayerRoleAssignChangeDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerApi\n     */\n    playerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOutputWithRolesDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {PlayerRoleAssignChangeDTO} [playerRoleAssignChangeDTO] PlayerRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerApi\n     */\n    playerControllerRemoveRole(id: string, roleId: string, playerRoleAssignChangeDTO?: PlayerRoleAssignChangeDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerSearchInputDTO} [playerSearchInputDTO] PlayerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerApi\n     */\n    playerControllerSearch(playerSearchInputDTO?: PlayerSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOutputArrayDTOAPI, any>>;\n}\n/**\n * PlayerOnGameServerApi - axios parameter creator\n * @export\n */\ndeclare const PlayerOnGameServerApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Add currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerAddCurrency: (id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Deduct currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerDeductCurrency: (id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerOnGameServerSearchInputDTO} [playerOnGameServerSearchInputDTO] PlayerOnGameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerSearch: (playerOnGameServerSearchInputDTO?: PlayerOnGameServerSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Set currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerSetCurrency: (id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Transact between players\n     * @param {string} sender\n     * @param {string} receiver\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerTransactBetweenPlayers: (sender: string, receiver: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * PlayerOnGameServerApi - functional programming interface\n * @export\n */\ndeclare const PlayerOnGameServerApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Add currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerAddCurrency(id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOnGameserverOutputDTOAPI>>;\n    /**\n     *\n     * @summary Deduct currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerDeductCurrency(id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOnGameserverOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOnGameserverOutputDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerOnGameServerSearchInputDTO} [playerOnGameServerSearchInputDTO] PlayerOnGameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerSearch(playerOnGameServerSearchInputDTO?: PlayerOnGameServerSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOnGameserverOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Set currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerSetCurrency(id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOnGameserverOutputDTOAPI>>;\n    /**\n     *\n     * @summary Transact between players\n     * @param {string} sender\n     * @param {string} receiver\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerTransactBetweenPlayers(sender: string, receiver: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PlayerOnGameserverOutputDTOAPI>>;\n};\n/**\n * PlayerOnGameServerApi - factory interface\n * @export\n */\ndeclare const PlayerOnGameServerApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Add currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerAddCurrency(id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: any): AxiosPromise<PlayerOnGameserverOutputDTOAPI>;\n    /**\n     *\n     * @summary Deduct currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerDeductCurrency(id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: any): AxiosPromise<PlayerOnGameserverOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerGetOne(id: string, options?: any): AxiosPromise<PlayerOnGameserverOutputDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerOnGameServerSearchInputDTO} [playerOnGameServerSearchInputDTO] PlayerOnGameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerSearch(playerOnGameServerSearchInputDTO?: PlayerOnGameServerSearchInputDTO, options?: any): AxiosPromise<PlayerOnGameserverOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Set currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerSetCurrency(id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: any): AxiosPromise<PlayerOnGameserverOutputDTOAPI>;\n    /**\n     *\n     * @summary Transact between players\n     * @param {string} sender\n     * @param {string} receiver\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    playerOnGameServerControllerTransactBetweenPlayers(sender: string, receiver: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: any): AxiosPromise<PlayerOnGameserverOutputDTOAPI>;\n};\n/**\n * PlayerOnGameServerApi - object-oriented interface\n * @export\n * @class PlayerOnGameServerApi\n * @extends {BaseAPI}\n */\ndeclare class PlayerOnGameServerApi extends BaseAPI {\n    /**\n     *\n     * @summary Add currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerOnGameServerApi\n     */\n    playerOnGameServerControllerAddCurrency(id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOnGameserverOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Deduct currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerOnGameServerApi\n     */\n    playerOnGameServerControllerDeductCurrency(id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOnGameserverOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerOnGameServerApi\n     */\n    playerOnGameServerControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOnGameserverOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {PlayerOnGameServerSearchInputDTO} [playerOnGameServerSearchInputDTO] PlayerOnGameServerSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerOnGameServerApi\n     */\n    playerOnGameServerControllerSearch(playerOnGameServerSearchInputDTO?: PlayerOnGameServerSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOnGameserverOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Set currency\n     * @param {string} id\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerOnGameServerApi\n     */\n    playerOnGameServerControllerSetCurrency(id: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOnGameserverOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Transact between players\n     * @param {string} sender\n     * @param {string} receiver\n     * @param {PlayerOnGameServerSetCurrencyInputDTO} [playerOnGameServerSetCurrencyInputDTO] PlayerOnGameServerSetCurrencyInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof PlayerOnGameServerApi\n     */\n    playerOnGameServerControllerTransactBetweenPlayers(sender: string, receiver: string, playerOnGameServerSetCurrencyInputDTO?: PlayerOnGameServerSetCurrencyInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PlayerOnGameserverOutputDTOAPI, any>>;\n}\n/**\n * RoleApi - axios parameter creator\n * @export\n */\ndeclare const RoleApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {RoleCreateInputDTO} [roleCreateInputDTO] RoleCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerCreate: (roleCreateInputDTO?: RoleCreateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get permissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerGetPermissions: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {RoleSearchInputDTO} [roleSearchInputDTO] RoleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerSearch: (roleSearchInputDTO?: RoleSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {RoleUpdateInputDTO} [roleUpdateInputDTO] RoleUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerUpdate: (id: string, roleUpdateInputDTO?: RoleUpdateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * RoleApi - functional programming interface\n * @export\n */\ndeclare const RoleApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {RoleCreateInputDTO} [roleCreateInputDTO] RoleCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerCreate(roleCreateInputDTO?: RoleCreateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get permissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerGetPermissions(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PermissionOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {RoleSearchInputDTO} [roleSearchInputDTO] RoleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerSearch(roleSearchInputDTO?: RoleSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {RoleUpdateInputDTO} [roleUpdateInputDTO] RoleUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerUpdate(id: string, roleUpdateInputDTO?: RoleUpdateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoleOutputDTOAPI>>;\n};\n/**\n * RoleApi - factory interface\n * @export\n */\ndeclare const RoleApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {RoleCreateInputDTO} [roleCreateInputDTO] RoleCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerCreate(roleCreateInputDTO?: RoleCreateInputDTO, options?: any): AxiosPromise<RoleOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerGetOne(id: string, options?: any): AxiosPromise<RoleOutputDTOAPI>;\n    /**\n     *\n     * @summary Get permissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerGetPermissions(options?: any): AxiosPromise<PermissionOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {RoleSearchInputDTO} [roleSearchInputDTO] RoleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerSearch(roleSearchInputDTO?: RoleSearchInputDTO, options?: any): AxiosPromise<RoleOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {RoleUpdateInputDTO} [roleUpdateInputDTO] RoleUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    roleControllerUpdate(id: string, roleUpdateInputDTO?: RoleUpdateInputDTO, options?: any): AxiosPromise<RoleOutputDTOAPI>;\n};\n/**\n * RoleApi - object-oriented interface\n * @export\n * @class RoleApi\n * @extends {BaseAPI}\n */\ndeclare class RoleApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {RoleCreateInputDTO} [roleCreateInputDTO] RoleCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerCreate(roleCreateInputDTO?: RoleCreateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<RoleOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<RoleOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get permissions\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerGetPermissions(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<PermissionOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {RoleSearchInputDTO} [roleSearchInputDTO] RoleSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerSearch(roleSearchInputDTO?: RoleSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<RoleOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {RoleUpdateInputDTO} [roleUpdateInputDTO] RoleUpdateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof RoleApi\n     */\n    roleControllerUpdate(id: string, roleUpdateInputDTO?: RoleUpdateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<RoleOutputDTOAPI, any>>;\n}\n/**\n * SettingsApi - axios parameter creator\n * @export\n */\ndeclare const SettingsApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get\n     * @param {Array<'commandPrefix' | 'serverChatName' | 'economyEnabled' | 'currencyName'>} [keys]\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGet: (keys?: Array<'commandPrefix' | 'serverChatName' | 'economyEnabled' | 'currencyName'>, gameServerId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} key\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGetOne: (key: string, gameServerId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Set\n     * @param {string} key\n     * @param {SettingsSetDTO} [settingsSetDTO] SettingsSetDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerSet: (key: string, settingsSetDTO?: SettingsSetDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * SettingsApi - functional programming interface\n * @export\n */\ndeclare const SettingsApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Get\n     * @param {Array<'commandPrefix' | 'serverChatName' | 'economyEnabled' | 'currencyName'>} [keys]\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGet(keys?: Array<'commandPrefix' | 'serverChatName' | 'economyEnabled' | 'currencyName'>, gameServerId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SettingsOutputObjectDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} key\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGetOne(key: string, gameServerId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SettingsOutputDTOAPI>>;\n    /**\n     *\n     * @summary Set\n     * @param {string} key\n     * @param {SettingsSetDTO} [settingsSetDTO] SettingsSetDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerSet(key: string, settingsSetDTO?: SettingsSetDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SettingsOutputDTOAPI>>;\n};\n/**\n * SettingsApi - factory interface\n * @export\n */\ndeclare const SettingsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Get\n     * @param {Array<'commandPrefix' | 'serverChatName' | 'economyEnabled' | 'currencyName'>} [keys]\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGet(keys?: Array<'commandPrefix' | 'serverChatName' | 'economyEnabled' | 'currencyName'>, gameServerId?: string, options?: any): AxiosPromise<SettingsOutputObjectDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} key\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerGetOne(key: string, gameServerId?: string, options?: any): AxiosPromise<SettingsOutputDTOAPI>;\n    /**\n     *\n     * @summary Set\n     * @param {string} key\n     * @param {SettingsSetDTO} [settingsSetDTO] SettingsSetDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    settingsControllerSet(key: string, settingsSetDTO?: SettingsSetDTO, options?: any): AxiosPromise<SettingsOutputDTOAPI>;\n};\n/**\n * SettingsApi - object-oriented interface\n * @export\n * @class SettingsApi\n * @extends {BaseAPI}\n */\ndeclare class SettingsApi extends BaseAPI {\n    /**\n     *\n     * @summary Get\n     * @param {Array<'commandPrefix' | 'serverChatName' | 'economyEnabled' | 'currencyName'>} [keys]\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    settingsControllerGet(keys?: Array<'commandPrefix' | 'serverChatName' | 'economyEnabled' | 'currencyName'>, gameServerId?: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<SettingsOutputObjectDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} key\n     * @param {string} [gameServerId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    settingsControllerGetOne(key: string, gameServerId?: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<SettingsOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Set\n     * @param {string} key\n     * @param {SettingsSetDTO} [settingsSetDTO] SettingsSetDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SettingsApi\n     */\n    settingsControllerSet(key: string, settingsSetDTO?: SettingsSetDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<SettingsOutputDTOAPI, any>>;\n}\n/**\n * UserApi - axios parameter creator\n * @export\n */\ndeclare const UserApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {UserRoleAssignChangeDTO} [userRoleAssignChangeDTO] UserRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerAssignRole: (id: string, roleId: string, userRoleAssignChangeDTO?: UserRoleAssignChangeDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Create\n     * @param {UserCreateInputDTO} [userCreateInputDTO] UserCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerCreate: (userCreateInputDTO?: UserCreateInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerGetOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Invite\n     * @param {InviteCreateDTO} [inviteCreateDTO] InviteCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerInvite: (inviteCreateDTO?: InviteCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Login\n     * @param {LoginDTO} [loginDTO] LoginDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogin: (loginDTO?: LoginDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogout: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerMe: (options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemove: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemoveRole: (id: string, roleId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {UserSearchInputDTO} [userSearchInputDTO] UserSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerSearch: (userSearchInputDTO?: UserSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {UserUpdateDTO} [userUpdateDTO] UserUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerUpdate: (id: string, userUpdateDTO?: UserUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * UserApi - functional programming interface\n * @export\n */\ndeclare const UserApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {UserRoleAssignChangeDTO} [userRoleAssignChangeDTO] UserRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerAssignRole(id: string, roleId: string, userRoleAssignChangeDTO?: UserRoleAssignChangeDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Create\n     * @param {UserCreateInputDTO} [userCreateInputDTO] UserCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerCreate(userCreateInputDTO?: UserCreateInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputDTOAPI>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputDTOAPI>>;\n    /**\n     *\n     * @summary Invite\n     * @param {InviteCreateDTO} [inviteCreateDTO] InviteCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerInvite(inviteCreateDTO?: InviteCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Login\n     * @param {LoginDTO} [loginDTO] LoginDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogin(loginDTO?: LoginDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LoginOutputDTOAPI>>;\n    /**\n     *\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogout(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerMe(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputDTOAPI>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemoveRole(id: string, roleId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<APIOutput>>;\n    /**\n     *\n     * @summary Search\n     * @param {UserSearchInputDTO} [userSearchInputDTO] UserSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerSearch(userSearchInputDTO?: UserSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {UserUpdateDTO} [userUpdateDTO] UserUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerUpdate(id: string, userUpdateDTO?: UserUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserOutputDTOAPI>>;\n};\n/**\n * UserApi - factory interface\n * @export\n */\ndeclare const UserApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {UserRoleAssignChangeDTO} [userRoleAssignChangeDTO] UserRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerAssignRole(id: string, roleId: string, userRoleAssignChangeDTO?: UserRoleAssignChangeDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Create\n     * @param {UserCreateInputDTO} [userCreateInputDTO] UserCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerCreate(userCreateInputDTO?: UserCreateInputDTO, options?: any): AxiosPromise<UserOutputDTOAPI>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerGetOne(id: string, options?: any): AxiosPromise<UserOutputDTOAPI>;\n    /**\n     *\n     * @summary Invite\n     * @param {InviteCreateDTO} [inviteCreateDTO] InviteCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerInvite(inviteCreateDTO?: InviteCreateDTO, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Login\n     * @param {LoginDTO} [loginDTO] LoginDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogin(loginDTO?: LoginDTO, options?: any): AxiosPromise<LoginOutputDTOAPI>;\n    /**\n     *\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerLogout(options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerMe(options?: any): AxiosPromise<UserOutputDTOAPI>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemove(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerRemoveRole(id: string, roleId: string, options?: any): AxiosPromise<APIOutput>;\n    /**\n     *\n     * @summary Search\n     * @param {UserSearchInputDTO} [userSearchInputDTO] UserSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerSearch(userSearchInputDTO?: UserSearchInputDTO, options?: any): AxiosPromise<UserOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {UserUpdateDTO} [userUpdateDTO] UserUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    userControllerUpdate(id: string, userUpdateDTO?: UserUpdateDTO, options?: any): AxiosPromise<UserOutputDTOAPI>;\n};\n/**\n * UserApi - object-oriented interface\n * @export\n * @class UserApi\n * @extends {BaseAPI}\n */\ndeclare class UserApi extends BaseAPI {\n    /**\n     *\n     * @summary Assign role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {UserRoleAssignChangeDTO} [userRoleAssignChangeDTO] UserRoleAssignChangeDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerAssignRole(id: string, roleId: string, userRoleAssignChangeDTO?: UserRoleAssignChangeDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Create\n     * @param {UserCreateInputDTO} [userCreateInputDTO] UserCreateInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerCreate(userCreateInputDTO?: UserCreateInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Get one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerGetOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Invite\n     * @param {InviteCreateDTO} [inviteCreateDTO] InviteCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerInvite(inviteCreateDTO?: InviteCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Login\n     * @param {LoginDTO} [loginDTO] LoginDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerLogin(loginDTO?: LoginDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<LoginOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Logout\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerLogout(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Me\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerMe(options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerRemove(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Remove role\n     * @param {string} id\n     * @param {string} roleId\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerRemoveRole(id: string, roleId: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<APIOutput, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {UserSearchInputDTO} [userSearchInputDTO] UserSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerSearch(userSearchInputDTO?: UserSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {UserUpdateDTO} [userUpdateDTO] UserUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    userControllerUpdate(id: string, userUpdateDTO?: UserUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<UserOutputDTOAPI, any>>;\n}\n/**\n * VariableApi - axios parameter creator\n * @export\n */\ndeclare const VariableApiAxiosParamCreator: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {VariableCreateDTO} [variableCreateDTO] VariableCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerCreate: (variableCreateDTO?: VariableCreateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerDelete: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerFindOne: (id: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Search\n     * @param {VariableSearchInputDTO} [variableSearchInputDTO] VariableSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerSearch: (variableSearchInputDTO?: VariableSearchInputDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {VariableUpdateDTO} [variableUpdateDTO] VariableUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerUpdate: (id: string, variableUpdateDTO?: VariableUpdateDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;\n};\n/**\n * VariableApi - functional programming interface\n * @export\n */\ndeclare const VariableApiFp: (configuration?: Configuration) => {\n    /**\n     *\n     * @summary Create\n     * @param {VariableCreateDTO} [variableCreateDTO] VariableCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerCreate(variableCreateDTO?: VariableCreateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOutputDTOAPI>>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerDelete(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdUuidDTOAPI>>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOutputDTOAPI>>;\n    /**\n     *\n     * @summary Search\n     * @param {VariableSearchInputDTO} [variableSearchInputDTO] VariableSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerSearch(variableSearchInputDTO?: VariableSearchInputDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOutputArrayDTOAPI>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {VariableUpdateDTO} [variableUpdateDTO] VariableUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerUpdate(id: string, variableUpdateDTO?: VariableUpdateDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOutputDTOAPI>>;\n};\n/**\n * VariableApi - factory interface\n * @export\n */\ndeclare const VariableApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {\n    /**\n     *\n     * @summary Create\n     * @param {VariableCreateDTO} [variableCreateDTO] VariableCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerCreate(variableCreateDTO?: VariableCreateDTO, options?: any): AxiosPromise<VariableOutputDTOAPI>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerDelete(id: string, options?: any): AxiosPromise<IdUuidDTOAPI>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerFindOne(id: string, options?: any): AxiosPromise<VariableOutputDTOAPI>;\n    /**\n     *\n     * @summary Search\n     * @param {VariableSearchInputDTO} [variableSearchInputDTO] VariableSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerSearch(variableSearchInputDTO?: VariableSearchInputDTO, options?: any): AxiosPromise<VariableOutputArrayDTOAPI>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {VariableUpdateDTO} [variableUpdateDTO] VariableUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     */\n    variableControllerUpdate(id: string, variableUpdateDTO?: VariableUpdateDTO, options?: any): AxiosPromise<VariableOutputDTOAPI>;\n};\n/**\n * VariableApi - object-oriented interface\n * @export\n * @class VariableApi\n * @extends {BaseAPI}\n */\ndeclare class VariableApi extends BaseAPI {\n    /**\n     *\n     * @summary Create\n     * @param {VariableCreateDTO} [variableCreateDTO] VariableCreateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerCreate(variableCreateDTO?: VariableCreateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<VariableOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Delete\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerDelete(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<IdUuidDTOAPI, any>>;\n    /**\n     *\n     * @summary Find one\n     * @param {string} id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<VariableOutputDTOAPI, any>>;\n    /**\n     *\n     * @summary Search\n     * @param {VariableSearchInputDTO} [variableSearchInputDTO] VariableSearchInputDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerSearch(variableSearchInputDTO?: VariableSearchInputDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<VariableOutputArrayDTOAPI, any>>;\n    /**\n     *\n     * @summary Update\n     * @param {string} id\n     * @param {VariableUpdateDTO} [variableUpdateDTO] VariableUpdateDTO\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof VariableApi\n     */\n    variableControllerUpdate(id: string, variableUpdateDTO?: VariableUpdateDTO, options?: AxiosRequestConfig): Promise<import(\"axios\").AxiosResponse<VariableOutputDTOAPI, any>>;\n}\n","file://node_modules/@takaro/apiclient/dist/generated/base.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\ndeclare const BASE_PATH: string;\n/**\n *\n * @export\n */\ndeclare const COLLECTION_FORMATS: {\n    csv: string;\n    ssv: string;\n    tsv: string;\n    pipes: string;\n};\n/**\n *\n * @export\n * @interface RequestArgs\n */\ninterface RequestArgs {\n    url: string;\n    options: AxiosRequestConfig;\n}\n/**\n *\n * @export\n * @class BaseAPI\n */\ndeclare class BaseAPI {\n    protected basePath: string;\n    protected axios: AxiosInstance;\n    protected configuration: Configuration | undefined;\n    constructor(configuration?: Configuration, basePath?: string, axios?: AxiosInstance);\n}\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\ndeclare class RequiredError extends Error {\n    field: string;\n    name: 'RequiredError';\n    constructor(field: string, msg?: string);\n}\n","file://node_modules/@takaro/apiclient/dist/generated/common.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/// <reference types=\"node\" resolution-mode=\"require\"/>\n/**\n *\n * @export\n */\ndeclare const DUMMY_BASE_URL = \"https://example.com\";\n/**\n *\n * @throws {RequiredError}\n * @export\n */\ndeclare const assertParamExists: (functionName: string, paramName: string, paramValue: unknown) => void;\n/**\n *\n * @export\n */\ndeclare const setApiKeyToObject: (object: any, keyParamName: string, configuration?: Configuration) => Promise<void>;\n/**\n *\n * @export\n */\ndeclare const setBasicAuthToObject: (object: any, configuration?: Configuration) => void;\n/**\n *\n * @export\n */\ndeclare const setBearerAuthToObject: (object: any, configuration?: Configuration) => Promise<void>;\n/**\n *\n * @export\n */\ndeclare const setOAuthToObject: (object: any, name: string, scopes: string[], configuration?: Configuration) => Promise<void>;\n/**\n *\n * @export\n */\ndeclare const setSearchParams: (url: URL, ...objects: any[]) => void;\n/**\n *\n * @export\n */\ndeclare const serializeDataIfNeeded: (value: any, requestOptions: any, configuration?: Configuration) => any;\n/**\n *\n * @export\n */\ndeclare const toPathString: (url: URL) => string;\n/**\n *\n * @export\n */\ndeclare const createRequestFunction: (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) => <T = unknown, R = AxiosResponse<T, any>>(axios?: AxiosInstance, basePath?: string) => Promise<R>;\n","file://node_modules/@takaro/apiclient/dist/generated/configuration.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\ninterface ConfigurationParameters {\n    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);\n    username?: string;\n    password?: string;\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);\n    basePath?: string;\n    baseOptions?: any;\n    formDataCtor?: new () => any;\n}\ndeclare class Configuration {\n    /**\n     * parameter for apiKey security\n     * @param name security name\n     * @memberof Configuration\n     */\n    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);\n    /**\n     * parameter for basic security\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    username?: string;\n    /**\n     * parameter for basic security\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    password?: string;\n    /**\n     * parameter for oauth2 security\n     * @param name security name\n     * @param scopes oauth2 scope\n     * @memberof Configuration\n     */\n    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);\n    /**\n     * override base path\n     *\n     * @type {string}\n     * @memberof Configuration\n     */\n    basePath?: string;\n    /**\n     * base options for axios calls\n     *\n     * @type {any}\n     * @memberof Configuration\n     */\n    baseOptions?: any;\n    /**\n     * The FormData constructor that will be used to create multipart form data\n     * requests. You can inject this here so that execution environments that\n     * do not support the FormData class can still run the generated client.\n     *\n     * @type {new () => FormData}\n     */\n    formDataCtor?: new () => any;\n    constructor(param?: ConfigurationParameters);\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    isJsonMime(mime: string): boolean;\n}\n","file://node_modules/@takaro/apiclient/dist/generated/index.d.ts":"/**\n *\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n* from './api.js';\n* from './configuration.js';\n","file://node_modules/@takaro/apiclient/dist/lib/adminClient.d.ts":"interface IAdminApiClientConfig extends IBaseApiClientConfig {\n    auth: {\n        clientId: string;\n        clientSecret: string;\n    };\n    OAuth2URL: string;\n}\ndeclare class AdminClient extends BaseApiClient<IAdminApiClientConfig> {\n    private cachedIssuer;\n    private cachedClient;\n    private token;\n    constructor(config: IAdminApiClientConfig);\n    private getIssuer;\n    getOidcToken(): Promise<TokenSet>;\n    private addAuthInterceptor;\n    get domain(): DomainApi;\n}\n","file://node_modules/@takaro/apiclient/dist/lib/baseClient.d.ts":"interface IBaseApiClientConfig {\n    url: string;\n    log?: Logger | false;\n}\ninterface Logger {\n    info: (msg: string, meta?: unknown) => void;\n    warn: (msg: string, meta?: unknown) => void;\n    error: (msg: string, meta?: unknown) => void;\n    debug: (msg: string, meta?: unknown) => void;\n}\ndeclare class BaseApiClient<T extends IBaseApiClientConfig> {\n    protected readonly config: T;\n    protected axios: AxiosInstance;\n    protected log: Logger;\n    constructor(config: T);\n    isJsonMime(mime: string): boolean;\n    private addLoggers;\n    /**\n     * Wait until the API reports that it is healthy\n     * @param timeout in milliseconds\n     */\n    waitUntilHealthy(timeout?: number): Promise<void>;\n    get meta(): MetaApi;\n}\n{};\n","file://node_modules/@takaro/apiclient/dist/lib/client.d.ts":"interface IApiClientConfig extends IBaseApiClientConfig {\n    auth: {\n        username?: string;\n        password?: string;\n        token?: string;\n    };\n}\ndeclare class Client extends BaseApiClient<IApiClientConfig> {\n    token: string | null;\n    constructor(config: IApiClientConfig);\n    set username(username: string);\n    set password(password: string);\n    login(): Promise<string>;\n    logout(): void;\n    permissionCodesToInputs(permissions: string[]): Promise<{\n        permissionId: string;\n    }[]>;\n    get user(): UserApi;\n    get role(): RoleApi;\n    get gameserver(): GameServerApi;\n    get cronjob(): CronJobApi;\n    get function(): FunctionApi;\n    get module(): ModuleApi;\n    get hook(): HookApi;\n    get command(): CommandApi;\n    get player(): PlayerApi;\n    get settings(): SettingsApi;\n    get variable(): VariableApi;\n    get discord(): DiscordApi;\n    get event(): EventApi;\n    get playerOnGameserver(): PlayerOnGameServerApi;\n}\n","file://node_modules/@takaro/apiclient/dist/main.d.ts":"{ AxiosResponse } from 'axios';\n{ isAxiosError } from 'axios';\n{ AdminClient } from './lib/adminClient.js';\n{ Client } from './lib/client.js';\ntype ITakaroAPIAxiosResponse<T> = AxiosResponse<T>;\n* from './generated/api.js';\n","file://node_modules/@takaro/config/package.json":"{\"name\":\"@takaro/config\",\"types\":\"dist/main.d.ts\"}","file://node_modules/@takaro/config/dist/main.d.ts":"declare enum EXECUTION_MODE {\n    LOCAL = \"local\",\n    LAMBDA = \"lambda\"\n}\ninterface IBaseConfig {\n    app: {\n        name: string;\n    };\n    mode: 'development' | 'production' | 'test';\n    functions: {\n        executionMode: EXECUTION_MODE;\n    };\n}\ndeclare const baseConfigConvict: Schema<IBaseConfig>;\ndeclare class Config<T extends IBaseConfig> {\n    _config: convict.Config<T>;\n    constructor(valuesArray?: Schema<Partial<T>>[]);\n    get<K extends Path<T>>(arg: K): K extends null | undefined ? T : K extends Path<T> ? PathValue<T, K> : never;\n    load(data: Partial<T>): void;\n    validate(): void;\n}\n","file://node_modules/axios/package.json":"{\"name\":\"axios\",\"types\":\"./index.d.ts\"}","file://node_modules/axios/index.d.ts":"// TypeScript Version: 4.7\ntype AxiosHeaderValue = AxiosHeaders | string | string[] | number | boolean | null;\n\ninterface RawAxiosHeaders {\n  [key: string]: AxiosHeaderValue;\n}\n\ntype MethodsHeaders = Partial<{\n  [Key in Method as Lowercase<Key>]: AxiosHeaders;\n} & {common: AxiosHeaders}>;\n\ntype AxiosHeaderMatcher = (this: AxiosHeaders, value: string, name: string, headers: RawAxiosHeaders) => boolean;\n\nclass AxiosHeaders {\n  constructor(\n      headers?: RawAxiosHeaders | AxiosHeaders\n  );\n\n  [key: string]: any;\n\n  set(headerName?: string, value?: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\n  set(headers?: RawAxiosHeaders | AxiosHeaders, rewrite?: boolean): AxiosHeaders;\n\n  get(headerName: string, parser: RegExp): RegExpExecArray | null;\n  get(headerName: string, matcher?: true | AxiosHeaderMatcher): AxiosHeaderValue;\n\n  has(header: string, matcher?: true | AxiosHeaderMatcher): boolean;\n\n  delete(header: string | string[], matcher?: AxiosHeaderMatcher): boolean;\n\n  clear(matcher?: AxiosHeaderMatcher): boolean;\n\n  normalize(format: boolean): AxiosHeaders;\n\n  concat(...targets: Array<AxiosHeaders | RawAxiosHeaders | string | undefined | null>): AxiosHeaders;\n\n  toJSON(asStrings?: boolean): RawAxiosHeaders;\n\n  static from(thing?: AxiosHeaders | RawAxiosHeaders | string): AxiosHeaders;\n\n  static accessor(header: string | string[]): AxiosHeaders;\n\n  static concat(...targets: Array<AxiosHeaders | RawAxiosHeaders | string | undefined | null>): AxiosHeaders;\n\n  setContentType(value: ContentType, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\n  getContentType(parser?: RegExp): RegExpExecArray | null;\n  getContentType(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\n  hasContentType(matcher?: AxiosHeaderMatcher): boolean;\n\n  setContentLength(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\n  getContentLength(parser?: RegExp): RegExpExecArray | null;\n  getContentLength(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\n  hasContentLength(matcher?: AxiosHeaderMatcher): boolean;\n\n  setAccept(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\n  getAccept(parser?: RegExp): RegExpExecArray | null;\n  getAccept(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\n  hasAccept(matcher?: AxiosHeaderMatcher): boolean;\n\n  setUserAgent(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\n  getUserAgent(parser?: RegExp): RegExpExecArray | null;\n  getUserAgent(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\n  hasUserAgent(matcher?: AxiosHeaderMatcher): boolean;\n\n  setContentEncoding(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\n  getContentEncoding(parser?: RegExp): RegExpExecArray | null;\n  getContentEncoding(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\n  hasContentEncoding(matcher?: AxiosHeaderMatcher): boolean;\n\n  setAuthorization(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\n  getAuthorization(parser?: RegExp): RegExpExecArray | null;\n  getAuthorization(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\n  hasAuthorization(matcher?: AxiosHeaderMatcher): boolean;\n\n  [Symbol.iterator](): IterableIterator<[string, AxiosHeaderValue]>;\n}\n\ntype CommonRequestHeadersList = 'Accept' | 'Content-Length' | 'User-Agent' | 'Content-Encoding' | 'Authorization';\n\ntype ContentType = AxiosHeaderValue | 'text/html' | 'text/plain' | 'multipart/form-data' | 'application/json' | 'application/x-www-form-urlencoded' | 'application/octet-stream';\n\ntype RawAxiosRequestHeaders = Partial<RawAxiosHeaders & {\n  [Key in CommonRequestHeadersList]: AxiosHeaderValue;\n} & {\n  'Content-Type': ContentType\n}>;\n\ntype AxiosRequestHeaders = RawAxiosRequestHeaders & AxiosHeaders;\n\ntype CommonResponseHeadersList = 'Server' | 'Content-Type' | 'Content-Length' | 'Cache-Control'| 'Content-Encoding';\n\ntype RawCommonResponseHeaders = {\n  [Key in CommonResponseHeadersList]: AxiosHeaderValue;\n} & {\n  \"set-cookie\": string[];\n};\n\ntype RawAxiosResponseHeaders = Partial<RawAxiosHeaders & RawCommonResponseHeaders>;\n\ntype AxiosResponseHeaders = RawAxiosResponseHeaders & AxiosHeaders;\n\ninterface AxiosRequestTransformer {\n  (this: InternalAxiosRequestConfig, data: any, headers: AxiosRequestHeaders): any;\n}\n\ninterface AxiosResponseTransformer {\n  (this: InternalAxiosRequestConfig, data: any, headers: AxiosResponseHeaders, status?: number): any;\n}\n\ninterface AxiosAdapter {\n  (config: InternalAxiosRequestConfig): AxiosPromise;\n}\n\ninterface AxiosBasicCredentials {\n  username: string;\n  password: string;\n}\n\ninterface AxiosProxyConfig {\n  host: string;\n  port: number;\n  auth?: {\n    username: string;\n    password: string;\n  };\n  protocol?: string;\n}\n\nenum HttpStatusCode {\n  Continue = 100,\n  SwitchingProtocols = 101,\n  Processing = 102,\n  EarlyHints = 103,\n  Ok = 200,\n  Created = 201,\n  Accepted = 202,\n  NonAuthoritativeInformation = 203,\n  NoContent = 204,\n  ResetContent = 205,\n  PartialContent = 206,\n  MultiStatus = 207,\n  AlreadyReported = 208,\n  ImUsed = 226,\n  MultipleChoices = 300,\n  MovedPermanently = 301,\n  Found = 302,\n  SeeOther = 303,\n  NotModified = 304,\n  UseProxy = 305,\n  Unused = 306,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n  BadRequest = 400,\n  Unauthorized = 401,\n  PaymentRequired = 402,\n  Forbidden = 403,\n  NotFound = 404,\n  MethodNotAllowed = 405,\n  NotAcceptable = 406,\n  ProxyAuthenticationRequired = 407,\n  RequestTimeout = 408,\n  Conflict = 409,\n  Gone = 410,\n  LengthRequired = 411,\n  PreconditionFailed = 412,\n  PayloadTooLarge = 413,\n  UriTooLong = 414,\n  UnsupportedMediaType = 415,\n  RangeNotSatisfiable = 416,\n  ExpectationFailed = 417,\n  ImATeapot = 418,\n  MisdirectedRequest = 421,\n  UnprocessableEntity = 422,\n  Locked = 423,\n  FailedDependency = 424,\n  TooEarly = 425,\n  UpgradeRequired = 426,\n  PreconditionRequired = 428,\n  TooManyRequests = 429,\n  RequestHeaderFieldsTooLarge = 431,\n  UnavailableForLegalReasons = 451,\n  InternalServerError = 500,\n  NotImplemented = 501,\n  BadGateway = 502,\n  ServiceUnavailable = 503,\n  GatewayTimeout = 504,\n  HttpVersionNotSupported = 505,\n  VariantAlsoNegotiates = 506,\n  InsufficientStorage = 507,\n  LoopDetected = 508,\n  NotExtended = 510,\n  NetworkAuthenticationRequired = 511,\n}\n\ntype Method =\n    | 'get' | 'GET'\n    | 'delete' | 'DELETE'\n    | 'head' | 'HEAD'\n    | 'options' | 'OPTIONS'\n    | 'post' | 'POST'\n    | 'put' | 'PUT'\n    | 'patch' | 'PATCH'\n    | 'purge' | 'PURGE'\n    | 'link' | 'LINK'\n    | 'unlink' | 'UNLINK';\n\ntype ResponseType =\n    | 'arraybuffer'\n    | 'blob'\n    | 'document'\n    | 'json'\n    | 'text'\n    | 'stream';\n\ntype responseEncoding =\n    | 'ascii' | 'ASCII'\n    | 'ansi' | 'ANSI'\n    | 'binary' | 'BINARY'\n    | 'base64' | 'BASE64'\n    | 'base64url' | 'BASE64URL'\n    | 'hex' | 'HEX'\n    | 'latin1' | 'LATIN1'\n    | 'ucs-2' | 'UCS-2'\n    | 'ucs2' | 'UCS2'\n    | 'utf-8' | 'UTF-8'\n    | 'utf8' | 'UTF8'\n    | 'utf16le' | 'UTF16LE';\n\ninterface TransitionalOptions {\n  silentJSONParsing?: boolean;\n  forcedJSONParsing?: boolean;\n  clarifyTimeoutError?: boolean;\n}\n\ninterface GenericAbortSignal {\n  readonly aborted: boolean;\n  onabort?: ((...args: any) => any) | null;\n  addEventListener?: (...args: any) => any;\n  removeEventListener?: (...args: any) => any;\n}\n\ninterface FormDataVisitorHelpers {\n  defaultVisitor: SerializerVisitor;\n  convertValue: (value: any) => any;\n  isVisitable: (value: any) => boolean;\n}\n\ninterface SerializerVisitor {\n  (\n      this: GenericFormData,\n      value: any,\n      key: string | number,\n      path: null | Array<string | number>,\n      helpers: FormDataVisitorHelpers\n  ): boolean;\n}\n\ninterface SerializerOptions {\n  visitor?: SerializerVisitor;\n  dots?: boolean;\n  metaTokens?: boolean;\n  indexes?: boolean | null;\n}\n\n// tslint:disable-next-line\ninterface FormSerializerOptions extends SerializerOptions {\n}\n\ninterface ParamEncoder {\n  (value: any, defaultEncoder: (value: any) => any): any;\n}\n\ninterface CustomParamsSerializer {\n  (params: Record<string, any>, options?: ParamsSerializerOptions): string;\n}\n\ninterface ParamsSerializerOptions extends SerializerOptions {\n  encode?: ParamEncoder;\n  serialize?: CustomParamsSerializer;\n}\n\ntype MaxUploadRate = number;\n\ntype MaxDownloadRate = number;\n\ntype BrowserProgressEvent = any;\n\ninterface AxiosProgressEvent {\n  loaded: number;\n  total?: number;\n  progress?: number;\n  bytes: number;\n  rate?: number;\n  estimated?: number;\n  upload?: boolean;\n  download?: boolean;\n  event?: BrowserProgressEvent;\n}\n\ntype Milliseconds = number;\n\ntype AxiosAdapterName = 'xhr' | 'http' | string;\n\ntype AxiosAdapterConfig = AxiosAdapter | AxiosAdapterName;\n\ninterface AxiosRequestConfig<D = any> {\n  url?: string;\n  method?: Method | string;\n  baseURL?: string;\n  transformRequest?: AxiosRequestTransformer | AxiosRequestTransformer[];\n  transformResponse?: AxiosResponseTransformer | AxiosResponseTransformer[];\n  headers?: (RawAxiosRequestHeaders & MethodsHeaders) | AxiosHeaders;\n  params?: any;\n  paramsSerializer?: ParamsSerializerOptions | CustomParamsSerializer;\n  data?: D;\n  timeout?: Milliseconds;\n  timeoutErrorMessage?: string;\n  withCredentials?: boolean;\n  adapter?: AxiosAdapterConfig | AxiosAdapterConfig[];\n  auth?: AxiosBasicCredentials;\n  responseType?: ResponseType;\n  responseEncoding?: responseEncoding | string;\n  xsrfCookieName?: string;\n  xsrfHeaderName?: string;\n  onUploadProgress?: (progressEvent: AxiosProgressEvent) => void;\n  onDownloadProgress?: (progressEvent: AxiosProgressEvent) => void;\n  maxContentLength?: number;\n  validateStatus?: ((status: number) => boolean) | null;\n  maxBodyLength?: number;\n  maxRedirects?: number;\n  maxRate?: number | [MaxUploadRate, MaxDownloadRate];\n  beforeRedirect?: (options: Record<string, any>, responseDetails: { headers: Record<string, string> }) => void;\n  socketPath?: string | null;\n  transport?: any;\n  httpAgent?: any;\n  httpsAgent?: any;\n  proxy?: AxiosProxyConfig | false;\n  cancelToken?: CancelToken;\n  decompress?: boolean;\n  transitional?: TransitionalOptions;\n  signal?: GenericAbortSignal;\n  insecureHTTPParser?: boolean;\n  env?: {\n    FormData?: new (...args: any[]) => object;\n  };\n  formSerializer?: FormSerializerOptions;\n  family?: 4 | 6 | undefined;\n  lookup?: ((hostname: string, options: object, cb: (err: Error | null, address: string, family: number) => void) => void) |\n      ((hostname: string, options: object) => Promise<[address: string, family: number] | string>);\n}\n\n// Alias\ntype RawAxiosRequestConfig<D = any> = AxiosRequestConfig<D>;\n\ninterface InternalAxiosRequestConfig<D = any> extends AxiosRequestConfig<D> {\n  headers: AxiosRequestHeaders;\n}\n\ninterface HeadersDefaults {\n  common: RawAxiosRequestHeaders;\n  delete: RawAxiosRequestHeaders;\n  get: RawAxiosRequestHeaders;\n  head: RawAxiosRequestHeaders;\n  post: RawAxiosRequestHeaders;\n  put: RawAxiosRequestHeaders;\n  patch: RawAxiosRequestHeaders;\n  options?: RawAxiosRequestHeaders;\n  purge?: RawAxiosRequestHeaders;\n  link?: RawAxiosRequestHeaders;\n  unlink?: RawAxiosRequestHeaders;\n}\n\ninterface AxiosDefaults<D = any> extends Omit<AxiosRequestConfig<D>, 'headers'> {\n  headers: HeadersDefaults;\n}\n\ninterface CreateAxiosDefaults<D = any> extends Omit<AxiosRequestConfig<D>, 'headers'> {\n  headers?: RawAxiosRequestHeaders | AxiosHeaders | Partial<HeadersDefaults>;\n}\n\ninterface AxiosResponse<T = any, D = any> {\n  data: T;\n  status: number;\n  statusText: string;\n  headers: RawAxiosResponseHeaders | AxiosResponseHeaders;\n  config: InternalAxiosRequestConfig<D>;\n  request?: any;\n}\n\nclass AxiosError<T = unknown, D = any> extends Error {\n  constructor(\n      message?: string,\n      code?: string,\n      config?: InternalAxiosRequestConfig<D>,\n      request?: any,\n      response?: AxiosResponse<T, D>\n  );\n\n  config?: InternalAxiosRequestConfig<D>;\n  code?: string;\n  request?: any;\n  response?: AxiosResponse<T, D>;\n  isAxiosError: boolean;\n  status?: number;\n  toJSON: () => object;\n  cause?: Error;\n  static from<T = unknown, D = any>(\n    error: Error | unknown,\n    code?: string,\n    config?: InternalAxiosRequestConfig<D>,\n    request?: any,\n    response?: AxiosResponse<T, D>,\n    customProps?: object,\n): AxiosError<T, D>;\n  static readonly ERR_FR_TOO_MANY_REDIRECTS = \"ERR_FR_TOO_MANY_REDIRECTS\";\n  static readonly ERR_BAD_OPTION_VALUE = \"ERR_BAD_OPTION_VALUE\";\n  static readonly ERR_BAD_OPTION = \"ERR_BAD_OPTION\";\n  static readonly ERR_NETWORK = \"ERR_NETWORK\";\n  static readonly ERR_DEPRECATED = \"ERR_DEPRECATED\";\n  static readonly ERR_BAD_RESPONSE = \"ERR_BAD_RESPONSE\";\n  static readonly ERR_BAD_REQUEST = \"ERR_BAD_REQUEST\";\n  static readonly ERR_NOT_SUPPORT = \"ERR_NOT_SUPPORT\";\n  static readonly ERR_INVALID_URL = \"ERR_INVALID_URL\";\n  static readonly ERR_CANCELED = \"ERR_CANCELED\";\n  static readonly ECONNABORTED = \"ECONNABORTED\";\n  static readonly ETIMEDOUT = \"ETIMEDOUT\";\n}\n\nclass CanceledError<T> extends AxiosError<T> {\n}\n\ntype AxiosPromise<T = any> = Promise<AxiosResponse<T>>;\n\ninterface CancelStatic {\n  new (message?: string): Cancel;\n}\n\ninterface Cancel {\n  message: string | undefined;\n}\n\ninterface Canceler {\n  (message?: string, config?: AxiosRequestConfig, request?: any): void;\n}\n\ninterface CancelTokenStatic {\n  new (executor: (cancel: Canceler) => void): CancelToken;\n  source(): CancelTokenSource;\n}\n\ninterface CancelToken {\n  promise: Promise<Cancel>;\n  reason?: Cancel;\n  throwIfRequested(): void;\n}\n\ninterface CancelTokenSource {\n  token: CancelToken;\n  cancel: Canceler;\n}\n\ninterface AxiosInterceptorOptions {\n  synchronous?: boolean;\n  runWhen?: (config: InternalAxiosRequestConfig) => boolean;\n}\n\ninterface AxiosInterceptorManager<V> {\n  use(onFulfilled?: ((value: V) => V | Promise<V>) | null, onRejected?: ((error: any) => any) | null, options?: AxiosInterceptorOptions): number;\n  eject(id: number): void;\n  clear(): void;\n}\n\nclass Axios {\n  constructor(config?: AxiosRequestConfig);\n  defaults: AxiosDefaults;\n  interceptors: {\n    request: AxiosInterceptorManager<InternalAxiosRequestConfig>;\n    response: AxiosInterceptorManager<AxiosResponse>;\n  };\n  getUri(config?: AxiosRequestConfig): string;\n  request<T = any, R = AxiosResponse<T>, D = any>(config: AxiosRequestConfig<D>): Promise<R>;\n  get<T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n  delete<T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n  head<T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n  options<T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n  post<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n  put<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n  patch<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n  postForm<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n  putForm<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n  patchForm<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\n}\n\ninterface AxiosInstance extends Axios {\n  <T = any, R = AxiosResponse<T>, D = any>(config: AxiosRequestConfig<D>): Promise<R>;\n  <T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\n\n  defaults: Omit<AxiosDefaults, 'headers'> & {\n    headers: HeadersDefaults & {\n      [key: string]: AxiosHeaderValue\n    }\n  };\n}\n\ninterface GenericFormData {\n  append(name: string, value: any, options?: any): any;\n}\n\ninterface GenericHTMLFormElement {\n  name: string;\n  method: string;\n  submit(): void;\n}\n\nfunction toFormData(sourceObj: object, targetFormData?: GenericFormData, options?: FormSerializerOptions): GenericFormData;\n\nfunction formToJSON(form: GenericFormData|GenericHTMLFormElement): object;\n\nfunction isAxiosError<T = any, D = any>(payload: any): payload is AxiosError<T, D>;\n\nfunction spread<T, R>(callback: (...args: T[]) => R): (array: T[]) => R;\n\nfunction isCancel(value: any): value is Cancel;\n\nfunction all<T>(values: Array<T | Promise<T>>): Promise<T[]>;\n\ninterface AxiosStatic extends AxiosInstance {\n  create(config?: CreateAxiosDefaults): AxiosInstance;\n  Cancel: CancelStatic;\n  CancelToken: CancelTokenStatic;\n  Axios: typeof Axios;\n  AxiosError: typeof AxiosError;\n  HttpStatusCode: typeof HttpStatusCode;\n  readonly VERSION: string;\n  isCancel: typeof isCancel;\n  all: typeof all;\n  spread: typeof spread;\n  isAxiosError: typeof isAxiosError;\n  toFormData: typeof toFormData;\n  formToJSON: typeof formToJSON;\n  CanceledError: typeof CanceledError;\n  AxiosHeaders: typeof AxiosHeaders;\n}\n\ndeclare const axios: AxiosStatic;\n\ndefault axios;\n","file://node_modules/axios/node_modules/form-data/index.d.ts":"// Definitions by: Carlos Ballesteros Velasco <https://github.com/soywiz>\n//                 Leon Yu <https://github.com/leonyu>\n//                 BendingBender <https://github.com/BendingBender>\n//                 Maple Miao <https://github.com/mapleeit>\n\n/// <reference types=\"node\" />\n\n= FormData;\n\n// Extracted because @types/node doesn't export interfaces.\ninterface ReadableOptions {\n  highWaterMark?: number;\n  encoding?: string;\n  objectMode?: boolean;\n  read?(this: stream.Readable, size: number): void;\n  destroy?(this: stream.Readable, error: Error | null, callback: (error: Error | null) => void): void;\n  autoDestroy?: boolean;\n}\n\ninterface Options extends ReadableOptions {\n  writable?: boolean;\n  readable?: boolean;\n  dataSize?: number;\n  maxDataSize?: number;\n  pauseStreams?: boolean;\n}\n\ndeclare class FormData extends stream.Readable {\n  constructor(options?: Options);\n  append(key: string, value: any, options?: FormData.AppendOptions | string): void;\n  getHeaders(userHeaders?: FormData.Headers): FormData.Headers;\n  submit(\n    params: string | FormData.SubmitOptions,\n    callback?: (error: Error | null, response: http.IncomingMessage) => void\n  ): http.ClientRequest;\n  getBuffer(): Buffer;\n  setBoundary(boundary: string): void;\n  getBoundary(): string;\n  getLength(callback: (err: Error | null, length: number) => void): void;\n  getLengthSync(): number;\n  hasKnownLength(): boolean;\n}\n\ndeclare namespace FormData {\n  interface Headers {\n    [key: string]: any;\n  }\n\n  interface AppendOptions {\n    header?: string | Headers;\n    knownLength?: number;\n    filename?: string;\n    filepath?: string;\n    contentType?: string;\n  }\n\n  interface SubmitOptions extends http.RequestOptions {\n    protocol?: 'https:' | 'http:';\n  }\n}\n","file://node_modules/form-data/package.json":"{\"name\":\"form-data\",\"types\":\"./index.d.ts\"}","file://node_modules/form-data/index.d.ts":"// Definitions by: Carlos Ballesteros Velasco <https://github.com/soywiz>\n//                 Leon Yu <https://github.com/leonyu>\n//                 BendingBender <https://github.com/BendingBender>\n//                 Maple Miao <https://github.com/mapleeit>\n\n/// <reference types=\"node\" />\n\n= FormData;\n\n// Extracted because @types/node doesn't export interfaces.\ninterface ReadableOptions {\n  highWaterMark?: number;\n  encoding?: string;\n  objectMode?: boolean;\n  read?(this: stream.Readable, size: number): void;\n  destroy?(this: stream.Readable, error: Error | null, callback: (error: Error | null) => void): void;\n  autoDestroy?: boolean;\n}\n\ninterface Options extends ReadableOptions {\n  writable?: boolean;\n  readable?: boolean;\n  dataSize?: number;\n  maxDataSize?: number;\n  pauseStreams?: boolean;\n}\n\ndeclare class FormData extends stream.Readable {\n  constructor(options?: Options);\n  append(key: string, value: any, options?: FormData.AppendOptions | string): void;\n  getHeaders(userHeaders?: FormData.Headers): FormData.Headers;\n  submit(\n    params: string | FormData.SubmitOptions,\n    callback?: (error: Error | null, response: http.IncomingMessage) => void\n  ): http.ClientRequest;\n  getBuffer(): Buffer;\n  setBoundary(boundary: string): void;\n  getBoundary(): string;\n  getLength(callback: (err: Error | null, length: number) => void): void;\n  getLengthSync(): number;\n  hasKnownLength(): boolean;\n}\n\ndeclare namespace FormData {\n  interface Headers {\n    [key: string]: any;\n  }\n\n  interface AppendOptions {\n    header?: string | Headers;\n    knownLength?: number;\n    filename?: string;\n    filepath?: string;\n    contentType?: string;\n  }\n\n  interface SubmitOptions extends http.RequestOptions {\n    protocol?: 'https:' | 'http:';\n  }\n}\n","file://node_modules/@takaro/queues/package.json":"{\"name\":\"@takaro/queues\",\"types\":\"dist/main.d.ts\"}","file://node_modules/@takaro/queues/dist/QueueService.d.ts":"declare class QueuesService {\n    private static instance;\n    static getInstance(): QueuesService;\n    private queuesMap;\n    get queues(): {\n        commands: {\n            queue: TakaroQueue<ICommandJobData>;\n        };\n        cronjobs: {\n            queue: TakaroQueue<import(\"./dataDefinitions.js\").IJobData>;\n        };\n        hooks: {\n            queue: TakaroQueue<IHookJobData>;\n        };\n        events: {\n            queue: TakaroQueue<IEventQueueData>;\n        };\n        connector: {\n            queue: TakaroQueue<IConnectorQueueData>;\n        };\n        itemsSync: {\n            queue: TakaroQueue<IGameServerQueueData>;\n        };\n        playerSync: {\n            queue: TakaroQueue<IGameServerQueueData>;\n        };\n    };\n}\ndeclare const queueService: QueuesService;\n{};\n","file://node_modules/@takaro/queues/dist/TakaroQueue.d.ts":"declare class TakaroQueue<T extends Record<string, unknown>> {\n    name: string;\n    bullQueue: Queue<T>;\n    constructor(name: string);\n    /**\n     * Generating a job ID like this effectively de-duplicates all jobs with the same data.\n     * @see https://docs.bullmq.io/guide/jobs/job-ids\n     * @param data\n     * @returns\n     */\n    private getJobId;\n    add(data: T, extra?: JobsOptions): Promise<import(\"bullmq\").Job<T, any, string>>;\n    getRepeatableJobs(): Promise<{\n        key: string;\n        name: string;\n        id: string;\n        endDate: number;\n        tz: string;\n        pattern: string;\n        next: number;\n    }[]>;\n    removeRepeatableByKey(id: string): Promise<boolean>;\n}\n","file://node_modules/@takaro/queues/dist/TakaroWorker.d.ts":"declare abstract class TakaroWorker<T> {\n    log: import(\"winston\").Logger;\n    bullWorker: Worker<T, unknown>;\n    constructor(name: string, concurrency: number | undefined, fn: Processor<T, unknown>, extraBullOpts?: WorkerOptions);\n}\n","file://node_modules/@takaro/queues/dist/bullboard.d.ts":"declare function getBullBoard(): any;\n","file://node_modules/@takaro/queues/dist/config.d.ts":"interface IQueuesConfig extends IBaseConfig {\n    queues: {\n        commands: {\n            name: string;\n            concurrency: number;\n        };\n        cronjobs: {\n            name: string;\n            concurrency: number;\n        };\n        hooks: {\n            name: string;\n            concurrency: number;\n        };\n        events: {\n            name: string;\n            concurrency: number;\n        };\n        connector: {\n            name: string;\n        };\n        itemsSync: {\n            name: string;\n            interval: number;\n        };\n        playerSync: {\n            name: string;\n            interval: number;\n            concurrency: number;\n        };\n    };\n    redis: {\n        host: string;\n        port: number;\n        username: string;\n        password: string;\n    };\n}\ndeclare const queuesConfigSchema: {\n    redis: {\n        host: {\n            doc: string;\n            format: StringConstructor;\n            default: string;\n            env: string;\n        };\n        port: {\n            doc: string;\n            format: NumberConstructor;\n            default: number;\n            env: string;\n        };\n        username: {\n            doc: string;\n            format: StringConstructor;\n            default: string;\n            env: string;\n        };\n        password: {\n            doc: string;\n            format: StringConstructor;\n            default: string;\n            env: string;\n        };\n    };\n    queues: {\n        commands: {\n            name: {\n                doc: string;\n                format: StringConstructor;\n                default: string;\n                env: string;\n            };\n            concurrency: {\n                doc: string;\n                format: NumberConstructor;\n                default: number;\n                env: string;\n            };\n        };\n        cronjobs: {\n            name: {\n                doc: string;\n                format: StringConstructor;\n                default: string;\n                env: string;\n            };\n            concurrency: {\n                doc: string;\n                format: NumberConstructor;\n                default: number;\n                env: string;\n            };\n        };\n        hooks: {\n            name: {\n                doc: string;\n                format: StringConstructor;\n                default: string;\n                env: string;\n            };\n            concurrency: {\n                doc: string;\n                format: NumberConstructor;\n                default: number;\n                env: string;\n            };\n        };\n        events: {\n            name: {\n                doc: string;\n                format: StringConstructor;\n                default: string;\n                env: string;\n            };\n            concurrency: {\n                doc: string;\n                format: NumberConstructor;\n                default: number;\n                env: string;\n            };\n        };\n        connector: {\n            name: {\n                doc: string;\n                format: StringConstructor;\n                default: string;\n                env: string;\n            };\n        };\n        itemsSync: {\n            name: {\n                doc: string;\n                format: StringConstructor;\n                default: string;\n                env: string;\n            };\n            interval: {\n                doc: string;\n                format: NumberConstructor;\n                default: number;\n                env: string;\n            };\n        };\n        playerSync: {\n            name: {\n                doc: string;\n                format: StringConstructor;\n                default: string;\n                env: string;\n            };\n            interval: {\n                doc: string;\n                format: NumberConstructor;\n                default: number;\n                env: string;\n            };\n            concurrency: {\n                doc: string;\n                format: NumberConstructor;\n                default: number;\n                env: string;\n            };\n        };\n    };\n};\ndeclare const config: Config<IQueuesConfig>;\n","file://node_modules/@takaro/queues/dist/dataDefinitions.d.ts":"interface IParsedCommand {\n    command: string;\n    arguments: Record<string, string | number | boolean | PlayerOnGameserverOutputWithRolesDTO>;\n    [key: string]: string | Record<string, string | number | boolean | PlayerOnGameserverOutputWithRolesDTO>;\n}\ninterface IBaseJobData {\n    [key: string]: unknown;\n    domainId: string;\n}\ninterface IJobData extends IBaseJobData {\n    functionId: string;\n    /**\n     * The id of the item that triggered this job (cronjobId, commandId or hookId)\n     */\n    itemId: string;\n    /**\n     * The id of the gameserver that triggered this job\n     */\n    gameServerId: string;\n    /**\n     * The module installation object, including the configs\n     */\n    module: ModuleInstallationOutputDTO;\n}\ninterface IHookJobData extends IJobData {\n    eventData: EventMapping[keyof EventMapping];\n}\ninterface ICommandJobData extends IJobData {\n    player: PlayerOnGameserverOutputWithRolesDTO;\n    arguments: IParsedCommand['arguments'];\n}\ntype ICronJobData = IJobData;\ndeclare function isCommandData(data: IJobData): data is ICommandJobData;\ndeclare function isHookData(data: IJobData): data is IHookJobData;\ndeclare function isCronData(data: IJobData): data is ICronJobData;\ninterface IEventQueueData extends IBaseJobData {\n    type: GameEvents;\n    gameServerId: string;\n    event: EventMapping[GameEvents];\n}\ninterface IConnectorQueueData extends IBaseJobData {\n    gameServerId: string;\n    operation: 'create' | 'update' | 'delete';\n}\ninterface IGameServerQueueData extends IBaseJobData {\n    gameServerId?: string;\n}\n","file://node_modules/@takaro/queues/dist/main.d.ts":"{ queueService } from './QueueService.js';\n{ queuesConfigSchema, IQueuesConfig } from './config.js';\n* from './dataDefinitions.js';\n{ TakaroQueue } from './TakaroQueue.js';\n{ TakaroWorker } from './TakaroWorker.js';\n{ getBullBoard } from './bullboard.js';\n","file://node_modules/@takaro/queues/dist/util/redisConnectionOptions.d.ts":"declare function getRedisConnectionOptions(): {\n    host: string;\n    port: number;\n    username: string;\n    password: string;\n};\n","file://node_modules/chalk/package.json":"{\"name\":\"chalk\",\"types\":\"types/index.d.ts\"}","file://node_modules/chalk/types/index.d.ts":"// Type definitions for Chalk\n// Definitions by: Thomas Sauer <https://github.com/t-sauer>\n\nconst enum Level {\n\tNone = 0,\n\tBasic = 1,\n\tAnsi256 = 2,\n\tTrueColor = 3\n}\n\ninterface ChalkOptions {\n\tenabled?: boolean;\n\tlevel?: Level;\n}\n\ninterface ChalkConstructor {\n\tnew (options?: ChalkOptions): Chalk;\n\t(options?: ChalkOptions): Chalk;\n}\n\ninterface ColorSupport {\n\tlevel: Level;\n\thasBasic: boolean;\n\thas256: boolean;\n\thas16m: boolean;\n}\n\ninterface Chalk {\n\t(...text: string[]): string;\n\t(text: TemplateStringsArray, ...placeholders: string[]): string;\n\tconstructor: ChalkConstructor;\n\tenabled: boolean;\n\tlevel: Level;\n\trgb(r: number, g: number, b: number): this;\n\thsl(h: number, s: number, l: number): this;\n\thsv(h: number, s: number, v: number): this;\n\thwb(h: number, w: number, b: number): this;\n\tbgHex(color: string): this;\n\tbgKeyword(color: string): this;\n\tbgRgb(r: number, g: number, b: number): this;\n\tbgHsl(h: number, s: number, l: number): this;\n\tbgHsv(h: number, s: number, v: number): this;\n\tbgHwb(h: number, w: number, b: number): this;\n\thex(color: string): this;\n\tkeyword(color: string): this;\n\n\treadonly reset: this;\n\treadonly bold: this;\n\treadonly dim: this;\n\treadonly italic: this;\n\treadonly underline: this;\n\treadonly inverse: this;\n\treadonly hidden: this;\n\treadonly strikethrough: this;\n\n\treadonly visible: this;\n\n\treadonly black: this;\n\treadonly red: this;\n\treadonly green: this;\n\treadonly yellow: this;\n\treadonly blue: this;\n\treadonly magenta: this;\n\treadonly cyan: this;\n\treadonly white: this;\n\treadonly gray: this;\n\treadonly grey: this;\n\treadonly blackBright: this;\n\treadonly redBright: this;\n\treadonly greenBright: this;\n\treadonly yellowBright: this;\n\treadonly blueBright: this;\n\treadonly magentaBright: this;\n\treadonly cyanBright: this;\n\treadonly whiteBright: this;\n\n\treadonly bgBlack: this;\n\treadonly bgRed: this;\n\treadonly bgGreen: this;\n\treadonly bgYellow: this;\n\treadonly bgBlue: this;\n\treadonly bgMagenta: this;\n\treadonly bgCyan: this;\n\treadonly bgWhite: this;\n\treadonly bgBlackBright: this;\n\treadonly bgRedBright: this;\n\treadonly bgGreenBright: this;\n\treadonly bgYellowBright: this;\n\treadonly bgBlueBright: this;\n\treadonly bgMagentaBright: this;\n\treadonly bgCyanBright: this;\n\treadonly bgWhiteBright: this;\n}\n\ndeclare const chalk: Chalk & { supportsColor: ColorSupport };\n\ndefault chalk\n","file://node_modules/filelist/package.json":"{\"name\":\"filelist\",\"types\":\"index.d.ts\"}","file://node_modules/filelist/index.d.ts":"// IncludeOptions definitions copied from minimatch (https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/minimatch/index.d.ts)\ninterface IncludeOptions {\n  /**\n   * Dump a ton of stuff to stderr.\n   *\n   * @default false\n   */\n  debug?: boolean;\n\n  /**\n   * Do not expand {a,b} and {1..3} brace sets.\n   *\n   * @default false\n   */\n  nobrace?: boolean;\n\n  /**\n   * Disable ** matching against multiple folder names.\n   *\n   * @default false\n   */\n  noglobstar?: boolean;\n\n  /**\n   * Allow patterns to match filenames starting with a period,\n   * even if the pattern does not explicitly have a period in that spot.\n   *\n   * @default false\n   */\n  dot?: boolean;\n\n  /**\n   * Disable \"extglob\" style patterns like +(a|b).\n   *\n   * @default false\n   */\n  noext?: boolean;\n\n  /**\n   * Perform a case-insensitive match.\n   *\n   * @default false\n   */\n  nocase?: boolean;\n\n  /**\n   * When a match is not found by minimatch.match,\n   * return a list containing the pattern itself if this option is set.\n   * Otherwise, an empty list is returned if there are no matches.\n   *\n   * @default false\n   */\n  nonull?: boolean;\n\n  /**\n   * If set, then patterns without slashes will be matched against\n   * the basename of the path if it contains slashes.\n   *\n   * @default false\n   */\n  matchBase?: boolean;\n\n  /**\n   * Suppress the behavior of treating #\n   * at the start of a pattern as a comment.\n   *\n   * @default false\n   */\n  nocomment?: boolean;\n\n  /**\n   * Suppress the behavior of treating a leading ! character as negation.\n   *\n   * @default false\n   */\n  nonegate?: boolean;\n\n  /**\n   * Returns from negate expressions the same as if they were not negated.\n   * (Ie, true on a hit, false on a miss.)\n   *\n   * @default false\n   */\n  flipNegate?: boolean;\n}\n\nclass FileList {\n  static clone(): FileList\n  static verbose: boolean\n}\n\ninterface FileList extends Omit<Array<string>, \"length\"> {\n  pendingAdd: string[]\n  pending: boolean\n  excludes: {\n    pats: RegExp[],\n    funcs: Function[],\n    regex: null | RegExp\n  }\n  items: string[]\n  toArray(): string[]\n  include(...items: string[]): this\n  include(...items: (IncludeOptions | string)[]): this\n  exclude(...items: string[]): this\n  shouldExclude(item: string): boolean\n  resolve(): this\n  clearInclusions(): this\n  clearExclusions(): this\n  length(): number\n}","file://node_modules/setprototypeof/package.json":"{\"name\":\"setprototypeof\",\"types\":\"index.d.ts\"}","file://node_modules/setprototypeof/index.d.ts":"declare function setPrototypeOf(o: any, proto: object | null): any;\n= setPrototypeOf;\n","file://node_modules/iconv-lite/package.json":"{\"name\":\"iconv-lite\",\"types\":\"./lib/index.d.ts\"}","file://node_modules/iconv-lite/./lib/index.d.ts":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License.\n *  REQUIREMENT: This definition is dependent on the @types/node definition.\n *  Install with `npm install @types/node --save-dev`\n *--------------------------------------------------------------------------------------------*/\n\ndeclare module 'iconv-lite' {\n\texport function decode(buffer: Buffer, encoding: string, options?: Options): string;\n\n\texport function encode(content: string, encoding: string, options?: Options): Buffer;\n\n\texport function encodingExists(encoding: string): boolean;\n\n\texport function decodeStream(encoding: string, options?: Options): NodeJS.ReadWriteStream;\n\n\texport function encodeStream(encoding: string, options?: Options): NodeJS.ReadWriteStream;\n}\n\ninterface Options {\n    stripBOM?: boolean;\n    addBOM?: boolean;\n    defaultEncoding?: string;\n}\n","file://node_modules/safe-buffer/package.json":"{\"name\":\"safe-buffer\",\"types\":\"index.d.ts\"}","file://node_modules/safe-buffer/index.d.ts":"declare module \"safe-buffer\" {\n  export class Buffer {\n    length: number\n    write(string: string, offset?: number, length?: number, encoding?: string): number;\n    toString(encoding?: string, start?: number, end?: number): string;\n    toJSON(): { type: 'Buffer', data: any[] };\n    equals(otherBuffer: Buffer): boolean;\n    compare(otherBuffer: Buffer, targetStart?: number, targetEnd?: number, sourceStart?: number, sourceEnd?: number): number;\n    copy(targetBuffer: Buffer, targetStart?: number, sourceStart?: number, sourceEnd?: number): number;\n    slice(start?: number, end?: number): Buffer;\n    writeUIntLE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;\n    writeUIntBE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;\n    writeIntLE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;\n    writeIntBE(value: number, offset: number, byteLength: number, noAssert?: boolean): number;\n    readUIntLE(offset: number, byteLength: number, noAssert?: boolean): number;\n    readUIntBE(offset: number, byteLength: number, noAssert?: boolean): number;\n    readIntLE(offset: number, byteLength: number, noAssert?: boolean): number;\n    readIntBE(offset: number, byteLength: number, noAssert?: boolean): number;\n    readUInt8(offset: number, noAssert?: boolean): number;\n    readUInt16LE(offset: number, noAssert?: boolean): number;\n    readUInt16BE(offset: number, noAssert?: boolean): number;\n    readUInt32LE(offset: number, noAssert?: boolean): number;\n    readUInt32BE(offset: number, noAssert?: boolean): number;\n    readInt8(offset: number, noAssert?: boolean): number;\n    readInt16LE(offset: number, noAssert?: boolean): number;\n    readInt16BE(offset: number, noAssert?: boolean): number;\n    readInt32LE(offset: number, noAssert?: boolean): number;\n    readInt32BE(offset: number, noAssert?: boolean): number;\n    readFloatLE(offset: number, noAssert?: boolean): number;\n    readFloatBE(offset: number, noAssert?: boolean): number;\n    readDoubleLE(offset: number, noAssert?: boolean): number;\n    readDoubleBE(offset: number, noAssert?: boolean): number;\n    swap16(): Buffer;\n    swap32(): Buffer;\n    swap64(): Buffer;\n    writeUInt8(value: number, offset: number, noAssert?: boolean): number;\n    writeUInt16LE(value: number, offset: number, noAssert?: boolean): number;\n    writeUInt16BE(value: number, offset: number, noAssert?: boolean): number;\n    writeUInt32LE(value: number, offset: number, noAssert?: boolean): number;\n    writeUInt32BE(value: number, offset: number, noAssert?: boolean): number;\n    writeInt8(value: number, offset: number, noAssert?: boolean): number;\n    writeInt16LE(value: number, offset: number, noAssert?: boolean): number;\n    writeInt16BE(value: number, offset: number, noAssert?: boolean): number;\n    writeInt32LE(value: number, offset: number, noAssert?: boolean): number;\n    writeInt32BE(value: number, offset: number, noAssert?: boolean): number;\n    writeFloatLE(value: number, offset: number, noAssert?: boolean): number;\n    writeFloatBE(value: number, offset: number, noAssert?: boolean): number;\n    writeDoubleLE(value: number, offset: number, noAssert?: boolean): number;\n    writeDoubleBE(value: number, offset: number, noAssert?: boolean): number;\n    fill(value: any, offset?: number, end?: number): this;\n    indexOf(value: string | number | Buffer, byteOffset?: number, encoding?: string): number;\n    lastIndexOf(value: string | number | Buffer, byteOffset?: number, encoding?: string): number;\n    includes(value: string | number | Buffer, byteOffset?: number, encoding?: string): boolean;\n\n    /**\n     * Allocates a new buffer containing the given {str}.\n     *\n     * @param str String to store in buffer.\n     * @param encoding encoding to use, optional.  Default is 'utf8'\n     */\n     constructor (str: string, encoding?: string);\n    /**\n     * Allocates a new buffer of {size} octets.\n     *\n     * @param size count of octets to allocate.\n     */\n    constructor (size: number);\n    /**\n     * Allocates a new buffer containing the given {array} of octets.\n     *\n     * @param array The octets to store.\n     */\n    constructor (array: Uint8Array);\n    /**\n     * Produces a Buffer backed by the same allocated memory as\n     * the given {ArrayBuffer}.\n     *\n     *\n     * @param arrayBuffer The ArrayBuffer with which to share memory.\n     */\n    constructor (arrayBuffer: ArrayBuffer);\n    /**\n     * Allocates a new buffer containing the given {array} of octets.\n     *\n     * @param array The octets to store.\n     */\n    constructor (array: any[]);\n    /**\n     * Copies the passed {buffer} data onto a new {Buffer} instance.\n     *\n     * @param buffer The buffer to copy.\n     */\n    constructor (buffer: Buffer);\n    prototype: Buffer;\n    /**\n     * Allocates a new Buffer using an {array} of octets.\n     *\n     * @param array\n     */\n    static from(array: any[]): Buffer;\n    /**\n     * When passed a reference to the .buffer property of a TypedArray instance,\n     * the newly created Buffer will share the same allocated memory as the TypedArray.\n     * The optional {byteOffset} and {length} arguments specify a memory range\n     * within the {arrayBuffer} that will be shared by the Buffer.\n     *\n     * @param arrayBuffer The .buffer property of a TypedArray or a new ArrayBuffer()\n     * @param byteOffset\n     * @param length\n     */\n    static from(arrayBuffer: ArrayBuffer, byteOffset?: number, length?: number): Buffer;\n    /**\n     * Copies the passed {buffer} data onto a new Buffer instance.\n     *\n     * @param buffer\n     */\n    static from(buffer: Buffer): Buffer;\n    /**\n     * Creates a new Buffer containing the given JavaScript string {str}.\n     * If provided, the {encoding} parameter identifies the character encoding.\n     * If not provided, {encoding} defaults to 'utf8'.\n     *\n     * @param str\n     */\n    static from(str: string, encoding?: string): Buffer;\n    /**\n     * Returns true if {obj} is a Buffer\n     *\n     * @param obj object to test.\n     */\n    static isBuffer(obj: any): obj is Buffer;\n    /**\n     * Returns true if {encoding} is a valid encoding argument.\n     * Valid string encodings in Node 0.12: 'ascii'|'utf8'|'utf16le'|'ucs2'(alias of 'utf16le')|'base64'|'binary'(deprecated)|'hex'\n     *\n     * @param encoding string to test.\n     */\n    static isEncoding(encoding: string): boolean;\n    /**\n     * Gives the actual byte length of a string. encoding defaults to 'utf8'.\n     * This is not the same as String.prototype.length since that returns the number of characters in a string.\n     *\n     * @param string string to test.\n     * @param encoding encoding used to evaluate (defaults to 'utf8')\n     */\n    static byteLength(string: string, encoding?: string): number;\n    /**\n     * Returns a buffer which is the result of concatenating all the buffers in the list together.\n     *\n     * If the list has no items, or if the totalLength is 0, then it returns a zero-length buffer.\n     * If the list has exactly one item, then the first item of the list is returned.\n     * If the list has more than one item, then a new Buffer is created.\n     *\n     * @param list An array of Buffer objects to concatenate\n     * @param totalLength Total length of the buffers when concatenated.\n     *   If totalLength is not provided, it is read from the buffers in the list. However, this adds an additional loop to the function, so it is faster to provide the length explicitly.\n     */\n    static concat(list: Buffer[], totalLength?: number): Buffer;\n    /**\n     * The same as buf1.compare(buf2).\n     */\n    static compare(buf1: Buffer, buf2: Buffer): number;\n    /**\n     * Allocates a new buffer of {size} octets.\n     *\n     * @param size count of octets to allocate.\n     * @param fill if specified, buffer will be initialized by calling buf.fill(fill).\n     *    If parameter is omitted, buffer will be filled with zeros.\n     * @param encoding encoding used for call to buf.fill while initalizing\n     */\n    static alloc(size: number, fill?: string | Buffer | number, encoding?: string): Buffer;\n    /**\n     * Allocates a new buffer of {size} octets, leaving memory not initialized, so the contents\n     * of the newly created Buffer are unknown and may contain sensitive data.\n     *\n     * @param size count of octets to allocate\n     */\n    static allocUnsafe(size: number): Buffer;\n    /**\n     * Allocates a new non-pooled buffer of {size} octets, leaving memory not initialized, so the contents\n     * of the newly created Buffer are unknown and may contain sensitive data.\n     *\n     * @param size count of octets to allocate\n     */\n    static allocUnsafeSlow(size: number): Buffer;\n  }\n}","file://node_modules/ipaddr.js/package.json":"{\"name\":\"ipaddr.js\",\"types\":\"./lib/ipaddr.js.d.ts\"}","file://node_modules/ipaddr.js/./lib/ipaddr.js.d.ts":"declare module \"ipaddr.js\" {\n    type IPv4Range = 'unicast' | 'unspecified' | 'broadcast' | 'multicast' | 'linkLocal' | 'loopback' | 'carrierGradeNat' | 'private' | 'reserved';\n    type IPv6Range = 'unicast' | 'unspecified' | 'linkLocal' | 'multicast' | 'loopback' | 'uniqueLocal' | 'ipv4Mapped' | 'rfc6145' | 'rfc6052' | '6to4' | 'teredo' | 'reserved';\n\n    interface RangeList<T> {\n        [name: string]: [T, number] | [T, number][];\n    }\n\n    // Common methods/properties for IPv4 and IPv6 classes.\n    class IP {\n        prefixLengthFromSubnetMask(): number | null;\n        toByteArray(): number[];\n        toNormalizedString(): string;\n        toString(): string;\n    }\n\n    namespace Address {\n        export function isValid(addr: string): boolean;\n        export function fromByteArray(bytes: number[]): IPv4 | IPv6;\n        export function parse(addr: string): IPv4 | IPv6;\n        export function parseCIDR(mask: string): [IPv4 | IPv6, number];\n        export function process(addr: string): IPv4 | IPv6;\n        export function subnetMatch(addr: IPv4, rangeList: RangeList<IPv4>, defaultName?: string): string;\n        export function subnetMatch(addr: IPv6, rangeList: RangeList<IPv6>, defaultName?: string): string;\n\n        export class IPv4 extends IP {\n            static broadcastAddressFromCIDR(addr: string): IPv4;\n            static isIPv4(addr: string): boolean;\n            static isValidFourPartDecimal(addr: string): boolean;\n            static isValid(addr: string): boolean;\n            static networkAddressFromCIDR(addr: string): IPv4;\n            static parse(addr: string): IPv4;\n            static parseCIDR(addr: string): [IPv4, number];\n            static subnetMaskFromPrefixLength(prefix: number): IPv4;\n            constructor(octets: number[]);\n            octets: number[]\n\n            kind(): 'ipv4';\n            match(addr: IPv4, bits: number): boolean;\n            match(mask: [IPv4, number]): boolean;\n            range(): IPv4Range;\n            subnetMatch(rangeList: RangeList<IPv4>, defaultName?: string): string;\n            toIPv4MappedAddress(): IPv6;\n        }\n\n        export class IPv6 extends IP {\n            static broadcastAddressFromCIDR(addr: string): IPv6;\n            static isIPv6(addr: string): boolean;\n            static isValid(addr: string): boolean;\n            static parse(addr: string): IPv6;\n            static parseCIDR(addr: string): [IPv6, number];\n            static subnetMaskFromPrefixLength(prefix: number): IPv6;\n            constructor(parts: number[]);\n            parts: number[]\n            zoneId?: string\n\n            isIPv4MappedAddress(): boolean;\n            kind(): 'ipv6';\n            match(addr: IPv6, bits: number): boolean;\n            match(mask: [IPv6, number]): boolean;\n            range(): IPv6Range;\n            subnetMatch(rangeList: RangeList<IPv6>, defaultName?: string): string;\n            toIPv4Address(): IPv4;\n        }\n    }\n\n    export = Address;\n}\n"}

version: '3.1'

services:
  homer:
    image: b4bz/homer
    container_name: homer
    restart: always
    volumes:
      - ./containers/homer/assets:/www/assets
    ports:
      - 13337:8080
    environment:
      - INIT_ASSETS=0
  postgresql:
    image: postgres:14
    volumes:
      - ./_data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - ${PGADMIN_PORT:-5050}:80
    logging:
      driver: none

  redis:
    image: redis
    ports:
      - 6379:6379
  takaro:
    build:
      context: .
      dockerfile: containers/dev.Dockerfile
    #      args:
    #       NODE_ENV: development
    #    command: "npm run start:dev"
    volumes:
      - ./packages:/app/packages
      - ./reports:/app/reports
      - ./scripts:/app/scripts
    environment:
      LOGGING_LEVEL: debug
      #LOGGING_MINIMAL: "true"
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql:5432/${POSTGRES_DB}
      REDIS_HOST: redis
      JWT_SECRET: ${JWT_SECRET}
      FUNCTIONS_EXECUTION_MODE: local
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgresql
      POSTGRES_ENCRYPTION_KEY: ${POSTGRES_ENCRYPTION_KEY}

      FIRECRACKER_BINARY: ${FC_BINARY}
      FIRECRACKER_ROOTFS: ${FC_ROOTFS}
      FIRECRACKER_SOCKET: ${FC_SOCKET}
      FIRECRACKER_AGENT_SOCKET: ${VM_AGENT_SOCKET}

      TAKARO_HOST: http://takaro:3000
      TEST_HTTP_TARGET: http://takaro:3000
      TAKARO_OAUTH_HOST: http://hydra:4444

      TAKARO_DEV_USER_PASSWORD: ${TAKARO_DEV_USER_PASSWORD}
      TAKARO_DEV_USER_NAME: ${TAKARO_DEV_USER_NAME}
      TAKARO_DEV_DOMAIN_NAME: ${TAKARO_DEV_DOMAIN_NAME}

      ADMIN_CLIENT_ID: ${ADMIN_CLIENT_ID}
      ADMIN_CLIENT_SECRET: ${ADMIN_CLIENT_SECRET}

      VITE_API: http://127.0.0.1:13000
      VITE_ORY_URL: http://127.0.0.1:4433

      CORS_ALLOWED_ORIGINS: http://127.0.0.1:13000,http://127.0.0.1:13001,http://127.0.0.1:13004,https://admin.socket.io
      
      TRACING_ENABLED: "false"
      TRACING_ENDPOINT: "http://tempo:4317"
      TAKARO_SERVICE: "dev-takaro"
    ports:
      # api
      - 13000:3000
      - 12001:12001
      - 12003:12003
      # web-main
      - 13001:13001
      # lib-components storybook
      - 13002:13002
      # agent
      - 13004:3001
      - 12002:12002
      # Docs
      - 13005:13005

  kratos-migrate:
    image: oryd/kratos:v0.11.1
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql_kratos:5432/kratos
    volumes:
      - ./containers/ory/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
  kratos:
    image: oryd/kratos:v0.11.1
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: on-failure
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql_kratos:5432/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - ./containers/ory/kratos:/etc/config/kratos
  postgresql_kratos:
    image: postgres:14
    volumes:
      - ./_data/kratos-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: kratos

  hydra:
    image: oryd/hydra:v2.0.3
    ports:
      - '4444:4444' # Public port
      - '4445:4445' # Admin port
      - '5555:5555' # Port for hydra token user
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - ./containers/ory/hydra:/etc/config/hydra
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql_hydra:5432/hydra
  hydra-migrate:
    image: oryd/hydra:v2.0.3
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql_hydra:5432/hydra
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - ./containers/ory/hydra:/etc/config/hydra
  postgresql_hydra:
    image: postgres:14
    volumes:
      - ./_data/hydra-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: hydra

  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'
volumes:
  pgadmin:

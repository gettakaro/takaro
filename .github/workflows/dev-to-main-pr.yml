# Takaro merges feature branches into the development branch first
# and then merges the development branch into the main branch.

# This workflow automates the process of creating a pull request from the development branch to the main branch.

name: Create dev to main PR
on:
  push:
    branches:
      - development
      - main
jobs:
  mainPromotion:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.TAKARO_CI_APP_ID }}
          private_key: ${{ secrets.TAKARO_CI_APP_PRIV_KEY }}
      - uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ steps.generate_token.outputs.token }}
      - name: Reset promotion branch
        run: |
          git fetch origin development:development
          git reset --hard development
      - name: Generate PR list
        id: pr_list
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          # Get the list of PRs merged into development but not in main
          echo "Fetching PR list..."
          
          # Get merge commits between main and development
          PR_LIST=$(git log origin/main..origin/development --merges --pretty=format:"%H %s" | grep -E "Merge pull request #[0-9]+" | head -20)
          
          # Format PR list as markdown
          PR_MARKDOWN=""
          PR_COUNT=0
          
          if [ -n "$PR_LIST" ]; then
            while IFS= read -r line; do
              PR_NUM=$(echo "$line" | grep -oE "#[0-9]+" | tr -d '#')
              if [ -n "$PR_NUM" ]; then
                # Get PR details using gh CLI
                PR_INFO=$(gh pr view "$PR_NUM" --json number,title,author,url 2>/dev/null || echo "")
                if [ -n "$PR_INFO" ]; then
                  PR_TITLE=$(echo "$PR_INFO" | jq -r '.title // "Unknown"')
                  PR_AUTHOR=$(echo "$PR_INFO" | jq -r '.author.login // "unknown"')
                  PR_URL=$(echo "$PR_INFO" | jq -r '.url // ""')
                  PR_MARKDOWN="${PR_MARKDOWN}- #${PR_NUM}: ${PR_TITLE} (@${PR_AUTHOR})\n"
                  ((PR_COUNT++))
                fi
              fi
            done <<< "$PR_LIST"
          fi
          
          # Create the PR body
          if [ $PR_COUNT -eq 0 ]; then
            PR_BODY="This PR merges the development branch into the main branch.\n\nNo pull requests found between branches."
          else
            PR_BODY="This PR merges the development branch into the main branch.\n\n## Included Pull Requests (${PR_COUNT})\n\n${PR_MARKDOWN}"
          fi
          
          # Add comparison link
          REPO_URL=$(gh repo view --json url -q .url)
          PR_BODY="${PR_BODY}\n\n## Branch Comparison\n[View all changes](${REPO_URL}/compare/main...development)"
          
          # Save to file to handle multiline content
          echo -e "$PR_BODY" > pr_body.txt
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: main-promotion
          labels: skip-changelog
          token: ${{ steps.generate_token.outputs.token }}
          title: ðŸ¤– Merge development into main
          body-path: pr_body.txt

  updateDevelopment:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.TAKARO_CI_APP_ID }}
          private_key: ${{ secrets.TAKARO_CI_APP_PRIV_KEY }}
      - uses: actions/checkout@v4
        with:
          ref: development
          token: ${{ steps.generate_token.outputs.token }}
      - name: Update dev
        run: |
          git config --global user.name 'takaro-ci-bot[bot]'
          git config --global user.email '138661031+takaro-ci-bot[bot]@users.noreply.github.com'        
          git fetch origin main:main
          git rebase main
          git push --force-with-lease origin development
